{"version":3,"file":"index.js","sources":["../../src/swiper/swiper.tsx","../../src/swiper/swiper-item.tsx","../../src/swiper/index.ts"],"sourcesContent":["import { onMounted, computed, ref, provide, watch, onUnmounted, toRefs, defineComponent } from 'vue';\nimport isObject from 'lodash/isObject';\nimport isNumber from 'lodash/isNumber';\nimport { useSwipe } from '../swipe-cell/useSwipe';\n\nimport config from '../config';\nimport props from './props';\nimport { SwiperChangeSource, SwiperNavigation } from './type';\nimport { useVModel } from '../shared';\nimport { preventDefault } from '../shared/dom';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\n\nconst { prefix } = config;\nconst name = `${prefix}-swiper`;\nconst navName = `${prefix}-swiper-nav`;\nexport default defineComponent({\n  name,\n  props,\n  emits: ['change', 'update:current', 'update:modelValue'],\n  setup(props, context) {\n    const swiperClass = usePrefixClass('swiper');\n    const readerTNodeJSX = useTNodeJSX();\n    const setOffset = (offset: number, direction = 'X'): void => {\n      translateContainer.value = `translate${direction}(${offset}px)`;\n    };\n\n    const root = ref();\n    const items = ref<any>([]);\n\n    const { current: value, modelValue } = toRefs(props);\n\n    const [current, setCurrent] = useVModel(value, modelValue, props.defaultCurrent);\n    const swiperContainer = ref<HTMLElement | null>(null);\n\n    const animating = ref(false);\n    const disabled = ref(false);\n    const isSwiperDisabled = computed(() => props.disabled === true);\n    const translateContainer = ref('');\n\n    const isVertical = computed(() => props.direction === 'vertical');\n    const containerHeight = ref('auto');\n\n    const navigation = computed((): SwiperNavigation => props.navigation);\n\n    const isBottomPagination = computed(() => {\n      let isShowSwiperNav = false;\n      if (typeof props.navigation === 'object') {\n        isShowSwiperNav =\n          (!navigation.value?.paginationPosition || navigation.value?.paginationPosition === 'bottom') &&\n          (navigation.value?.type === 'dots' || navigation.value?.type === 'dots-bar') &&\n          enableNavigation?.value;\n      }\n      return isShowSwiperNav;\n    });\n\n    const rootClass = computed(() => {\n      return [\n        `${swiperClass.value}`,\n        `${swiperClass.value}--${props.type}`,\n        `${\n          isBottomPagination.value && navigation.value?.placement\n            ? `${swiperClass.value}--${navigation.value?.placement}`\n            : ''\n        }`,\n      ];\n    });\n\n    const enableNavigation = computed(() => {\n      if (typeof props.navigation === 'object') {\n        return navigation.value?.minShowNum ? items.value.length >= navigation.value?.minShowNum : true;\n      }\n      return false;\n    });\n\n    let autoplayTimer: any = null;\n\n    const onItemClick = () => {\n      props.onClick?.(current.value ?? 0);\n    };\n\n    const move = (step: number, source: SwiperChangeSource, isReset = false) => {\n      animating.value = true;\n      processIndex(isReset ? step : (current.value as number) + step, source);\n\n      const moveDirection = !isVertical.value ? 'X' : 'Y';\n      const distance = root.value?.[isVertical.value ? 'offsetHeight' : 'offsetWidth'] ?? 0;\n\n      translateContainer.value = `translate${moveDirection}(${isReset ? 0 : -1 * distance * step}px)`;\n    };\n\n    const handleAnimationEnd = () => {\n      disabled.value = false;\n      animating.value = false;\n      translateContainer.value = 'translateX(0)';\n\n      updateItemPosition();\n    };\n\n    const stopAutoplay = () => {\n      if (!autoplayTimer) return;\n      clearInterval(autoplayTimer as number);\n      autoplayTimer = null;\n    };\n\n    const startAutoplay = () => {\n      if (typeof props.current === 'number') return false;\n      if (!props?.autoplay || autoplayTimer !== null) return false; // stop repeat autoplay\n      autoplayTimer = setInterval(() => {\n        goNext('autoplay');\n      }, props?.interval);\n    };\n\n    const goPrev = (source: SwiperChangeSource) => {\n      disabled.value = true;\n      move(-1, source);\n    };\n    const goNext = (source: SwiperChangeSource) => {\n      disabled.value = true;\n      move(1, source);\n    };\n\n    const processIndex = (index: number, source: SwiperChangeSource) => {\n      const max = items.value.length;\n      let val = index;\n\n      if (index < 0) {\n        val = props.loop ? max - 1 : 0;\n      }\n      if (index >= max) {\n        val = props.loop ? 0 : max - 1;\n      }\n      setCurrent(val);\n      context.emit('change', val, { source });\n    };\n\n    const { lengthX, lengthY } = useSwipe(swiperContainer, {\n      onSwipeStart() {\n        if (disabled.value || isSwiperDisabled.value || !items.value.length) return;\n        stopAutoplay();\n      },\n      onSwipe(e: TouchEvent) {\n        if (disabled.value || isSwiperDisabled.value || !items.value.length) return;\n        onTouchMove(e);\n      },\n      onSwipeEnd() {\n        if (disabled.value || isSwiperDisabled.value || !items.value.length) return;\n        onTouchEnd();\n      },\n    });\n\n    const onTouchMove = (event: TouchEvent) => {\n      preventDefault(event, false);\n      const distanceX = lengthX.value;\n      const distanceY = lengthY.value;\n\n      animating.value = false;\n\n      if (!isVertical.value) {\n        setOffset(-distanceX);\n      } else {\n        setOffset(-distanceY, 'Y');\n      }\n    };\n\n    const onTouchEnd = () => {\n      const distanceX = lengthX.value;\n      const distanceY = lengthY.value;\n\n      if ((!isVertical.value && distanceX < -100) || (isVertical.value && distanceY < -100)) {\n        move(-1, 'touch');\n      } else if ((!isVertical.value && distanceX > 100) || (isVertical.value && distanceY > 100)) {\n        move(1, 'touch');\n      } else {\n        move(current.value as number, 'touch', true);\n      }\n      startAutoplay();\n    };\n\n    const addChild = (item: any) => {\n      items.value.push(item);\n    };\n\n    const removeChild = (uid: number) => {\n      const index = items.value.findIndex((item: any) => item.uid === uid);\n      items.value.splice(index, 1);\n\n      if (current.value + 1 > items.value.length) {\n        goNext('autoplay');\n      }\n    };\n\n    const updateItemPosition = () => {\n      items.value.forEach((item: any, index: number) => {\n        item.calcTranslateStyle(index, current.value);\n      });\n    };\n\n    const setContainerHeight = (height: number | string) =>\n      (containerHeight.value = isNumber(height) ? `${height}px` : height);\n\n    const updateContainerHeight = () => {\n      const target = items.value[current.value ?? 0];\n      const rect = target?.proxy?.$el.getBoundingClientRect();\n\n      if (props.height) {\n        setContainerHeight(props.height);\n      } else if (rect) {\n        setContainerHeight(rect.height);\n      }\n      updateItemPosition();\n    };\n\n    watch(current, updateContainerHeight);\n\n    provide('parent', {\n      loop: props.loop,\n      root,\n      items,\n      isVertical,\n      addChild,\n      removeChild,\n      setContainerHeight,\n    });\n\n    onMounted(() => {\n      startAutoplay();\n      updateItemPosition();\n      updateContainerHeight();\n    });\n\n    onUnmounted(() => {\n      stopAutoplay();\n    });\n    return () => {\n      const swiperNav = () => {\n        if (navigation.value && enableNavigation.value) {\n          const controlsNav = () => {\n            if (!isVertical.value && !!navigation.value?.showControls) {\n              return (\n                <span class={`${navName}__btn`}>\n                  <span class={`${navName}__btn--prev`} onClick={() => goPrev('nav')} />\n                  <span class={`${navName}__btn--next`} onClick={() => goNext('nav')} />\n                </span>\n              );\n            }\n          };\n          const typeNav = () => {\n            if ('type' in navigation.value) {\n              // dots\n              const dots = () => {\n                if (['dots', 'dots-bar'].includes(navigation.value?.type || '')) {\n                  return (\n                    <>\n                      {items.value.map((_: any, index: number) => (\n                        <span\n                          key={`page${index}`}\n                          class={[\n                            `${navName}__${navigation.value?.type}-item`,\n                            index === current.value ? `${navName}__${navigation.value?.type}-item--active` : '',\n                            `${navName}__${navigation.value?.type}-item--${props.direction}`,\n                          ]}\n                        />\n                      ))}\n                    </>\n                  );\n                }\n              };\n              // fraction\n              const fraction = () => {\n                if (navigation.value?.type === 'fraction') {\n                  return <span>{`${(current.value ?? 0) + 1}/${items.value.length}`}</span>;\n                }\n              };\n              return (\n                <span\n                  class={[\n                    `${navName}--${props.direction}`,\n                    `${navName}__${navigation.value?.type || ''}`,\n                    `${navName}--${navigation.value?.paginationPosition || 'bottom'}`,\n                    `${\n                      isBottomPagination.value && navigation.value?.placement\n                        ? `${navName}--${navigation.value?.placement}`\n                        : ''\n                    }`,\n                  ]}\n                >\n                  {dots()}\n                  {fraction()}\n                </span>\n              );\n            }\n          };\n\n          return (\n            <>\n              {controlsNav()}\n              {typeNav()}\n            </>\n          );\n        }\n        return isObject(props.navigation) ? '' : readerTNodeJSX('navigation');\n      };\n      return (\n        <div ref={root} class={rootClass.value}>\n          <div\n            ref={swiperContainer}\n            class={`${swiperClass.value}__container`}\n            style={{\n              flexDirection: !isVertical.value ? 'row' : 'column',\n              transition: animating.value ? `transform ${props.duration}ms` : 'none',\n              transform: translateContainer.value,\n              height: containerHeight.value,\n            }}\n            onTransitionend={(event: TransitionEvent) => {\n              if (event.target === event.currentTarget) {\n                handleAnimationEnd();\n              }\n            }}\n            onClick={onItemClick}\n          >\n            {readerTNodeJSX('default')}\n          </div>\n          {swiperNav()}\n        </div>\n      );\n    };\n  },\n});\n","import { ref, inject, computed, getCurrentInstance, onMounted, onUnmounted, watch, defineComponent } from 'vue';\nimport { useElementBounding } from '@vueuse/core';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-swiper-item`;\nexport default defineComponent({\n  name,\n  setup() {\n    const { addChild, removeChild, isVertical, root, items, setContainerHeight } = inject('parent') as any;\n    const swiperItemClass = usePrefixClass('swiper-item');\n    const readerTNodeJSX = useTNodeJSX();\n    const selfRef = ref(null);\n    const rootStyle = ref('');\n    const instance = getCurrentInstance();\n\n    const direction = computed(() => (isVertical.value ? 'Y' : 'X'));\n\n    const calcTranslateStyle = (index: number, activeIndex: number) => {\n      const distance = root.value?.[isVertical.value ? 'offsetHeight' : 'offsetWidth'] ?? 0;\n      const lastItemIndex = items.value.length - 1;\n      let step = index - activeIndex;\n      // lastItem\n      if (activeIndex === lastItemIndex && index === 0) {\n        step = 1;\n      }\n      // firstItem\n      if (activeIndex === 0 && index === lastItemIndex && index !== 1) {\n        step = -1;\n      }\n\n      if (activeIndex === index) step = 0;\n\n      rootStyle.value = `transform: translate${direction.value}(${step * distance}px)`;\n    };\n    const { height } = useElementBounding(selfRef);\n\n    watch(height, (val) => {\n      setContainerHeight(val);\n    });\n\n    onMounted(() => {\n      addChild({\n        proxy: instance?.proxy,\n        uid: instance?.uid,\n        calcTranslateStyle,\n      });\n    });\n\n    onUnmounted(() => {\n      removeChild(instance?.uid);\n    });\n\n    return () => (\n      <div ref={selfRef} class={swiperItemClass.value} style={rootStyle.value}>\n        {readerTNodeJSX('default')}\n      </div>\n    );\n  },\n});\n","import _Swiper from './swiper';\nimport _SwiperItem from './swiper-item';\nimport { withInstall, WithInstallType } from '../shared';\nimport { TdSwiperProps } from './type';\n\nimport './style';\n\nexport * from './type';\nexport type SwiperProps = TdSwiperProps;\n\nexport const Swiper: WithInstallType<typeof _Swiper> = withInstall(_Swiper);\nexport const SwiperItem: WithInstallType<typeof _SwiperItem> = withInstall(_SwiperItem);\n"],"names":["prefix","config","name","navName","defineComponent","props","emits","setup","context","swiperClass","usePrefixClass","readerTNodeJSX","useTNodeJSX","setOffset","offset","direction","arguments","length","undefined","translateContainer","value","concat","root","ref","items","_toRefs","toRefs","current","modelValue","_useVModel","useVModel","defaultCurrent","_useVModel2","_slicedToArray","setCurrent","swiperContainer","animating","disabled","isSwiperDisabled","computed","isVertical","containerHeight","navigation","isBottomPagination","isShowSwiperNav","_typeof","_navigation$value","_navigation$value2","_navigation$value3","_navigation$value4","paginationPosition","type","enableNavigation","rootClass","_navigation$value5","_navigation$value6","placement","_navigation$value7","_navigation$value8","minShowNum","autoplayTimer","onItemClick","_props2$onClick","_current$value","onClick","move","step","source","_root$value","_root$value2","isReset","processIndex","moveDirection","distance","handleAnimationEnd","updateItemPosition","stopAutoplay","clearInterval","startAutoplay","autoplay","setInterval","goNext","interval","goPrev","index","max","val","loop","emit","_useSwipe","useSwipe","onSwipeStart","onSwipe","e","onTouchMove","onSwipeEnd","onTouchEnd","lengthX","lengthY","event","preventDefault","distanceX","distanceY","addChild","item","push","removeChild","uid","findIndex","splice","forEach","calcTranslateStyle","setContainerHeight","height","isNumber","updateContainerHeight","_current$value2","_target$proxy","target","rect","proxy","$el","getBoundingClientRect","watch","provide","onMounted","onUnmounted","swiperNav","controlsNav","_navigation$value9","showControls","_createVNode","typeNav","_navigation$value15","_navigation$value16","_navigation$value17","_navigation$value18","dots","_navigation$value10","includes","_Fragment","map","_","_navigation$value11","_navigation$value12","_navigation$value13","fraction","_navigation$value14","_current$value3","isObject","flexDirection","transition","duration","transform","onTransitionend","currentTarget","_inject","inject","swiperItemClass","selfRef","rootStyle","instance","getCurrentInstance","activeIndex","lastItemIndex","_useElementBounding","useElementBounding","Swiper","withInstall","_Swiper","SwiperItem","_SwiperItem"],"mappings":"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"}