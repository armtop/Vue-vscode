{"version":3,"file":"index.js","sources":["../../src/skeleton/skeleton.tsx","../../src/skeleton/index.ts"],"sourcesContent":["import { h, defineComponent, watch, ref } from 'vue';\nimport isNumber from 'lodash/isNumber';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport { useContent } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\nimport config from '../config';\nimport SkeletonProps from './props';\nimport { SkeletonRowCol, SkeletonRowColObj, TdSkeletonProps } from './type';\nimport { ClassName, Styles } from '../common';\n\nconst { prefix } = config;\nconst name = `${prefix}-skeleton`;\nconst ThemeMap: Record<TdSkeletonProps['theme'], SkeletonRowCol> = {\n  avatar: [{ type: 'circle', size: '48px' }],\n  image: [{ type: 'rect', size: '72px' }],\n  text: [\n    [\n      { width: '24%', height: '16px', marginRight: '16px' },\n      { width: '76%', height: '16px' },\n    ],\n    1,\n  ],\n  paragraph: [1, 1, 1, { width: '55%' }],\n};\n\nconst getColItemStyle = (obj: SkeletonRowColObj): Styles => {\n  const styleName = [\n    'width',\n    'height',\n    'marginRight',\n    'marginLeft',\n    'margin',\n    'size',\n    'background',\n    'backgroundColor',\n    'borderRadius',\n  ];\n  const style: Styles = {};\n  styleName.forEach((name) => {\n    if (name in obj) {\n      const px = isNumber(obj[name]) ? `${obj[name]}px` : obj[name];\n      if (name === 'size') {\n        [style.width, style.height] = [px, px];\n      } else {\n        style[name] = px;\n      }\n    }\n  });\n  return style;\n};\n\nexport default defineComponent({\n  name,\n  props: SkeletonProps,\n  setup(props, { slots }) {\n    const isShow = ref(false);\n    const renderContent = useContent();\n\n    const componentName = usePrefixClass('skeleton');\n\n    const getColItemClass = (obj: SkeletonRowColObj): ClassName => [\n      `${componentName.value}__col`,\n      `${componentName.value}--type-${obj.type || 'text'}`,\n      { [`${componentName.value}--animation-${props.animation}`]: props.animation },\n    ];\n\n    const renderCols = (_cols: Number | SkeletonRowColObj | Array<SkeletonRowColObj>) => {\n      let cols: Array<SkeletonRowColObj> = [];\n      if (isArray(_cols)) {\n        cols = _cols;\n      } else if (isNumber(_cols)) {\n        cols = new Array(_cols).fill({ type: 'text' });\n      } else {\n        cols = [_cols as SkeletonRowColObj];\n      }\n\n      return cols.map((obj) => (\n        <div class={getColItemClass(obj)} style={getColItemStyle(obj)}>\n          {isFunction(obj.content) ? obj.content(h) : obj.content}\n        </div>\n      ));\n    };\n\n    const renderRowCol = (_rowCol?: SkeletonRowCol) => {\n      const rowCol: SkeletonRowCol = _rowCol || props.rowCol;\n\n      return rowCol.map((item) => <div class={`${name}__row`}>{renderCols(item)}</div>);\n    };\n\n    watch(\n      () => props.loading,\n      (val) => {\n        if (!val || props.delay === 0) {\n          isShow.value = val;\n          return;\n        }\n        setTimeout(() => {\n          isShow.value = val;\n        }, props.delay);\n      },\n      { immediate: true },\n    );\n\n    return () => {\n      const content = renderContent('default', 'content');\n      if (slots.default) {\n        return <div>{content}</div>;\n      }\n\n      if (!isShow.value) {\n        return;\n      }\n\n      const children = [];\n\n      // 保持优先级： rowCol > theme，增加默认值兜底\n      if (props.rowCol) {\n        children.push(renderRowCol(props.rowCol));\n      } else if (props.theme) {\n        children.push(renderRowCol(ThemeMap[props.theme]));\n      } else if (!props.theme && !props.rowCol) {\n        // 什么都不传时，传入默认 rowCol\n        children.push(\n          renderRowCol([\n            [\n              { width: '24%', height: '16px', marginRight: '16px' },\n              { width: '76%', height: '16px' },\n            ],\n            1,\n          ]),\n        );\n      }\n\n      return <div class={componentName.value}>{children}</div>;\n    };\n  },\n});\n","import Skeleton from './skeleton';\nimport { withInstall, WithInstallType } from '../shared';\n\nimport { TdSkeletonProps } from './type';\nimport './style';\n\nexport * from './type';\nexport type SkeletonProps = TdSkeletonProps;\n\nconst _Skeleton: WithInstallType<typeof Skeleton> = withInstall(Skeleton);\nexport default _Skeleton;\n"],"names":["prefix","config","name","ThemeMap","avatar","type","size","image","text","width","height","marginRight","paragraph","getColItemStyle","obj","styleName","style","forEach","px","isNumber","_ref","defineComponent","props","SkeletonProps","setup","_ref2","slots","isShow","ref","renderContent","useContent","componentName","usePrefixClass","getColItemClass","concat","value","_defineProperty","animation","renderCols","_cols","cols","isArray","Array","fill","map","_createVNode","isFunction","content","h","renderRowCol","_rowCol","rowCol","item","watch","loading","val","delay","setTimeout","immediate","default","children","push","theme","_Skeleton","withInstall","Skeleton"],"mappings":"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"}