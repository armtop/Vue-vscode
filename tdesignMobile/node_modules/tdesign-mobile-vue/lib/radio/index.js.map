{"version":3,"file":"index.js","sources":["../../src/radio/radio.tsx","../../src/radio/radio-group.tsx","../../src/radio/index.ts"],"sourcesContent":["import { inject, computed, defineComponent, getCurrentInstance, Ref, toRefs } from 'vue';\nimport { CheckIcon, CheckCircleFilledIcon } from 'tdesign-icons-vue-next';\n\nimport { NOOP, useVModel } from '../shared';\nimport config from '../config';\nimport props from './props';\nimport { RadioValue, TdRadioGroupProps } from './type';\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-radio`,\n  props,\n  setup(props) {\n    const renderTNodeContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n    const radioClass = usePrefixClass('radio');\n\n    const { checked, modelValue, block } = toRefs(props);\n    const [innerChecked, setInnerChecked] = useVModel(\n      checked,\n      modelValue,\n      props.defaultChecked,\n      props.onChange,\n      'checked',\n    );\n\n    const rootGroupProps = inject('rootGroupProps', {}) as TdRadioGroupProps;\n    const rootGroupValue = inject('rootGroupValue', {}) as Ref;\n    const rootGroupChange = inject('rootGroupChange', NOOP) as (val: RadioValue, e: Event) => void;\n\n    // extend radioGroup disabled props\n    const groupDisabled = computed(() => rootGroupProps?.disabled);\n    const formDisabled = useFormDisabled(groupDisabled);\n\n    const isDisabled = computed(() => {\n      if (formDisabled.value == null && 'disabled' in rootGroupProps) return rootGroupProps.disabled;\n      return formDisabled.value;\n    });\n    const radioChecked = computed(() => innerChecked.value || props.value === rootGroupValue?.value);\n    const finalBorderless = computed(() => {\n      if (props.borderless == null && 'borderless' in rootGroupProps) return rootGroupProps.borderless;\n      return props.borderless;\n    });\n    const finalPlacement = computed(() => {\n      if (props.placement == null && 'placement' in rootGroupProps) return rootGroupProps.placement;\n      return props.placement || 'left';\n    });\n\n    const finalAllowUncheck = computed(() => {\n      if (props.allowUncheck == null && 'allowUncheck' in rootGroupProps) return rootGroupProps.allowUncheck;\n      return props.allowUncheck;\n    });\n\n    // input props attribute\n    const inputProps = computed(() => ({\n      name: rootGroupProps.name || props.name,\n      checked: radioChecked.value,\n      disabled: isDisabled.value,\n      value: props.value,\n    }));\n\n    const iconContent = computed(() => {\n      if (props.icon?.length === 2) {\n        const iconIndex = radioChecked.value ? 0 : 1;\n        return props.icon[iconIndex];\n      }\n      return null;\n    });\n\n    const radioClasses = computed(() => [\n      `${radioClass.value}`,\n      `${radioClass.value}--${finalPlacement.value}`,\n      {\n        [`${radioClass.value}--block`]: block.value,\n      },\n    ]);\n\n    const titleClasses = computed(() => [\n      `${radioClass.value}__title`,\n      {\n        [`${radioClass.value}__title--disabled`]: isDisabled.value,\n      },\n    ]);\n\n    const iconClass = computed(() => [\n      `${radioClass.value}__icon`,\n      `${radioClass.value}__icon--${finalPlacement.value}`,\n      {\n        [`${radioClass.value}__icon--checked`]: radioChecked.value,\n        [`${radioClass.value}__icon--disabled`]: isDisabled.value,\n      },\n    ]);\n\n    const radioContentChange = (e: Event) => {\n      e.stopPropagation();\n      if (props.contentDisabled) {\n        return;\n      }\n      radioOrgChange(e);\n    };\n\n    const radioOrgChange = (e: Event) => {\n      if (isDisabled.value) {\n        return;\n      }\n      if (rootGroupChange) {\n        rootGroupChange(finalAllowUncheck.value && radioChecked.value ? '' : props.value, e);\n      } else {\n        if (!finalAllowUncheck.value && radioChecked.value) return;\n        setInnerChecked(!radioChecked.value, { e });\n      }\n    };\n\n    const readerIcon = () => {\n      if (radioChecked.value) {\n        if (props.icon === 'circle') {\n          return <CheckCircleFilledIcon class={`${radioClass.value}__icon-wrap`} />;\n        }\n        if (props.icon === 'line') {\n          return <CheckIcon class={`${radioClass.value}__icon-wrap`} />;\n        }\n        if (props.icon === 'dot') {\n          return (\n            <div\n              class={[\n                `${radioClass.value}__icon-${props.icon}`,\n                { [`${radioClass.value}__icon-${props.icon}--disabled`]: isDisabled.value },\n              ]}\n            />\n          );\n        }\n      } else {\n        if (props.icon === 'circle' || props.icon === 'dot') {\n          return (\n            <div\n              class={[\n                `${radioClass.value}__icon-circle`,\n                { [`${radioClass.value}__icon-circle--disabled`]: isDisabled.value },\n              ]}\n            />\n          );\n        }\n        if (props.icon === 'line') {\n          return <div class=\"placeholder\" />;\n        }\n      }\n    };\n\n    return () => {\n      const label = renderTNodeContent('default', 'label');\n      const content = renderTNodeJSX('content');\n      return (\n        <div class={radioClasses.value} onClick={radioOrgChange}>\n          <input type=\"radio\" class={`${radioClass.value}__original`} {...inputProps.value} />\n          <div class={iconClass.value}>\n            {readerIcon()}\n            {iconContent.value}\n          </div>\n          <div class={`${radioClass.value}__content`} onClick={radioContentChange}>\n            {label && (\n              <span class={titleClasses.value} style={`-webkit-line-clamp: ${props.maxLabelRow}`}>\n                {label}\n              </span>\n            )}\n            {content && (\n              <div\n                class={[`${radioClass.value}__description`, { [`${radioClass.value}__description`]: isDisabled.value }]}\n                style={`-webkit-line-clamp: ${props.maxContentRow}`}\n              >\n                {content}\n              </div>\n            )}\n          </div>\n          {!finalBorderless.value && (\n            <div class={`${radioClass.value}__border ${radioClass.value}__border--${finalPlacement.value}`} />\n          )}\n        </div>\n      );\n    };\n  },\n});\n","import { provide, defineComponent, computed } from 'vue';\nimport { useDefault } from '../shared';\nimport props from '../radio/radio-group-props';\nimport { RadioOption, RadioOptionObj, RadioValue, TdRadioGroupProps } from '../radio/type';\nimport TRadio from './radio';\nimport config from '../config';\nimport { KeysType } from '../common';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-radio-group`,\n  props,\n  setup(props, context) {\n    const renderTNodeJSX = useTNodeJSX();\n    const radioGroupClass = usePrefixClass('radio-group');\n\n    const [groupValue, setGroupValue] = useDefault<RadioValue, TdRadioGroupProps>(\n      props,\n      context.emit,\n      'value',\n      'change',\n    );\n\n    const keys = computed((): KeysType => props.keys);\n\n    const groupOptions = computed(() => {\n      return props.options?.map((option: RadioOption) => {\n        let opt = option as RadioOptionObj;\n        if (typeof option === 'string' || typeof option === 'number') {\n          opt = { value: option, label: option.toString() };\n        }\n        return opt;\n      });\n    });\n    const handleRadioChange = (val: RadioValue, e: Event) => {\n      if (props.allowUncheck && val === groupValue.value) {\n        setGroupValue('', { e });\n      } else {\n        setGroupValue(val, { e });\n      }\n    };\n\n    provide('rootGroupProps', props);\n    provide('rootGroupValue', groupValue);\n    provide('rootGroupChange', handleRadioChange);\n    return () => {\n      return (\n        <div class={radioGroupClass.value} role=\"radiogroup\">\n          {props.options &&\n            groupOptions.value.map((opt, index) => (\n              <TRadio\n                name={props.name}\n                icon={props.icon}\n                checked={groupValue.value === opt[keys.value?.value ?? 'value']}\n                disabled={opt?.disabled ?? props.disabled}\n                value={opt[keys.value?.value ?? 'value']}\n                label={opt[keys.value?.label ?? 'label']}\n                placement={props.placement}\n              />\n            ))}\n          {!props.options && renderTNodeJSX('default')}\n        </div>\n      );\n    };\n  },\n});\n","import Radio from './radio';\nimport _RadioGroup from './radio-group';\nimport { withInstall, WithInstallType } from '../shared';\n\nimport './style';\n\nimport { TdRadioProps, TdRadioGroupProps } from './type';\n\nexport * from './type';\nexport type RadioProps = TdRadioProps;\nexport type RadioGroupProps = TdRadioGroupProps;\n\nexport const RadioGroup = withInstall(_RadioGroup);\n\nconst _Radio: WithInstallType<typeof Radio> = withInstall(Radio);\nexport default _Radio;\n"],"names":["prefix","config","defineComponent","name","props","setup","renderTNodeContent","useContent","renderTNodeJSX","useTNodeJSX","radioClass","usePrefixClass","_toRefs","toRefs","checked","modelValue","block","_useVModel","useVModel","defaultChecked","onChange","_useVModel2","_slicedToArray","innerChecked","setInnerChecked","rootGroupProps","inject","rootGroupValue","rootGroupChange","NOOP","groupDisabled","computed","disabled","formDisabled","useFormDisabled","isDisabled","value","radioChecked","finalBorderless","borderless","finalPlacement","placement","finalAllowUncheck","allowUncheck","inputProps","iconContent","_props2$icon","icon","length","iconIndex","radioClasses","concat","_defineProperty","titleClasses","iconClass","radioContentChange","e","stopPropagation","contentDisabled","radioOrgChange","readerIcon","_createVNode","CheckCircleFilledIcon","CheckIcon","label","content","_mergeProps","maxLabelRow","maxContentRow","context","radioGroupClass","_useDefault","useDefault","emit","_useDefault2","groupValue","setGroupValue","keys","groupOptions","_props2$options","options","map","option","opt","toString","handleRadioChange","val","provide","index","_keys$value","_opt$disabled","_keys$value$value2","_keys$value2","_keys$value$label","_keys$value3","RadioGroup","withInstall","_RadioGroup","_Radio","Radio"],"mappings":"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"}