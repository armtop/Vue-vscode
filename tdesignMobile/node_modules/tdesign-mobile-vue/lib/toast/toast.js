/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var vue = require('vue');
var overlay_index = require('../overlay/index.js');
var toast_props = require('./props.js');
var config = require('../config.js');
var shared_renderTnode = require('../shared/render-tnode.js');
var shared_render = require('../shared/render.js');
require('../shared/dom.js');
require('lodash/isFunction');
require('lodash/isString');
require('../shared/util.js');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/isNumber');
require('../overlay/props.js');
require('../hooks/useClass.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-191173f8.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-2088457f.js');
require('dayjs');
require('../hooks/tnode.js');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../shared/component.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-toast");
var bodyLockClass = "".concat(name, "-overflow-hidden");
var script = vue.defineComponent({
  name: name,
  components: {
    TOverlay: overlay_index["default"],
    TNode: shared_renderTnode["default"]
  },
  props: toast_props["default"],
  setup: function setup(props) {
    var toastTypeIcon = {
      loading: tdesignIconsVueNext.LoadingIcon,
      success: tdesignIconsVueNext.CheckCircleIcon,
      error: tdesignIconsVueNext.CloseCircleIcon
    };
    var internalInstance = vue.getCurrentInstance();
    var messageContent = vue.computed(function () {
      return shared_render.renderTNode(internalInstance, "message");
    });
    var iconContent = vue.computed(function () {
      var iconNode = shared_render.renderTNode(internalInstance, "icon");
      if (iconNode === void 0 && props.theme) {
        iconNode = vue.h(toastTypeIcon[props.theme]);
      }
      return iconNode;
    });
    var classes = vue.computed(function () {
      return ["".concat(name), "".concat(name, "__content"), "".concat(name, "__icon"), _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(name, "--").concat(props.direction), props.direction), "".concat(name, "__content--").concat(props.direction), props.direction), "".concat(name, "--loading"), props.theme === "loading")];
    });
    var textClasses = vue.computed(function () {
      return [_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(name, "__text"), !iconContent.value), "".concat(name, "__text--").concat(props.direction), props.direction)];
    });
    var iconClasses = vue.computed(function () {
      return [_defineProperty__default["default"]({}, "".concat(name, "__icon--").concat(props.direction), props.direction)];
    });
    var lock = function lock() {
      document.body.classList.add(bodyLockClass);
    };
    var unlock = function unlock() {
      document.body.classList.remove(bodyLockClass);
    };
    var customOverlayProps = vue.computed(function () {
      var toastOverlayProps = {
        preventScrollThrough: props.preventScrollThrough,
        visible: props.showOverlay
      };
      props.preventScrollThrough ? lock() : unlock();
      return _objectSpread(_objectSpread({}, props.overlayProps), toastOverlayProps);
    });
    vue.onUnmounted(function () {
      unlock();
    });
    return _objectSpread({
      name: vue.ref(name),
      classes: classes,
      textClasses: textClasses,
      iconClasses: iconClasses,
      iconContent: iconContent,
      messageContent: messageContent,
      customOverlayProps: customOverlayProps
    }, vue.toRefs(props));
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_overlay = vue.resolveComponent("t-overlay");
  var _component_t_node = vue.resolveComponent("t-node");
  return vue.openBlock(), vue.createElementBlock("div", null, [vue.createVNode(_component_t_overlay, vue.normalizeProps(vue.guardReactiveProps(_ctx.customOverlayProps)), null, 16), vue.createElementVNode("div", {
    class: vue.normalizeClass(_ctx.classes),
    style: vue.normalizeStyle({
      top: _ctx.placement === "top" ? "25%" : _ctx.placement === "bottom" ? "75%" : "45%"
    })
  }, [_ctx.iconContent ? (vue.openBlock(), vue.createElementBlock("div", {
    key: 0,
    class: vue.normalizeClass(_ctx.iconClasses)
  }, [vue.createVNode(_component_t_node, {
    content: _ctx.iconContent
  }, null, 8, ["content"])], 2)) : vue.createCommentVNode("", true), _ctx.messageContent ? (vue.openBlock(), vue.createElementBlock("div", {
    key: 1,
    class: vue.normalizeClass(_ctx.textClasses)
  }, [vue.createVNode(_component_t_node, {
    content: _ctx.messageContent
  }, null, 8, ["content"])], 2)) : vue.createCommentVNode("", true)], 6)]);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=toast.js.map
