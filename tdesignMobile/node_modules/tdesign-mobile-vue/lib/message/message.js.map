{"version":3,"file":"message.js","sources":["../../src/message/message.vue","../../src/message/message.vue?vue&type=template&id=226e76ad&lang.js"],"sourcesContent":["<template>\n  <transition name=\"message\">\n    <div v-if=\"currentVisible\" ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\">\n      <div v-if=\"prefixIconContent\" :class=\"`${name}__icon--left`\">\n        <t-node :content=\"prefixIconContent\" />\n      </div>\n      <div ref=\"textWrapDOM\" :class=\"textWrapClasses\">\n        <div\n          ref=\"textDOM\"\n          :class=\"`${name}__text`\"\n          :style=\"scroll.marquee ? animateStyle : ''\"\n          @transitionend=\"handleTransitionend\"\n        >\n          <t-node v-if=\"computedContent\" :content=\"computedContent\"></t-node>\n        </div>\n      </div>\n      <div v-if=\"linkContent\" :class=\"`${name}__link`\" @click=\"onLinkClick\">\n        <t-node :content=\"linkContent\"></t-node>\n      </div>\n      <div v-if=\"closeBtnContent\" :class=\"[`${name}__close-wrap`, `${name}__icon--right`]\" @click=\"onCloseBtnClick\">\n        <t-node :content=\"closeBtnContent\"></t-node>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport {\n  h,\n  ref,\n  computed,\n  watch,\n  defineComponent,\n  getCurrentInstance,\n  toRefs,\n  reactive,\n  nextTick,\n  onMounted,\n} from 'vue';\nimport { CheckCircleFilledIcon, CloseIcon, InfoCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\n\nimport Link from '../link';\nimport messageProps from './props';\nimport { DrawMarquee, TdMessageProps } from './type';\nimport config from '../config';\nimport { renderContent, renderTNode, TNode, useVModel } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-message`;\nconst iconDefault = {\n  info: h(InfoCircleFilledIcon),\n  success: h(CheckCircleFilledIcon),\n  warning: h(InfoCircleFilledIcon),\n  error: h(InfoCircleFilledIcon),\n};\nconst closeBtnDefault = h(CloseIcon);\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: messageProps,\n  emits: ['durationEnd', 'closeBtnClick', 'update:value'],\n  setup(props, context) {\n    const internalInstance = getCurrentInstance();\n\n    // 初始化动画相关数据\n    const state = reactive({\n      duration: 0,\n      offset: 0,\n      listWidth: 0,\n      itemWidth: 0,\n      scroll: {\n        marquee: false,\n        speed: 50,\n        loop: -1, // 值为 -1 表示循环播放，值为 0 表示不循环播放\n        delay: 300,\n      },\n    });\n\n    const { visible, modelValue } = toRefs(props);\n    const [currentVisible, setVisible] = useVModel(visible, modelValue, props.defaultVisible);\n    const rootClasses = computed(() => ({\n      [name]: true,\n      [`${name}--${props.theme}`]: true,\n      [`${name}-align--${props.align}`]: !!props.align,\n    }));\n\n    const textWrapClasses = computed(() => ({\n      [`${name}__text-wrap`]: true,\n      [`${name}__text-nowrap`]: props.marquee,\n    }));\n\n    const changeNumToStr = (arr: TdMessageProps['offset'] = []) => {\n      return arr.map(function (item) {\n        return typeof item === 'number' ? `${item}px` : item;\n      });\n    };\n\n    const getMessageStylesOffset = (offset: TdMessageProps['offset']) => {\n      const arr = changeNumToStr(offset);\n      return {\n        top: arr[0],\n        right: arr[1],\n        left: arr[1],\n      };\n    };\n\n    const rootStyles = computed(() => {\n      const { offset } = props;\n      const offsetStyle: any = offset ? getMessageStylesOffset(offset) : [];\n      return {\n        zIndex: props.zIndex,\n        ...offsetStyle,\n      };\n    });\n\n    const prefixIconContent = computed(() =>\n      renderTNode(internalInstance, 'icon', { defaultNode: iconDefault?.[props.theme || 'info'] }),\n    );\n    // content\n    const computedContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n\n    // closeBtn\n    const closeBtnContent = computed(() => renderTNode(internalInstance, 'closeBtn', { defaultNode: closeBtnDefault }));\n\n    // link\n    const linkContent = computed(() => {\n      if (typeof props.link === 'function' || context.slots?.link) {\n        return renderTNode(internalInstance, 'link');\n      }\n\n      if (isObject(props.link) || isString(props.link)) {\n        const _link = isObject(props.link) ? { ...props.link } : { content: props.link };\n        return h(Link, { theme: 'primary', ..._link });\n      }\n      return null;\n    });\n    // 动画\n    const animateStyle = computed(() => ({\n      transform: state.offset ? `translateX(${state.offset}px)` : '',\n      transitionDuration: `${state.duration}s`,\n      transitionTimingFunction: 'linear',\n    }));\n\n    const textWrapDOM = ref();\n    const textDOM = ref();\n\n    const handleScrolling = () => {\n      if (!props?.marquee || (isObject(props?.marquee) && (props?.marquee as DrawMarquee))?.loop === 0) {\n        return;\n      }\n\n      const { loop, speed, delay } = state.scroll;\n\n      state.scroll = {\n        marquee: true,\n        // 负数统一当作循环播放\n        loop: Math.max(\n          props.marquee === true || (props.marquee as DrawMarquee)?.loop == null\n            ? loop\n            : (props.marquee as DrawMarquee)?.loop,\n          -1,\n        ),\n        // 速度必须为正数\n        speed: Math.max(\n          props.marquee === true || (props.marquee as DrawMarquee)?.speed == null\n            ? speed\n            : (props.marquee as DrawMarquee)?.speed,\n          1,\n        ),\n        // 延迟不可为负数\n        delay: Math.max(\n          props.marquee === true || (props.marquee as DrawMarquee)?.delay == null\n            ? delay\n            : (props.marquee as DrawMarquee)?.delay,\n          0,\n        ),\n      };\n      state.offset = 0;\n\n      // 设置动画\n      setTimeout(() => {\n        const textWrapDOMWidth = textWrapDOM.value?.getBoundingClientRect().width;\n        const textDOMWidth = textDOM.value?.getBoundingClientRect().width;\n        state.offset = -textDOMWidth;\n        state.duration = textDOMWidth / state.scroll.speed;\n        state.listWidth = textWrapDOMWidth;\n        state.itemWidth = textDOMWidth;\n      }, state.scroll.delay);\n    };\n\n    // 动画结束后，初始化动画\n    const handleTransitionend = () => {\n      resetTransition();\n\n      if (state.scroll.loop === -1) {\n        return;\n      }\n\n      state.scroll.loop = --state.scroll.loop;\n\n      if (state.scroll.loop === 0) {\n        state.scroll.marquee = false;\n      }\n    };\n\n    const resetTransition = () => {\n      state.duration = 0;\n      state.offset = state.listWidth;\n\n      setTimeout(() => {\n        state.offset = -state.itemWidth;\n        state.duration = (state.itemWidth + state.listWidth) / state.scroll.speed;\n      }, 0);\n    };\n\n    const onLinkClick = (e: MouseEvent) => {\n      props.onLinkClick?.({ e });\n    };\n\n    const onCloseBtnClick = () => {\n      props.onCloseBtnClick?.();\n      setVisible(false);\n    };\n\n    const handleDuration = () => {\n      if (props.duration > 0) {\n        setTimeout(() => {\n          props.onDurationEnd?.();\n          setVisible(false);\n        }, props.duration);\n      }\n    };\n\n    onMounted(() => {\n      nextTick(() => {\n        if (currentVisible.value) {\n          handleScrolling();\n        }\n      });\n    });\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        if (val === false) return;\n        setVisible(true);\n        handleDuration();\n        nextTick(handleScrolling);\n      },\n    );\n\n    return {\n      name: ref(name),\n      ...toRefs(state),\n      currentVisible,\n      rootClasses,\n      textWrapClasses,\n      rootStyles,\n      prefixIconContent,\n      computedContent,\n      closeBtnContent,\n      linkContent,\n      textWrapDOM,\n      textDOM,\n      animateStyle,\n      onCloseBtnClick,\n      onLinkClick,\n      handleTransitionend,\n    };\n  },\n});\n</script>\n","<template>\n  <transition name=\"message\">\n    <div v-if=\"currentVisible\" ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\">\n      <div v-if=\"prefixIconContent\" :class=\"`${name}__icon--left`\">\n        <t-node :content=\"prefixIconContent\" />\n      </div>\n      <div ref=\"textWrapDOM\" :class=\"textWrapClasses\">\n        <div\n          ref=\"textDOM\"\n          :class=\"`${name}__text`\"\n          :style=\"scroll.marquee ? animateStyle : ''\"\n          @transitionend=\"handleTransitionend\"\n        >\n          <t-node v-if=\"computedContent\" :content=\"computedContent\"></t-node>\n        </div>\n      </div>\n      <div v-if=\"linkContent\" :class=\"`${name}__link`\" @click=\"onLinkClick\">\n        <t-node :content=\"linkContent\"></t-node>\n      </div>\n      <div v-if=\"closeBtnContent\" :class=\"[`${name}__close-wrap`, `${name}__icon--right`]\" @click=\"onCloseBtnClick\">\n        <t-node :content=\"closeBtnContent\"></t-node>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport {\n  h,\n  ref,\n  computed,\n  watch,\n  defineComponent,\n  getCurrentInstance,\n  toRefs,\n  reactive,\n  nextTick,\n  onMounted,\n} from 'vue';\nimport { CheckCircleFilledIcon, CloseIcon, InfoCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport isObject from 'lodash/isObject';\nimport isString from 'lodash/isString';\n\nimport Link from '../link';\nimport messageProps from './props';\nimport { DrawMarquee, TdMessageProps } from './type';\nimport config from '../config';\nimport { renderContent, renderTNode, TNode, useVModel } from '../shared';\n\nconst { prefix } = config;\nconst name = `${prefix}-message`;\nconst iconDefault = {\n  info: h(InfoCircleFilledIcon),\n  success: h(CheckCircleFilledIcon),\n  warning: h(InfoCircleFilledIcon),\n  error: h(InfoCircleFilledIcon),\n};\nconst closeBtnDefault = h(CloseIcon);\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: messageProps,\n  emits: ['durationEnd', 'closeBtnClick', 'update:value'],\n  setup(props, context) {\n    const internalInstance = getCurrentInstance();\n\n    // 初始化动画相关数据\n    const state = reactive({\n      duration: 0,\n      offset: 0,\n      listWidth: 0,\n      itemWidth: 0,\n      scroll: {\n        marquee: false,\n        speed: 50,\n        loop: -1, // 值为 -1 表示循环播放，值为 0 表示不循环播放\n        delay: 300,\n      },\n    });\n\n    const { visible, modelValue } = toRefs(props);\n    const [currentVisible, setVisible] = useVModel(visible, modelValue, props.defaultVisible);\n    const rootClasses = computed(() => ({\n      [name]: true,\n      [`${name}--${props.theme}`]: true,\n      [`${name}-align--${props.align}`]: !!props.align,\n    }));\n\n    const textWrapClasses = computed(() => ({\n      [`${name}__text-wrap`]: true,\n      [`${name}__text-nowrap`]: props.marquee,\n    }));\n\n    const changeNumToStr = (arr: TdMessageProps['offset'] = []) => {\n      return arr.map(function (item) {\n        return typeof item === 'number' ? `${item}px` : item;\n      });\n    };\n\n    const getMessageStylesOffset = (offset: TdMessageProps['offset']) => {\n      const arr = changeNumToStr(offset);\n      return {\n        top: arr[0],\n        right: arr[1],\n        left: arr[1],\n      };\n    };\n\n    const rootStyles = computed(() => {\n      const { offset } = props;\n      const offsetStyle: any = offset ? getMessageStylesOffset(offset) : [];\n      return {\n        zIndex: props.zIndex,\n        ...offsetStyle,\n      };\n    });\n\n    const prefixIconContent = computed(() =>\n      renderTNode(internalInstance, 'icon', { defaultNode: iconDefault?.[props.theme || 'info'] }),\n    );\n    // content\n    const computedContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n\n    // closeBtn\n    const closeBtnContent = computed(() => renderTNode(internalInstance, 'closeBtn', { defaultNode: closeBtnDefault }));\n\n    // link\n    const linkContent = computed(() => {\n      if (typeof props.link === 'function' || context.slots?.link) {\n        return renderTNode(internalInstance, 'link');\n      }\n\n      if (isObject(props.link) || isString(props.link)) {\n        const _link = isObject(props.link) ? { ...props.link } : { content: props.link };\n        return h(Link, { theme: 'primary', ..._link });\n      }\n      return null;\n    });\n    // 动画\n    const animateStyle = computed(() => ({\n      transform: state.offset ? `translateX(${state.offset}px)` : '',\n      transitionDuration: `${state.duration}s`,\n      transitionTimingFunction: 'linear',\n    }));\n\n    const textWrapDOM = ref();\n    const textDOM = ref();\n\n    const handleScrolling = () => {\n      if (!props?.marquee || (isObject(props?.marquee) && (props?.marquee as DrawMarquee))?.loop === 0) {\n        return;\n      }\n\n      const { loop, speed, delay } = state.scroll;\n\n      state.scroll = {\n        marquee: true,\n        // 负数统一当作循环播放\n        loop: Math.max(\n          props.marquee === true || (props.marquee as DrawMarquee)?.loop == null\n            ? loop\n            : (props.marquee as DrawMarquee)?.loop,\n          -1,\n        ),\n        // 速度必须为正数\n        speed: Math.max(\n          props.marquee === true || (props.marquee as DrawMarquee)?.speed == null\n            ? speed\n            : (props.marquee as DrawMarquee)?.speed,\n          1,\n        ),\n        // 延迟不可为负数\n        delay: Math.max(\n          props.marquee === true || (props.marquee as DrawMarquee)?.delay == null\n            ? delay\n            : (props.marquee as DrawMarquee)?.delay,\n          0,\n        ),\n      };\n      state.offset = 0;\n\n      // 设置动画\n      setTimeout(() => {\n        const textWrapDOMWidth = textWrapDOM.value?.getBoundingClientRect().width;\n        const textDOMWidth = textDOM.value?.getBoundingClientRect().width;\n        state.offset = -textDOMWidth;\n        state.duration = textDOMWidth / state.scroll.speed;\n        state.listWidth = textWrapDOMWidth;\n        state.itemWidth = textDOMWidth;\n      }, state.scroll.delay);\n    };\n\n    // 动画结束后，初始化动画\n    const handleTransitionend = () => {\n      resetTransition();\n\n      if (state.scroll.loop === -1) {\n        return;\n      }\n\n      state.scroll.loop = --state.scroll.loop;\n\n      if (state.scroll.loop === 0) {\n        state.scroll.marquee = false;\n      }\n    };\n\n    const resetTransition = () => {\n      state.duration = 0;\n      state.offset = state.listWidth;\n\n      setTimeout(() => {\n        state.offset = -state.itemWidth;\n        state.duration = (state.itemWidth + state.listWidth) / state.scroll.speed;\n      }, 0);\n    };\n\n    const onLinkClick = (e: MouseEvent) => {\n      props.onLinkClick?.({ e });\n    };\n\n    const onCloseBtnClick = () => {\n      props.onCloseBtnClick?.();\n      setVisible(false);\n    };\n\n    const handleDuration = () => {\n      if (props.duration > 0) {\n        setTimeout(() => {\n          props.onDurationEnd?.();\n          setVisible(false);\n        }, props.duration);\n      }\n    };\n\n    onMounted(() => {\n      nextTick(() => {\n        if (currentVisible.value) {\n          handleScrolling();\n        }\n      });\n    });\n\n    watch(\n      () => currentVisible.value,\n      (val) => {\n        if (val === false) return;\n        setVisible(true);\n        handleDuration();\n        nextTick(handleScrolling);\n      },\n    );\n\n    return {\n      name: ref(name),\n      ...toRefs(state),\n      currentVisible,\n      rootClasses,\n      textWrapClasses,\n      rootStyles,\n      prefixIconContent,\n      computedContent,\n      closeBtnContent,\n      linkContent,\n      textWrapDOM,\n      textDOM,\n      animateStyle,\n      onCloseBtnClick,\n      onLinkClick,\n      handleTransitionend,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","iconDefault","info","h","InfoCircleFilledIcon","success","CheckCircleFilledIcon","warning","error","closeBtnDefault","CloseIcon","defineComponent","components","TNode","props","messageProps","emits","setup","context","internalInstance","getCurrentInstance","state","reactive","duration","offset","listWidth","itemWidth","scroll","marquee","speed","loop","delay","_toRefs","toRefs","visible","modelValue","_useVModel","useVModel","defaultVisible","_useVModel2","_slicedToArray","currentVisible","setVisible","rootClasses","computed","_defineProperty","concat","theme","align","textWrapClasses","changeNumToStr","arr","arguments","length","undefined","map","item","getMessageStylesOffset","top","right","left","rootStyles","offsetStyle","_objectSpread","zIndex","prefixIconContent","renderTNode","defaultNode","computedContent","renderContent","closeBtnContent","linkContent","_context$slots","link","slots","isObject","isString","_link","content","Link","animateStyle","transform","transitionDuration","transitionTimingFunction","textWrapDOM","ref","textDOM","handleScrolling","_ref3","_props$marquee","_props$marquee2","_props$marquee3","_props$marquee4","_props$marquee5","_props$marquee6","_state$scroll","Math","max","setTimeout","_textWrapDOM$value","_textDOM$value","textWrapDOMWidth","value","getBoundingClientRect","width","textDOMWidth","handleTransitionend","resetTransition","onLinkClick","e","_props$onLinkClick","call","onCloseBtnClick","_props$onCloseBtnClic","handleDuration","_props$onDurationEnd","onDurationEnd","onMounted","nextTick","watch","val","_createBlock","_Transition","_ctx","_createElementBlock","class","style","_createVNode","_component_t_node","_createElementVNode","_normalizeStyle","onTransitionend","apply","onClick","_normalizeClass"],"mappings":"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"}