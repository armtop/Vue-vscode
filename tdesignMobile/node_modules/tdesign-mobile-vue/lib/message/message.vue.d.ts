import { h } from 'vue';
import { DrawMarquee } from './type';
declare const _default: import("vue").DefineComponent<{
    align: {
        type: import("vue").PropType<import("./type").MessageAlignType>;
        default: import("./type").MessageAlignType;
        validator(val: import("./type").MessageAlignType): boolean;
    };
    closeBtn: {
        type: import("vue").PropType<string | boolean | ((h: typeof h) => import("../common").SlotReturnValue)>;
        default: any;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue)>;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<boolean | ((h: typeof h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    link: {
        type: import("vue").PropType<string | object | ((h: typeof h) => import("../common").SlotReturnValue)>;
    };
    marquee: {
        type: import("vue").PropType<boolean | DrawMarquee>;
        default: boolean;
    };
    offset: {
        type: import("vue").PropType<(string | number)[]>;
    };
    theme: {
        type: import("vue").PropType<import("./type").MessageThemeList>;
        default: import("./type").MessageThemeList;
        validator(val: import("./type").MessageThemeList): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    zIndex: {
        type: NumberConstructor;
    };
    onCloseBtnClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onDurationEnd: import("vue").PropType<() => void>;
    onLinkClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}, {
    currentVisible: import("vue").Ref<boolean>;
    rootClasses: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    textWrapClasses: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    rootStyles: import("vue").ComputedRef<any>;
    prefixIconContent: import("vue").ComputedRef<any>;
    computedContent: import("vue").ComputedRef<any>;
    closeBtnContent: import("vue").ComputedRef<any>;
    linkContent: import("vue").ComputedRef<any>;
    textWrapDOM: import("vue").Ref<any>;
    textDOM: import("vue").Ref<any>;
    animateStyle: import("vue").ComputedRef<{
        transform: string;
        transitionDuration: string;
        transitionTimingFunction: string;
    }>;
    onCloseBtnClick: () => void;
    onLinkClick: (e: MouseEvent) => void;
    handleTransitionend: () => void;
    duration: import("vue").Ref<number>;
    offset: import("vue").Ref<number>;
    listWidth: import("vue").Ref<number>;
    itemWidth: import("vue").Ref<number>;
    scroll: import("vue").Ref<{
        marquee: boolean;
        speed: number;
        loop: number;
        delay: number;
    }>;
    name: import("vue").Ref<string>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("update:value" | "durationEnd" | "closeBtnClick")[], "update:value" | "durationEnd" | "closeBtnClick", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    align: {
        type: import("vue").PropType<import("./type").MessageAlignType>;
        default: import("./type").MessageAlignType;
        validator(val: import("./type").MessageAlignType): boolean;
    };
    closeBtn: {
        type: import("vue").PropType<string | boolean | ((h: typeof h) => import("../common").SlotReturnValue)>;
        default: any;
    };
    content: {
        type: import("vue").PropType<string | ((h: typeof h) => import("../common").SlotReturnValue)>;
    };
    duration: {
        type: NumberConstructor;
        default: number;
    };
    icon: {
        type: import("vue").PropType<boolean | ((h: typeof h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    link: {
        type: import("vue").PropType<string | object | ((h: typeof h) => import("../common").SlotReturnValue)>;
    };
    marquee: {
        type: import("vue").PropType<boolean | DrawMarquee>;
        default: boolean;
    };
    offset: {
        type: import("vue").PropType<(string | number)[]>;
    };
    theme: {
        type: import("vue").PropType<import("./type").MessageThemeList>;
        default: import("./type").MessageThemeList;
        validator(val: import("./type").MessageThemeList): boolean;
    };
    visible: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultVisible: BooleanConstructor;
    zIndex: {
        type: NumberConstructor;
    };
    onCloseBtnClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onDurationEnd: import("vue").PropType<() => void>;
    onLinkClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}>> & {
    "onUpdate:value"?: (...args: any[]) => any;
    onCloseBtnClick?: (...args: any[]) => any;
    onDurationEnd?: (...args: any[]) => any;
}, {
    theme: import("./type").MessageThemeList;
    duration: number;
    visible: boolean;
    icon: boolean | ((h: typeof h) => import("../common").SlotReturnValue);
    modelValue: boolean;
    align: import("./type").MessageAlignType;
    marquee: boolean;
    closeBtn: string | boolean | ((h: typeof h) => import("../common").SlotReturnValue);
    defaultVisible: boolean;
}, {}>;
export default _default;
