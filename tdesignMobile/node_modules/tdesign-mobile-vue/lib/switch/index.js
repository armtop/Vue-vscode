/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var vue = require('vue');
var loading_index = require('../loading/index.js');
var config = require('../config.js');
var switch_props = require('./props.js');
var form_hooks = require('../form/hooks.js');
var hooks_useClass = require('../hooks/useClass.js');
var shared_useToggle_index = require('../shared/useToggle/index.js');
var shared_useDefault_index = require('../shared/useDefault/index.js');
var shared_component = require('../shared/component.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isString');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('lodash/isArray');
require('../loading/props.js');
require('../hooks/tnode.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-191173f8.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-2088457f.js');
require('dayjs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

var prefix = config["default"].prefix;
var name = "".concat(prefix, "-switch");
var Switch = vue.defineComponent({
  name: name,
  props: switch_props["default"],
  setup: function setup(props, context) {
    var switchClass = hooks_useClass.usePrefixClass("switch");
    var disabled = form_hooks.useFormDisabled();
    var switchValues = props.customValue || [true, false];
    var _useDefault = shared_useDefault_index.useDefault(props, context.emit, "value", "change"),
      _useDefault2 = _slicedToArray__default["default"](_useDefault, 1),
      innerValue = _useDefault2[0];
    var _useToggle = shared_useToggle_index.useToggle(switchValues, innerValue.value),
      state = _useToggle.state,
      toggle = _useToggle.toggle;
    var checked = vue.computed(function () {
      return innerValue.value === switchValues[0];
    });
    var switchClasses = vue.computed(function () {
      return ["".concat(switchClass.value), "".concat(switchClass.value, "--").concat(props.size), _defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(switchClass.value, "--checked"), checked.value), "".concat(switchClass.value, "--disabled"), disabled.value || props.loading)];
    });
    var dotClasses = vue.computed(function () {
      var _props$label, _props$icon;
      return ["".concat(switchClass.value, "__dot"), "".concat(switchClass.value, "__dot--").concat(props.size), _defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(switchClass.value, "__dot--checked"), checked.value), "".concat(switchClass.value, "__dot--plain"), ((_props$label = props.label) === null || _props$label === void 0 ? void 0 : _props$label.length) !== 2 && ((_props$icon = props.icon) === null || _props$icon === void 0 ? void 0 : _props$icon.length) !== 2 && !props.loading)];
    });
    var labelClasses = vue.computed(function () {
      return ["".concat(switchClass.value, "__label"), "".concat(switchClass.value, "__label--").concat(props.size), _defineProperty__default["default"]({}, "".concat(switchClass.value, "__label--checked"), checked.value)];
    });
    var iconContent = vue.computed(function () {
      return props.icon[checked.value ? 0 : 1];
    });
    function handleToggle(event) {
      event.preventDefault();
      if (disabled.value || props.loading) {
        return;
      }
      if (state.value === innerValue.value) {
        toggle();
      }
      innerValue.value = state.value;
    }
    return function () {
      var readerContent = function readerContent() {
        if (props.loading) {
          return vue.createVNode(loading_index["default"], {
            "inherit-color": true,
            "size": "16.25px"
          }, null);
        }
        if (props.label.length === 2) {
          return checked.value ? props.label[0] : props.label[1];
        }
        return iconContent.value;
      };
      return vue.createVNode("div", {
        "class": switchClasses.value,
        "onClick": handleToggle
      }, [vue.createVNode("div", {
        "class": dotClasses.value
      }, [vue.createVNode("div", {
        "class": labelClasses.value
      }, [readerContent()])])]);
    };
  }
});

var _Switch = shared_component.withInstall(Switch);

exports["default"] = _Switch;
//# sourceMappingURL=index.js.map
