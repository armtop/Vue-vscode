/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var badge_index = require('../badge/index.js');
var image_index = require('../image/index.js');
var config = require('../config.js');
var avatar_props = require('./props.js');
var shared_constants = require('../shared/constants.js');
var hooks_tnode = require('../hooks/tnode.js');
var hooks_useClass = require('../hooks/useClass.js');
var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var avatar_avatarGroupProps = require('./avatar-group-props.js');
var shared_component = require('../shared/component.js');
require('@babel/runtime/helpers/typeof');
require('@babel/runtime/helpers/slicedToArray');
require('../badge/props.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-191173f8.js');
require('../_chunks/dep-2088457f.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../image/image.js');
require('@vueuse/core');
require('tdesign-icons-vue-next');
require('../loading/index.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('../loading/props.js');
require('../image/props.js');
require('../shared/render-tnode.js');
require('../shared/render.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);

var prefix$1 = config["default"].prefix;
var name$1 = "".concat(prefix$1, "-avatar");
var _Avatar = vue.defineComponent({
  name: name$1,
  props: avatar_props["default"],
  setup: function setup(props) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var renderTNodeContent = hooks_tnode.useContent();
    var avatarClass = hooks_useClass.usePrefixClass("avatar");
    var avatarGroupProps = vue.inject("avatarGroup", {});
    var hasAvatarGroupProps = Object.keys(avatarGroupProps).length > 0;
    var sizeValue = vue.ref(props.size || avatarGroupProps && avatarGroupProps.size);
    var sizeReValue = vue.ref(avatarGroupProps && avatarGroupProps.size || props.size);
    var sizeClass = "".concat(sizeReValue.value.indexOf("px") > -1 ? "medium" : sizeReValue.value);
    var avatarClasses = vue.computed(function () {
      return ["".concat(avatarClass.value), "".concat(avatarClass.value, "--").concat(sizeClass), _defineProperty__default["default"]({}, "".concat(avatarClass.value, "--").concat(props.shape), props.shape), hasAvatarGroupProps ? "".concat(avatarClass.value, "--border ").concat(avatarClass.value, "--border-").concat(sizeClass) : ""];
    });
    var isCustomSize = vue.computed(function () {
      return sizeValue.value && !shared_constants["default"].SIZE[sizeValue.value];
    });
    var customSize = vue.computed(function () {
      return isCustomSize.value ? {
        height: sizeValue.value,
        width: sizeValue.value
      } : {};
    });
    var handleImgLoadError = function handleImgLoadError(e) {
      var _props$onError;
      (_props$onError = props.onError) === null || _props$onError === void 0 || _props$onError.call(props, e);
    };
    return function () {
      var icon = renderTNodeJSX("icon");
      var TNodeContent = renderTNodeContent("default", "content");
      var readerAvatar = function readerAvatar() {
        if (props.image && !props.hideOnLoadFailed) {
          return vue.createVNode(image_index["default"], vue.mergeProps({
            "style": customSize.value,
            "src": props.image,
            "alt": props.alt
          }, props.imageProps, {
            "onError": handleImgLoadError
          }), null);
        }
        if (icon) {
          return vue.createVNode("div", {
            "class": "".concat(avatarClass.value, "__icon")
          }, [icon]);
        }
        return vue.createVNode("span", null, [TNodeContent]);
      };
      return vue.createVNode("div", {
        "class": "".concat(avatarClass.value, "__wrapper"),
        "style": customSize.value
      }, [vue.createVNode("div", {
        "class": "".concat(avatarClass.value, "__badge")
      }, [vue.createVNode(badge_index["default"], props.badgeProps, {
        default: function _default() {
          return [vue.createVNode("div", {
            "class": avatarClasses.value
          }, [readerAvatar()])];
        }
      })])]);
    };
  }
});

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-avatar-group");
var _AvatarGroup = vue.defineComponent({
  name: name,
  props: avatar_avatarGroupProps["default"],
  setup: function setup(props) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var avatarGroupClass = hooks_useClass.usePrefixClass("avatar-group");
    vue.provide("avatarGroup", _objectSpread({}, props));
    var direction = props.cascading ? props.cascading.split("-")[0] : "right";
    var avatarGroupClasses = vue.computed(function () {
      return ["".concat(avatarGroupClass.value), "".concat(avatarGroupClass.value, "-offset-").concat(direction, "-").concat(props.size.indexOf("px") > -1 ? "medium" : props.size)];
    });
    var readerAvatar = function readerAvatar() {
      var children = renderTNodeJSX("default");
      var allChildren = [];
      children.forEach(function (child) {
        if (child.type === vue.Fragment) {
          allChildren.push.apply(allChildren, _toConsumableArray__default["default"](child.children));
        } else {
          allChildren.push(child);
        }
      });
      var isShowCollapse = false;
      var avatarList = [];
      if (allChildren.length > props.max) {
        avatarList = allChildren.slice(0, props.max);
        isShowCollapse = true;
      } else {
        avatarList = allChildren;
      }
      if (props.cascading === "left-up") {
        var defaultZIndex = 100;
        for (var index = 0; index < avatarList.length; index++) {
          avatarList[index].props.style = "z-index: ".concat(defaultZIndex - index * 10);
        }
      }
      if (isShowCollapse) {
        var collapseAvatar = renderTNodeJSX("collapseAvatar");
        avatarList.push(vue.createVNode(_Avatar, {
          "size": avatarList[0].size || props.size
        }, {
          default: function _default() {
            return [collapseAvatar || "+".concat(allChildren.length - props.max)];
          }
        }));
      }
      return avatarList;
    };
    return function () {
      return vue.createVNode("div", {
        "class": avatarGroupClasses.value
      }, [readerAvatar()]);
    };
  }
});

var Avatar = shared_component.withInstall(_Avatar);
var AvatarGroup = shared_component.withInstall(_AvatarGroup);

exports.AvatarGroup = AvatarGroup;
exports["default"] = Avatar;
//# sourceMappingURL=index.js.map
