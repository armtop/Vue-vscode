/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var steps_props = require('./props.js');
var config = require('../config.js');
var hooks_tnode = require('../hooks/tnode.js');
var hooks_useClass = require('../hooks/useClass.js');
var shared_useDefault_index = require('../shared/useDefault/index.js');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var steps_stepItemProps = require('./step-item-props.js');
var shared_component = require('../shared/component.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-191173f8.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-2088457f.js');
require('dayjs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix$1 = config["default"].prefix;
var name$1 = "".concat(prefix$1, "-steps");
var LocalSteps = vue.defineComponent({
  name: name$1,
  props: steps_props["default"],
  emits: ["update:current", "update:modelValue", "change"],
  setup: function setup(props2, context) {
    var stepsClass = hooks_useClass.usePrefixClass("steps");
    var baseClass = vue.computed(function () {
      return [stepsClass.value, "".concat(stepsClass.value, "--").concat(props2.layout), "".concat(stepsClass.value, "--").concat(props2.sequence), _defineProperty__default["default"]({}, "".concat(stepsClass.value, "--readonly"), props2.readonly)];
    });
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var _useDefault = shared_useDefault_index.useDefault(props2, context.emit, "current", "change"),
      _useDefault2 = _slicedToArray__default["default"](_useDefault, 2),
      current = _useDefault2[0],
      setCurrent = _useDefault2[1];
    var state = vue.reactive({
      children: []
    });
    var relation = function relation(child) {
      child && state.children.push(child);
    };
    var removeRelation = function removeRelation(child) {
      state.children = state.children.filter(function (item) {
        return item !== child;
      });
    };
    var onClickItem = function onClickItem(cur, prev, e) {
      setCurrent(cur, prev, {
        e: e
      });
    };
    vue.provide("stepsProvide", _objectSpread(_objectSpread({}, props2), {}, {
      state: state,
      current: current,
      relation: relation,
      removeRelation: removeRelation,
      onClickItem: onClickItem
    }));
    return function () {
      var renderContent = renderTNodeJSX("default") || null;
      return vue.createVNode("div", {
        "class": baseClass.value
      }, [renderContent]);
    };
  }
});

var prefix = config["default"].prefix;
var name = "".concat(prefix, "-step-item");
var LocalStepItem = vue.defineComponent({
  name: name,
  props: steps_stepItemProps["default"],
  setup: function setup(props2, context) {
    var stepItemClass = hooks_useClass.usePrefixClass("step-item");
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var internalInstance = vue.getCurrentInstance();
    var proxy = internalInstance.proxy;
    var stepsProvide = vue.inject("stepsProvide", void 0);
    stepsProvide.relation(proxy);
    var iconDefault = {
      check: vue.h(tdesignIconsVueNext.CheckIcon),
      close: vue.h(tdesignIconsVueNext.CloseIcon)
    };
    var index = vue.computed(function () {
      return stepsProvide.state.children.indexOf(proxy);
    });
    var isLastChild = vue.computed(function () {
      return index.value === (stepsProvide.sequence === "positive" ? stepsProvide.state.children.length - 1 : 0);
    });
    var theme = vue.computed(function () {
      return stepsProvide.theme;
    });
    var dot = vue.computed(function () {
      return theme.value === "dot";
    });
    var icon = vue.computed(function () {
      return props2.icon || context.slots.icon;
    });
    var current = vue.computed(function () {
      return stepsProvide.current.value || stepsProvide.defaultCurrent || 0;
    });
    var stepsStatus = vue.computed(function () {
      return stepsProvide.currentStatus;
    });
    var readonly = vue.computed(function () {
      return stepsProvide.readonly;
    });
    var currentStatus = vue.computed(function () {
      var status = props2.status;
      if (status !== "default") return status;
      if (index.value === current.value) return stepsStatus.value;
      if (index.value < current.value) return "finish";
      return status;
    });
    var rootClassName = vue.computed(function () {
      return [stepItemClass.value, "".concat(stepItemClass.value, "--").concat(stepsProvide.layout), _defineProperty__default["default"]({}, "".concat(stepItemClass.value, "--default"), readonly.value), _defineProperty__default["default"]({}, "".concat(stepItemClass.value, "--").concat(currentStatus.value), currentStatus.value)];
    });
    var iconWrapperClassName = vue.computed(function () {
      return ["".concat(stepItemClass.value, "__anchor"), "".concat(stepItemClass.value, "__anchor--").concat(stepsProvide.layout)];
    });
    var dotClass = vue.computed(function () {
      return ["".concat(stepItemClass.value, "__dot"), "".concat(stepItemClass.value, "__dot--").concat(currentStatus.value)];
    });
    var iconClassName = vue.computed(function () {
      return [_defineProperty__default["default"]({}, "".concat(stepItemClass.value, "__icon"), icon.value), _defineProperty__default["default"]({}, "".concat(stepItemClass.value, "__icon--").concat(currentStatus.value), icon.value), _defineProperty__default["default"]({}, "".concat(stepItemClass.value, "__circle"), !icon.value), _defineProperty__default["default"]({}, "".concat(stepItemClass.value, "__circle--").concat(currentStatus.value), !icon.value)];
    });
    var contentClass = vue.computed(function () {
      return ["".concat(stepItemClass.value, "__content"), "".concat(stepItemClass.value, "__content--").concat(stepsProvide.layout), _defineProperty__default["default"]({}, "".concat(stepItemClass.value, "__content--").concat(stepsProvide.layout), isLastChild.value), _defineProperty__default["default"]({}, "".concat(stepItemClass.value, "__content--last"), isLastChild.value)];
    });
    var tilteClass = vue.computed(function () {
      return ["".concat(stepItemClass.value, "__title"), "".concat(stepItemClass.value, "__title--").concat(currentStatus.value), "".concat(stepItemClass.value, "__title--").concat(stepsProvide.layout)];
    });
    var descriptionClass = vue.computed(function () {
      return ["".concat(stepItemClass.value, "__description"), "".concat(stepItemClass.value, "__description--").concat(currentStatus.value), "".concat(stepItemClass.value, "__description--").concat(stepsProvide.layout)];
    });
    var extraClass = vue.computed(function () {
      return ["".concat(stepItemClass.value, "__extra"), "".concat(stepItemClass.value, "__extra--").concat(currentStatus.value), "".concat(stepItemClass.value, "__extra--").concat(stepsProvide.layout)];
    });
    var separatorClass = vue.computed(function () {
      return [stepItemClass.value, "".concat(stepItemClass.value, "__line"), "".concat(stepItemClass.value, "__line--").concat(currentStatus.value), "".concat(stepItemClass.value, "__line--").concat(stepsProvide.sequence), "".concat(stepItemClass.value, "__line--").concat(stepsProvide.layout), "".concat(stepItemClass.value, "__line--").concat(stepsProvide.theme)];
    });
    var onClickIcon = function onClickIcon(e) {
      if (!readonly.value) {
        stepsProvide.onClickItem(index.value, current.value, e);
      }
    };
    vue.onUnmounted(function () {
      stepsProvide.removeRelation(proxy);
    });
    return function () {
      var renderIconContent = function renderIconContent() {
        if (icon.value) {
          return renderTNodeJSX("icon") || null;
        }
        if (currentStatus.value === "error") {
          return iconDefault.close;
        }
        if (currentStatus.value === "finish") {
          return iconDefault.check;
        }
        return index.value + 1;
      };
      return vue.createVNode("div", {
        "class": rootClassName.value,
        "onClick": onClickIcon
      }, [vue.createVNode("div", {
        "class": iconWrapperClassName.value
      }, [dot.value ? vue.createVNode("div", {
        "class": dotClass.value
      }, null) : vue.createVNode("div", {
        "class": iconClassName.value
      }, [renderIconContent()])]), vue.createVNode("div", {
        "class": contentClass.value
      }, [vue.createVNode("div", {
        "class": tilteClass.value
      }, [renderTNodeJSX("title"), renderTNodeJSX("titleRight")]), vue.createVNode("div", {
        "class": descriptionClass.value
      }, [renderTNodeJSX("content")]), vue.createVNode("div", {
        "class": extraClass.value
      }, [renderTNodeJSX("extra")])]), !isLastChild.value && vue.createVNode("div", {
        "class": separatorClass.value
      }, null)]);
    };
  }
});

var StepItem = shared_component.withInstall(LocalStepItem);
var Steps = shared_component.withInstall(LocalSteps);

exports.StepItem = StepItem;
exports.Steps = Steps;
//# sourceMappingURL=index.js.map
