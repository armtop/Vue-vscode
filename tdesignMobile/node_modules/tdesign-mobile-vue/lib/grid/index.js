/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var grid_props = require('./props.js');
var isObject = require('lodash/isObject');
var isString = require('lodash/isString');
var isFunction = require('lodash/isFunction');
var grid_gridItemProps = require('./grid-item-props.js');
var hooks_tnode = require('../hooks/tnode.js');
var image_index = require('../image/index.js');
var badge_index = require('../badge/index.js');
var shared_component = require('../shared/component.js');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('../image/image.js');
require('@babel/runtime/helpers/slicedToArray');
require('@vueuse/core');
require('tdesign-icons-vue-next');
require('../loading/index.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('lodash/isArray');
require('../hooks/useClass.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-191173f8.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-2088457f.js');
require('dayjs');
require('../loading/props.js');
require('../image/props.js');
require('../shared/render-tnode.js');
require('../shared/render.js');
require('../badge/props.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var isObject__default = /*#__PURE__*/_interopDefaultLegacy(isObject);
var isString__default = /*#__PURE__*/_interopDefaultLegacy(isString);
var isFunction__default = /*#__PURE__*/_interopDefaultLegacy(isFunction);

var prefix$1 = config["default"].prefix;
var name$1 = "".concat(prefix$1, "-grid");
var LocalGrid = vue.defineComponent({
  name: name$1,
  props: grid_props["default"],
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _toRefs = vue.toRefs(props2),
      column = _toRefs.column,
      gutter = _toRefs.gutter,
      border = _toRefs.border,
      align = _toRefs.align;
    var rootStyle = vue.computed(function () {
      if (column.value === 0) return [];
      var ans = ["padding: ".concat(gutter.value, "px;"), "grid-template-columns: repeat(".concat(column.value, ", 1fr)"), "grid-gap: ".concat(gutter.value, "px")];
      return ans;
    });
    vue.provide("grid", {
      column: column,
      border: border,
      align: align,
      gutter: gutter
    });
    var classes = vue.computed(function () {
      return ["".concat(name$1), _defineProperty__default["default"](_defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(name$1, "--card"), props2.theme === "card"), "".concat(name$1, "--auto-size"), props2.column === 0), "".concat(name$1, "--bordered"), props2.border && !props2.gutter)];
    });
    return function () {
      var _slots$default;
      return vue.createVNode("div", {
        "class": classes.value,
        "style": rootStyle.value
      }, [(_slots$default = slots.default) === null || _slots$default === void 0 ? void 0 : _slots$default.call(slots)]);
    };
  }
});

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !vue.isVNode(s);
}
var prefix = config["default"].prefix;
var name = "".concat(prefix, "-grid-item");
var LocalGridItem = vue.defineComponent({
  name: name,
  components: {
    TImage: image_index["default"],
    TBadge: badge_index["default"]
  },
  props: grid_gridItemProps["default"],
  setup: function setup(props2, context) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var _inject = vue.inject("grid"),
      column = _inject.column,
      border = _inject.border,
      align = _inject.align,
      gutter = _inject.gutter;
    var rootStyle = vue.computed(function () {
      var percent = column.value > 0 ? "".concat(100 / +column.value, "%") : 0;
      var style = {
        textAlign: ["center", "left"].includes(align.value) ? align.value : "center"
      };
      if (percent !== 0) {
        style.flexBasis = percent;
      }
      return style;
    });
    var size = vue.computed(function () {
      if (column.value > 4 || !column.value) return "small";
      return column.value < 4 ? "large" : "middle";
    });
    var realImage = vue.computed(function () {
      if (isString__default["default"](props2.image)) return {
        src: props2.image
      };
      if (isObject__default["default"](props2.image) && !isFunction__default["default"](props2.image) && !context.slots.image) {
        return props2.image;
      }
      return null;
    });
    var gridItemClasses = vue.computed(function () {
      return ["".concat(name), "".concat(name, "--").concat(props2.layout), _defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(name, "--bordered"), border.value), "".concat(name, "--surround"), border.value && gutter.value)];
    });
    return function () {
      var _slot;
      var renderImage = function renderImage() {
        return realImage.value ? vue.createVNode(vue.resolveComponent("t-image"), vue.mergeProps({
          "shape": "round"
        }, realImage.value), null) : renderTNodeJSX("image");
      };
      return vue.createVNode("div", {
        "class": gridItemClasses.value,
        "style": rootStyle.value
      }, [vue.createVNode("div", {
        "class": "".concat(name, "__image ").concat(name, "__image--").concat(size.value)
      }, [props2.badge ? vue.createVNode(vue.resolveComponent("t-badge"), props2.badge, _isSlot(_slot = renderImage()) ? _slot : {
        default: function _default() {
          return [_slot];
        }
      }) : renderImage()]), vue.createVNode("div", {
        "class": "".concat(name, "__content ").concat(name, "__content--").concat(props2.layout)
      }, [vue.createVNode("div", {
        "class": "".concat(name, "__title ").concat(name, "__title--").concat(size.value)
      }, [renderTNodeJSX("text")]), vue.createVNode("div", {
        "class": "".concat(name, "__description ").concat(name, "__description--").concat(props2.layout)
      }, [renderTNodeJSX("description")])])]);
    };
  }
});

var Grid = shared_component.withInstall(LocalGrid);
var GridItem = shared_component.withInstall(LocalGridItem);

exports.Grid = Grid;
exports.GridItem = GridItem;
//# sourceMappingURL=index.js.map
