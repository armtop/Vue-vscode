/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var tdesignIconsVueNext = require('tdesign-icons-vue-next');
var config = require('../config.js');
var cell_props = require('./props.js');
var form_hooks = require('../form/hooks.js');
var hooks_useClass = require('../hooks/useClass.js');
var hooks_tnode = require('../hooks/tnode.js');
var shared_hover = require('../shared/hover.js');
var cell_cellGroupProps = require('./cell-group-props.js');
var shared_component = require('../shared/component.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('lodash/isString');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-191173f8.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-2088457f.js');
require('dayjs');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var prefix$1 = config["default"].prefix;
var name$1 = "".concat(prefix$1, "-cell");
var Cell = vue.defineComponent({
  name: name$1,
  directives: {
    Hover: shared_hover["default"]
  },
  props: cell_props["default"],
  emits: ["click"],
  setup: function setup(props) {
    var readerTNodeJSX = hooks_tnode.useTNodeJSX();
    var readerTNodeContent = hooks_tnode.useContent();
    var disabled = form_hooks.useFormDisabled();
    var cellClass = hooks_useClass.usePrefixClass("cell");
    var cellClasses = vue.computed(function () {
      return ["".concat(cellClass.value), "".concat(cellClass.value, "--").concat(props.align), _defineProperty__default["default"]({}, "".concat(cellClass.value, "--borderless"), !props.bordered)];
    });
    var hoverDisabled = vue.computed(function () {
      return !props.hover || disabled.value;
    });
    var handleClick = function handleClick(e) {
      if (!disabled.value) {
        var _props$onClick;
        (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, e);
      }
    };
    var readerImage = function readerImage() {
      if (typeof props.image === "string") {
        return vue.createVNode("img", {
          "src": props.image,
          "class": "".concat(cellClass.value, "__left-image")
        }, null);
      }
      var image = readerTNodeJSX("image");
      return image;
    };
    var readerLeft = function readerLeft() {
      var leftIcon = readerTNodeJSX("leftIcon");
      return vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__left")
      }, [leftIcon && vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__left-icon")
      }, [leftIcon]), readerImage()]);
    };
    var readerTitle = function readerTitle() {
      var title = readerTNodeJSX("title");
      if (!title) {
        return null;
      }
      var description = readerTNodeJSX("description");
      return vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__title")
      }, [title, props.required && vue.createVNode("span", {
        "class": "".concat(cellClass.value, "--required")
      }, ["\xA0*"]), description && vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__description")
      }, [description])]);
    };
    var readerRight = function readerRight() {
      var rightIcon = props.arrow ? vue.createVNode(tdesignIconsVueNext.ChevronRightIcon, null, null) : readerTNodeJSX("rightIcon");
      if (!rightIcon) {
        return null;
      }
      return vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__right")
      }, [vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__right-icon")
      }, [rightIcon])]);
    };
    return function () {
      var note = readerTNodeContent("default", "note");
      return vue.withDirectives(vue.createVNode("div", {
        "class": cellClasses.value,
        "onClick": handleClick
      }, [readerLeft(), readerTitle(), note && vue.createVNode("div", {
        "class": "".concat(cellClass.value, "__note")
      }, [note]), readerRight()]), [[vue.resolveDirective("hover"), {
        className: "".concat(cellClass.value, "--hover"),
        disabledName: hoverDisabled.value
      }]]);
    };
  }
});

var prefix = config["default"].prefix;
var name = "".concat(prefix, "-cell-group");
var _CellGroup = vue.defineComponent({
  name: name,
  props: cell_cellGroupProps["default"],
  emits: ["click"],
  setup: function setup(props) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var cellGroupClass = hooks_useClass.usePrefixClass("cell-group");
    var contentClasses = vue.computed(function () {
      return [cellGroupClass.value, "".concat(cellGroupClass.value, "--").concat(props.theme), _defineProperty__default["default"]({}, "".concat(cellGroupClass.value, "--bordered"), props.bordered)];
    });
    return function () {
      var title = renderTNodeJSX("title");
      return vue.createVNode("div", null, [title ? vue.createVNode("div", {
        "class": "".concat(cellGroupClass.value, "__title")
      }, [title]) : null, vue.createVNode("div", {
        "class": contentClasses.value
      }, [renderTNodeJSX("default")])]);
    };
  }
});

var _Cell = shared_component.withInstall(Cell);
var CellGroup = shared_component.withInstall(_CellGroup);

exports.CellGroup = CellGroup;
exports["default"] = _Cell;
//# sourceMappingURL=index.js.map
