/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var vue = require('vue');
var config = require('../config.js');
var sideBar_props = require('./props.js');
var hooks_tnode = require('../hooks/tnode.js');
var shared_useDefault_index = require('../shared/useDefault/index.js');
var badge_index = require('../badge/index.js');
var sideBar_sideBarItemProps = require('./side-bar-item-props.js');
var shared_component = require('../shared/component.js');
require('lodash/isFunction');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isString');
require('lodash/isObject');
require('@babel/runtime/helpers/typeof');
require('../badge/props.js');
require('../hooks/useClass.js');
require('../config-provider/useConfig.js');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('lodash/isArray');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-191173f8.js');
require('../_chunks/dep-2088457f.js');
require('dayjs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix$1 = config["default"].prefix;
var name$1 = "".concat(prefix$1, "-side-bar");
var _SideBar = vue.defineComponent({
  name: name$1,
  props: sideBar_props["default"],
  emits: ["update:value", "update:modelValue", "change"],
  setup: function setup(props2, context) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var _useDefault = shared_useDefault_index.useDefault(props2, context.emit, "value", "change"),
      _useDefault2 = _slicedToArray__default["default"](_useDefault, 2),
      currentValue = _useDefault2[0],
      setCurrentValue = _useDefault2[1];
    var children = vue.ref([]);
    var relation = function relation(child) {
      child && children.value.push(child);
    };
    var removeRelation = function removeRelation(child) {
      children.value = children.value.filter(function (item) {
        return item !== child;
      });
    };
    var onClickItem = function onClickItem(cur, label) {
      var _props2$onClick;
      setCurrentValue(cur);
      (_props2$onClick = props2.onClick) === null || _props2$onClick === void 0 || _props2$onClick.call(props2, cur, label);
    };
    vue.provide("sideBarProvide", _objectSpread(_objectSpread({}, props2), {}, {
      children: children,
      currentValue: currentValue,
      relation: relation,
      removeRelation: removeRelation,
      onClickItem: onClickItem
    }));
    return function () {
      return vue.createVNode("div", {
        "class": "".concat(name$1)
      }, [renderTNodeJSX("default"), vue.createVNode("div", {
        "class": "".concat(name$1, "__padding")
      }, null)]);
    };
  }
});

var prefix = config["default"].prefix;
var name = "".concat(prefix, "-side-bar-item");
var _SideBarItem = vue.defineComponent({
  name: name,
  components: {
    TBadge: badge_index["default"]
  },
  props: sideBar_sideBarItemProps["default"],
  setup: function setup(props) {
    var renderTNodeJSX = hooks_tnode.useTNodeJSX();
    var internalInstance = vue.getCurrentInstance();
    var proxy = internalInstance.proxy;
    var sideBarProvide = vue.inject("sideBarProvide", void 0);
    sideBarProvide.relation(proxy);
    var isActive = vue.computed(function () {
      return proxy.value === sideBarProvide.currentValue.value;
    });
    var rootClassName = vue.computed(function () {
      return [name, _defineProperty__default["default"]({}, "".concat(name, "--active"), isActive.value), _defineProperty__default["default"]({}, "".concat(name, "--disabled"), props.disabled)];
    });
    var onClick = function onClick(e) {
      sideBarProvide.onClickItem(proxy.value, props.label);
    };
    vue.onUnmounted(function () {
      sideBarProvide.removeRelation(proxy);
    });
    return function () {
      var badgeProps = props.badgeProps,
        label = props.label;
      var renderIconNode = function renderIconNode() {
        var iconNode = renderTNodeJSX("icon");
        if (!iconNode) {
          return null;
        }
        return vue.createVNode("div", {
          "class": "".concat(name, "__icon")
        }, [iconNode]);
      };
      return vue.createVNode("div", {
        "class": rootClassName.value,
        "onClick": onClick
      }, [isActive.value && vue.createVNode("div", null, [vue.createVNode("div", {
        "class": "".concat(name, "__line")
      }, null), vue.createVNode("div", {
        "class": "".concat(name, "__prefix")
      }, null), vue.createVNode("div", {
        "class": "".concat(name, "__suffix")
      }, null)]), renderIconNode(), badgeProps ? vue.createVNode(vue.resolveComponent("t-badge"), vue.mergeProps(badgeProps, {
        "content": label
      }), null) : vue.createVNode("div", null, [label])]);
    };
  }
});

var SideBar = shared_component.withInstall(_SideBar);
var SideBarItem = shared_component.withInstall(_SideBarItem);

exports.SideBar = SideBar;
exports.SideBarItem = SideBarItem;
//# sourceMappingURL=index.js.map
