/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var vue = require('vue');
var config = require('../config.js');
var button_index = require('../button/index.js');
var badge_index = require('../badge/index.js');
var shared_renderTnode = require('../shared/render-tnode.js');
require('../loading/index.js');
require('../_common/js/loading/circle-adapter.js');
require('../_common/js/utils/set-style.js');
require('../_common/js/utils/helper.js');
require('@babel/runtime/helpers/toConsumableArray');
require('@babel/runtime/helpers/objectWithoutProperties');
require('@babel/runtime/helpers/slicedToArray');
require('lodash/isString');
require('lodash/isNull');
require('lodash/isUndefined');
require('lodash/isNumber');
require('lodash/isArray');
require('../hooks/useClass.js');
require('../config-provider/useConfig.js');
require('lodash/isFunction');
require('lodash/cloneDeep');
require('../config-provider/context.js');
require('lodash/mergeWith');
require('lodash/merge');
require('../_common/js/global-config/mobile/default-config.js');
require('../_common/js/global-config/mobile/locale/zh_CN.js');
require('../_chunks/dep-191173f8.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-2088457f.js');
require('dayjs');
require('../loading/props.js');
require('../hooks/tnode.js');
require('lodash/camelCase');
require('lodash/kebabCase');
require('../hooks/render-tnode.js');
require('lodash/isEmpty');
require('lodash/isObject');
require('../shared/component.js');
require('../button/props.js');
require('../form/hooks.js');
require('../shared/hover.js');
require('../badge/props.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

var prefix = config["default"].prefix;
var name = "".concat(prefix, "-action-sheet");
var script = vue.defineComponent({
  components: {
    TNode: shared_renderTnode["default"],
    TButton: button_index["default"],
    TBadge: badge_index["default"]
  },
  props: {
    items: {
      type: Array,
      required: true
    },
    align: {
      type: String,
      default: "center"
    }
  },
  emits: ["selected"],
  setup: function setup(props, context) {
    var handleSelected = function handleSelected(index) {
      context.emit("selected", index);
    };
    var itemClasses = vue.computed(function () {
      return _defineProperty__default["default"](_defineProperty__default["default"]({}, "".concat(name, "__list-item"), true), "".concat(name, "__list-item--left"), props.align === "left");
    });
    return {
      name: vue.ref(name),
      itemClasses: itemClasses,
      handleSelected: handleSelected
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = vue.resolveComponent("t-node");
  var _component_t_badge = vue.resolveComponent("t-badge");
  var _component_t_button = vue.resolveComponent("t-button");
  return vue.openBlock(), vue.createElementBlock("div", {
    class: vue.normalizeClass("".concat(_ctx.name, "__list"))
  }, [(vue.openBlock(true), vue.createElementBlock(vue.Fragment, null, vue.renderList(_ctx.items, function (item, index) {
    return vue.openBlock(), vue.createBlock(_component_t_button, {
      key: index,
      variant: "text",
      block: "",
      class: vue.normalizeClass([_ctx.itemClasses, _defineProperty__default["default"]({}, "".concat(_ctx.name, "__list-item--disabled"), item.disabled)]),
      disabled: item.disabled,
      icon: item.icon,
      style: vue.normalizeStyle({
        color: item.color
      }),
      onClick: function onClick($event) {
        return _ctx.handleSelected(index);
      }
    }, {
      default: vue.withCtx(function () {
        return [item.badge ? (vue.openBlock(), vue.createBlock(_component_t_node, {
          key: 0,
          content: item.badge
        }, {
          default: vue.withCtx(function () {
            return [vue.createElementVNode("span", {
              class: vue.normalizeClass("".concat(_ctx.name, "__list-item-text"))
            }, vue.toDisplayString(item.label), 3)];
          }),
          _: 2
        }, 1032, ["content"])) : vue.createCommentVNode("", true), item.badge && (item.badge.dot || item.badge.count) ? (vue.openBlock(), vue.createBlock(_component_t_badge, {
          key: 1,
          count: item.badge.count,
          "max-count": item.badge.maxCount || 99,
          dot: item.badge.dot,
          content: item.badge.content,
          size: item.badge.size,
          offset: item.badge.offset || [-16, 20]
        }, {
          default: vue.withCtx(function () {
            return [vue.createElementVNode("span", {
              class: vue.normalizeClass("".concat(_ctx.name, "__list-item-text"))
            }, vue.toDisplayString(item.label), 3)];
          }),
          _: 2
        }, 1032, ["count", "max-count", "dot", "content", "size", "offset"])) : (vue.openBlock(), vue.createElementBlock("span", {
          key: 2,
          class: vue.normalizeClass("".concat(_ctx.name, "__list-item-text"))
        }, vue.toDisplayString(item.label), 3))];
      }),
      _: 2
    }, 1032, ["class", "disabled", "icon", "style", "onClick"]);
  }), 128))], 2);
}

script.render = render;

exports["default"] = script;
//# sourceMappingURL=action-sheet-list.js.map
