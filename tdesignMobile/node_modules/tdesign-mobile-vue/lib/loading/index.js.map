{"version":3,"file":"index.js","sources":["../../src/loading/icon/gradient.tsx","../../src/loading/icon/spinner.tsx","../../src/loading/loading.tsx","../../src/loading/index.ts"],"sourcesContent":["import { defineComponent, nextTick, onMounted, onUpdated, ref, CSSProperties, PropType } from 'vue';\nimport circleAdapter from '../../_common/js/loading/circle-adapter';\nimport config from '../../config';\nimport { usePrefixClass } from '../../hooks/useClass';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-gradient`,\n  props: {\n    style: Object as PropType<CSSProperties>,\n  },\n  setup(props) {\n    const gradientClass = usePrefixClass('loading__gradient');\n    const classes = [gradientClass.value, `${prefix}-icon-loading`];\n    const circle = ref<HTMLElement>();\n    const updateColor = () => {\n      const circleElem = circle.value;\n      circleAdapter(circleElem);\n    };\n\n    onMounted(() => {\n      nextTick(() => {\n        updateColor();\n      });\n    });\n    onUpdated(() => {\n      updateColor();\n    });\n\n    return () => (\n      <svg\n        style={props.style}\n        class={classes}\n        viewBox=\"0 0 12 12\"\n        version=\"1.1\"\n        width=\"1em\"\n        height=\"1em\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <foreignObject x=\"0\" y=\"0\" width=\"12\" height=\"12\">\n          <div ref={circle} class={`${gradientClass.value}-conic`} />\n        </foreignObject>\n      </svg>\n    );\n  },\n});\n","import { CSSProperties, PropType, defineComponent } from 'vue';\nimport config from '../../config';\n\nimport { usePrefixClass } from '../../hooks/useClass';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-spinner`,\n  props: {\n    style: Object as PropType<CSSProperties>,\n  },\n  setup(props) {\n    const spinnerClass = usePrefixClass('loading__spinner');\n\n    return () => (\n      <span class={spinnerClass.value} style={props.style}>\n        {[...new Array(12)].map((_, index) => (\n          <i class={[`${spinnerClass.value}--line`, `${spinnerClass.value}--line-${index + 1}`]} />\n        ))}\n      </span>\n    );\n  },\n});\n","import { defineComponent, computed, ref, watch, h, setBlockTracking } from 'vue';\nimport TGradientIcon from './icon/gradient';\nimport SpinnerIcon from './icon/spinner';\n\nimport config from '../config';\nimport props from './props';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\n\nconst { prefix } = config;\n\nexport default defineComponent({\n  name: `${prefix}-loading`,\n  props,\n  setup(props) {\n    const renderTNodeJSX = useTNodeJSX();\n    const renderTNodeContent = useContent();\n    const loadingClass = usePrefixClass('loading');\n\n    const delayShowLoading = ref(false);\n\n    const countDelay = () => {\n      delayShowLoading.value = false;\n      const timer = setTimeout(() => {\n        delayShowLoading.value = true;\n        clearTimeout(timer);\n      }, props.delay);\n    };\n\n    const realLoading = computed(() => (!props.delay || delayShowLoading.value) && props.loading);\n\n    watch(\n      () => props.loading,\n      (value) => {\n        if (value) {\n          props.delay && countDelay();\n        }\n      },\n      {\n        immediate: true,\n      },\n    );\n\n    const rootClass = computed(() => [\n      loadingClass.value,\n      { [`${loadingClass.value}--vertical`]: props.layout === 'vertical' },\n    ]);\n\n    const textClass = computed(() => [\n      `${loadingClass.value}__text`,\n      {\n        [`${loadingClass.value}__text--only`]: !props.indicator,\n      },\n    ]);\n\n    const rootStyle = computed(() => {\n      const style = [];\n      if (props.inheritColor) {\n        style.push('color: inherit');\n      }\n      if (props.size) {\n        style.push(`font-size: ${props.size};`);\n      }\n      return style.join(';');\n    });\n\n    const defaultIndicator = {\n      circular: TGradientIcon,\n      spinner: SpinnerIcon,\n    };\n\n    const dotsLoading = computed(() => {\n      setBlockTracking(-1);\n      const node = (\n        <div\n          class={`${loadingClass.value}__dots`}\n          style={{\n            animationPlayState: props.pause ? 'paused' : '',\n            animationDirection: props.reverse ? 'reverse' : '',\n            animationDuration: `${props.duration}ms`,\n            width: props.size,\n            height: props.size,\n          }}\n        >\n          {Array.from({ length: 3 }).map((val, i) => {\n            return (\n              <div\n                class={`${loadingClass.value}__dot`}\n                style={\n                  props.duration\n                    ? `animation-duration: ${props.duration / 1000}s; animation-delay: ${(props.duration * i) / 3000}s`\n                    : ''\n                }\n              ></div>\n            );\n          })}\n        </div>\n      );\n      setBlockTracking(1);\n      return node;\n    });\n\n    const defaultLoading = computed(() => {\n      setBlockTracking(-1);\n      const TIndicator = defaultIndicator[props.theme || 'circular'];\n      const node = (\n        <TIndicator\n          style={{\n            animationPlayState: props.pause ? 'paused' : '',\n            animationDirection: props.reverse ? 'reverse' : '',\n            animationDuration: `${props.duration}ms`,\n            width: props.size,\n            height: props.size,\n          }}\n        />\n      );\n\n      setBlockTracking(1);\n      return node;\n    });\n\n    return () => {\n      const indicator = renderTNodeJSX('indicator', {\n        defaultNode: props.theme === 'dots' ? dotsLoading.value : defaultLoading.value,\n      });\n      const text = renderTNodeJSX('text');\n      const TNodeContent = renderTNodeContent('default', 'content');\n      return (\n        <div class={rootClass.value} style={rootStyle.value}>\n          {realLoading.value && indicator}\n          {text && realLoading.value && <span class={textClass.value}>{text}</span>}\n          {TNodeContent}\n        </div>\n      );\n    };\n  },\n});\n","import Loading from './loading';\nimport { withInstall, WithInstallType } from '../shared';\n\nimport { TdLoadingProps } from './type';\nimport './style';\n\nexport * from './type';\nexport type LoadingProps = TdLoadingProps;\n\nconst _Loading: WithInstallType<typeof Loading> = withInstall(Loading);\nexport default _Loading;\n"],"names":["prefix","config","defineComponent","name","props","style","Object","setup","gradientClass","usePrefixClass","classes","value","concat","circle","ref","updateColor","circleElem","circleAdapter","onMounted","nextTick","onUpdated","_createVNode","spinnerClass","_toConsumableArray","Array","map","_","index","renderTNodeJSX","useTNodeJSX","renderTNodeContent","useContent","loadingClass","delayShowLoading","countDelay","timer","setTimeout","clearTimeout","delay","realLoading","computed","loading","watch","immediate","rootClass","_defineProperty","layout","textClass","indicator","rootStyle","inheritColor","push","size","join","defaultIndicator","circular","TGradientIcon","spinner","SpinnerIcon","dotsLoading","setBlockTracking","node","animationPlayState","pause","animationDirection","reverse","animationDuration","duration","width","height","from","length","val","i","defaultLoading","TIndicator","theme","defaultNode","text","TNodeContent","_Loading","withInstall","Loading"],"mappings":"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"}