{"version":3,"file":"index.js","sources":["../../src/input/input.tsx","../../src/input/index.ts"],"sourcesContent":["import { PropType, ref, computed, defineComponent, toRefs, nextTick, watch } from 'vue';\nimport { CloseCircleFilledIcon as TCloseCircleFilledIcon } from 'tdesign-icons-vue-next';\nimport { useFocus } from '@vueuse/core';\nimport config from '../config';\nimport InputProps from './props';\nimport { InputValue, TdInputProps } from './type';\nimport { getCharacterLength, useDefault, extendAPI } from '../shared';\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nconst { prefix } = config;\nconst name = `${prefix}-input`;\n\nexport default defineComponent({\n  name,\n  props: {\n    ...InputProps,\n    labelAlign: {\n      type: String,\n      default: 'top',\n    },\n    pattern: {\n      type: String,\n    },\n    inputmode: {\n      type: String as PropType<'search' | 'text' | 'none' | 'url' | 'tel' | 'email' | 'numeric' | 'decimal'>,\n      validator(val: string): boolean {\n        if (!val) return true;\n        return ['search', 'text', 'none', 'url', 'tel', 'email', 'numeric', 'decimal'].includes(val);\n      },\n    },\n  },\n  setup(props, context) {\n    const readerTNodeJSX = useTNodeJSX();\n    const inputClass = usePrefixClass('input');\n    const isDisabled = useFormDisabled();\n\n    const inputRef = ref();\n    const { autofocus } = toRefs(props);\n    const [innerValue] = useDefault<string, TdInputProps>(props, context.emit, 'value', 'change');\n\n    const status = props.status || 'default';\n\n    const { focused } = useFocus(inputRef, { initialValue: props.autofocus });\n\n    const inputClasses = computed(() => [\n      `${inputClass.value}__control`,\n      {\n        [`${inputClass.value}--${props.align}`]: props.align !== 'left',\n        [`${inputClass.value}--${status}`]: status,\n        [`${inputClass.value}__control--disabled`]: isDisabled.value,\n      },\n    ]);\n\n    const rootClasses = computed(() => [\n      inputClass.value,\n      {\n        [`${inputClass.value}--layout-${props.layout}`]: props.layout,\n        [`${inputClass.value}--center`]: props.labelAlign === 'center',\n        [`${inputClass.value}--border`]: !props.borderless,\n      },\n    ]);\n\n    const setInputValue = (v: InputValue = '') => {\n      const input = inputRef.value as HTMLInputElement;\n      const sV = String(v);\n      if (!input) {\n        return;\n      }\n      if (input.value !== sV) {\n        input.value = sV;\n      }\n    };\n\n    const handleInput = (e: Event) => {\n      // 中文输入的时候inputType是insertCompositionText所以中文输入的时候禁止触发。\n      if (e instanceof InputEvent) {\n        const checkInputType = e.inputType && e.inputType === 'insertCompositionText';\n        if (e.isComposing || checkInputType) return;\n      }\n      inputValueChangeHandle(e);\n    };\n\n    const inputValueChangeHandle = (e: Event) => {\n      const { value } = e.target as HTMLInputElement;\n      const { allowInputOverMax, maxcharacter } = props;\n      if (!allowInputOverMax && maxcharacter && maxcharacter > 0 && !Number.isNaN(maxcharacter)) {\n        const { length = 0, characters = '' } = getCharacterLength(value, maxcharacter) as {\n          length: number;\n          characters: string;\n        };\n        innerValue.value = characters;\n      } else {\n        innerValue.value = value;\n      }\n      nextTick(() => setInputValue(innerValue.value));\n    };\n\n    const focus = () => {\n      focused.value = true;\n    };\n\n    const blur = () => {\n      focused.value = false;\n      // inputRef.value?.blur();\n    };\n\n    extendAPI({ focus, blur });\n\n    const handleClear = (e: MouseEvent) => {\n      innerValue.value = '';\n      focused.value = true;\n      props.onClear?.({ e });\n    };\n    const handleFocus = (e: FocusEvent) => {\n      props.onFocus?.(innerValue.value, { e });\n    };\n    const handleBlur = (e: FocusEvent) => {\n      props.onBlur?.(innerValue.value, { e });\n    };\n\n    const handleCompositionend = (e: CompositionEvent) => {\n      inputValueChangeHandle(e);\n    };\n\n    watch(autofocus, (autofocus, prevAutofocus) => {\n      if (autofocus === true) {\n        nextTick(() => {\n          focused.value = true;\n        });\n      }\n    });\n\n    return () => {\n      const readerPrefix = () => {\n        const prefixIcon = readerTNodeJSX('prefixIcon');\n        const label = readerTNodeJSX('label');\n\n        return (\n          <div class={`${inputClass.value}__wrap--prefix`}>\n            {prefixIcon && <div class={`${inputClass.value}__icon--prefix`}>{prefixIcon}</div>}\n            <div class={`${inputClass.value}__label`}>{label}</div>\n          </div>\n        );\n      };\n      const readerClearable = () => {\n        if (props.clearable && innerValue.value && innerValue.value.length > 0) {\n          return (\n            <div class={`${inputClass.value}__wrap--clearable-icon`} onClick={handleClear}>\n              <TCloseCircleFilledIcon />\n            </div>\n          );\n        }\n        return null;\n      };\n      const readerSuffix = () => {\n        const suffix = readerTNodeJSX('suffix');\n        if (!suffix) {\n          return null;\n        }\n        return <div class={`${inputClass.value}__wrap--suffix`}>{suffix}</div>;\n      };\n\n      const readerSuffixIcon = () => {\n        const suffixIcon = readerTNodeJSX('suffixIcon');\n        if (!suffixIcon) {\n          return null;\n        }\n        return <div class={`${inputClass.value}__wrap--suffix-icon`}>{suffixIcon}</div>;\n      };\n\n      const readerTips = () => {\n        const tips = readerTNodeJSX('tips');\n        if (!tips) {\n          return null;\n        }\n        return <div class={`${inputClass.value}__tips ${inputClass.value}--${props.align}`}>{tips}</div>;\n      };\n\n      return (\n        <div class={rootClasses.value}>\n          {readerPrefix()}\n          <div class={`${inputClass.value}__wrap`}>\n            <div class={`${inputClass.value}__content ${inputClass.value}--${status || 'default'}`}>\n              <input\n                ref={inputRef}\n                value={innerValue.value}\n                name={props.name}\n                class={inputClasses.value}\n                type={props.type}\n                disabled={isDisabled.value}\n                autocomplete={props.autocomplete ? 'On' : 'Off'}\n                placeholder={props.placeholder}\n                readonly={props.readonly}\n                maxlength={props.maxlength || -1}\n                pattern={props.pattern}\n                inputmode={props.inputmode}\n                onFocus={handleFocus}\n                onBlur={handleBlur}\n                onInput={handleInput}\n                onCompositionend={handleCompositionend}\n              />\n              {readerClearable()}\n              {readerSuffix()}\n              {readerSuffixIcon()}\n            </div>\n            {readerTips()}\n          </div>\n        </div>\n      );\n    };\n  },\n});\n","import { withInstall, WithInstallType } from '../shared';\nimport Input from './input';\n\nimport './style';\nimport { TdInputProps } from './type';\n\nexport * from './type';\nexport type InputProps = TdInputProps;\n\nconst _Input: WithInstallType<typeof Input> = withInstall(Input);\nexport default _Input;\n"],"names":["prefix","config","name","defineComponent","props","_objectSpread","InputProps","labelAlign","type","String","default","pattern","inputmode","validator","val","includes","setup","context","readerTNodeJSX","useTNodeJSX","inputClass","usePrefixClass","isDisabled","useFormDisabled","inputRef","ref","_toRefs","toRefs","autofocus","_useDefault","useDefault","emit","_useDefault2","_slicedToArray","innerValue","status","_useFocus","useFocus","initialValue","focused","inputClasses","computed","concat","value","_defineProperty","align","rootClasses","layout","borderless","setInputValue","v","arguments","length","undefined","input","sV","handleInput","e","InputEvent","checkInputType","inputType","isComposing","inputValueChangeHandle","target","allowInputOverMax","maxcharacter","Number","isNaN","_getCharacterLength","getCharacterLength","_getCharacterLength$l","_getCharacterLength$c","characters","nextTick","focus","blur","extendAPI","handleClear","_props$onClear","onClear","call","handleFocus","_props$onFocus","onFocus","handleBlur","_props$onBlur","onBlur","handleCompositionend","watch","prevAutofocus","readerPrefix","prefixIcon","label","_createVNode","readerClearable","clearable","TCloseCircleFilledIcon","readerSuffix","suffix","readerSuffixIcon","suffixIcon","readerTips","tips","autocomplete","placeholder","readonly","maxlength","_Input","withInstall","Input"],"mappings":"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"}