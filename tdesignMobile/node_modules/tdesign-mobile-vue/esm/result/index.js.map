{"version":3,"file":"index.js","sources":["../../src/hooks/icon.tsx","../../src/result/result.tsx","../../src/result/index.ts"],"sourcesContent":["import isFunction from 'lodash/isFunction';\nimport { getCurrentInstance, h } from 'vue';\n\n/**\n * 渲染icon，用于icon、close等渲染图标的场景\n * @example const renderIconTNode = useIcon();\n * @returns renderIconTNode\n * @param iconType 要渲染的icon元素\n * @param defaultIcons 默认icon集合\n */\nexport function useIcon() {\n  const instance = getCurrentInstance();\n  return function renderIconTNode(iconType: string, defaultIcons?: Record<string, any>) {\n    let iconContent;\n    // 传入的是渲染函数\n    if (isFunction(instance.props[iconType])) {\n      iconContent = (instance.props as Object)[iconType](h);\n    } else if (instance.slots[iconType]) {\n      // 插槽slot\n      iconContent = instance.slots[iconType] && instance.slots[iconType](null)[0];\n    } else if (defaultIcons) {\n      const Component = defaultIcons[instance.props.theme as string];\n      iconContent = Component;\n    }\n    return iconContent;\n  };\n}\n","import { computed, defineComponent } from 'vue';\nimport { InfoCircleIcon, CheckCircleIcon, CloseCircleIcon } from 'tdesign-icons-vue-next';\nimport config from '../config';\nimport ResultProps from './props';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport TImage from '../image';\nimport { useIcon } from '../hooks/icon';\nimport { usePrefixClass } from '../hooks/useClass';\n\nconst { prefix } = config;\nconst name = `${prefix}-result`;\nexport default defineComponent({\n  name,\n  props: ResultProps,\n  setup(props) {\n    const resultClass = usePrefixClass('result');\n    const renderTNodeJSX = useTNodeJSX();\n    const renderIconTNode = useIcon();\n    const resultClasses = computed(() => [\n      `${resultClass.value}`,\n      `${resultClass.value}--theme-${props.theme || 'default'}`,\n    ]);\n\n    const renderIcon = () => {\n      const defaultIcons = {\n        default: InfoCircleIcon,\n        success: CheckCircleIcon,\n        warning: InfoCircleIcon,\n        error: CloseCircleIcon,\n      };\n      const iconContent = renderIconTNode('icon', defaultIcons);\n      return iconContent ? <iconContent class={`${resultClass.value}__icon`}></iconContent> : null;\n    };\n\n    const renderImage = () => {\n      const image = renderTNodeJSX('image');\n      if (image) {\n        if (typeof image === 'string') {\n          return <TImage src={image} />;\n        }\n        return image;\n      }\n      return null;\n    };\n\n    const renderThumb = () => {\n      const image = renderImage();\n      return <div class={`${resultClass.value}__thumb`}>{image || renderIcon()}</div>;\n    };\n\n    const renderTitle = () => {\n      const title = renderTNodeJSX('title');\n      return title ? <div class={[`${resultClass.value}__title`]}>{title}</div> : null;\n    };\n\n    const renderDescription = () => {\n      const description = renderTNodeJSX('description');\n      return description ? <div class={[`${resultClass.value}__description`]}>{description}</div> : null;\n    };\n\n    return () => {\n      return (\n        <div class={[resultClasses.value]}>\n          {renderThumb()}\n          {renderTitle()}\n          {renderDescription()}\n        </div>\n      );\n    };\n  },\n});\n","import Result from './result';\nimport { withInstall, WithInstallType } from '../shared';\n\nimport './style';\nimport { TdResultProps } from './type';\n\nexport * from './type';\nexport type ResultProps = TdResultProps;\nconst _Result: WithInstallType<typeof Result> = withInstall(Result);\nexport default _Result;\n"],"names":["useIcon","instance","getCurrentInstance","renderIconTNode","iconType","defaultIcons","iconContent","isFunction","props","h","slots","Component","theme","prefix","config","name","defineComponent","ResultProps","setup","resultClass","usePrefixClass","renderTNodeJSX","useTNodeJSX","resultClasses","computed","concat","value","renderIcon","default","InfoCircleIcon","success","CheckCircleIcon","warning","error","CloseCircleIcon","renderImage","image","_createVNode","TImage","renderThumb","renderTitle","title","renderDescription","description","_Result","withInstall","Result"],"mappings":"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"}