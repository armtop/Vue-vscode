{"version":3,"file":"action-sheet-list.js","sources":["../../src/action-sheet/action-sheet-list.vue","../../src/action-sheet/action-sheet-list.vue?vue&type=template&id=5d2887c8&lang.js"],"sourcesContent":["<template>\n  <div :class=\"`${name}__list`\">\n    <t-button\n      v-for=\"(item, index) in items\"\n      :key=\"index\"\n      variant=\"text\"\n      block\n      :class=\"[itemClasses, { [`${name}__list-item--disabled`]: item.disabled }]\"\n      :disabled=\"item.disabled\"\n      :icon=\"item.icon\"\n      :style=\"{ color: item.color }\"\n      @click=\"handleSelected(index)\"\n    >\n      <t-node v-if=\"item.badge\" :content=\"item.badge\">\n        <span :class=\"`${name}__list-item-text`\"> {{ item.label }}</span>\n      </t-node>\n      <t-badge\n        v-if=\"item.badge && (item.badge.dot || item.badge.count)\"\n        :count=\"item.badge.count\"\n        :max-count=\"item.badge.maxCount || 99\"\n        :dot=\"item.badge.dot\"\n        :content=\"item.badge.content\"\n        :size=\"item.badge.size\"\n        :offset=\"item.badge.offset || [-16, 20]\"\n      >\n        <span :class=\"`${name}__list-item-text`\"> {{ item.label }}</span>\n      </t-badge>\n      <span v-else :class=\"`${name}__list-item-text`\"> {{ item.label }}</span>\n    </t-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, PropType, computed } from 'vue';\nimport config from '../config';\nimport { ActionSheetItem } from './type';\nimport TButton from '../button';\nimport TBadge from '../badge';\nimport { TNode } from '../shared';\n\nconst { prefix } = config;\n\nconst name = `${prefix}-action-sheet`;\n\nexport default defineComponent({\n  components: { TNode, TButton, TBadge },\n  props: {\n    items: {\n      type: Array as PropType<ActionSheetItem[]>,\n      required: true,\n    },\n    align: {\n      type: String as PropType<'left' | 'center'>,\n      default: 'center',\n    },\n  },\n  emits: ['selected'],\n  setup(props, context) {\n    const handleSelected = (index: number) => {\n      context.emit('selected', index);\n    };\n    const itemClasses = computed(() => ({\n      [`${name}__list-item`]: true,\n      [`${name}__list-item--left`]: props.align === 'left',\n    }));\n    return {\n      name: ref(name),\n      itemClasses,\n      handleSelected,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"`${name}__list`\">\n    <t-button\n      v-for=\"(item, index) in items\"\n      :key=\"index\"\n      variant=\"text\"\n      block\n      :class=\"[itemClasses, { [`${name}__list-item--disabled`]: item.disabled }]\"\n      :disabled=\"item.disabled\"\n      :icon=\"item.icon\"\n      :style=\"{ color: item.color }\"\n      @click=\"handleSelected(index)\"\n    >\n      <t-node v-if=\"item.badge\" :content=\"item.badge\">\n        <span :class=\"`${name}__list-item-text`\"> {{ item.label }}</span>\n      </t-node>\n      <t-badge\n        v-if=\"item.badge && (item.badge.dot || item.badge.count)\"\n        :count=\"item.badge.count\"\n        :max-count=\"item.badge.maxCount || 99\"\n        :dot=\"item.badge.dot\"\n        :content=\"item.badge.content\"\n        :size=\"item.badge.size\"\n        :offset=\"item.badge.offset || [-16, 20]\"\n      >\n        <span :class=\"`${name}__list-item-text`\"> {{ item.label }}</span>\n      </t-badge>\n      <span v-else :class=\"`${name}__list-item-text`\"> {{ item.label }}</span>\n    </t-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, defineComponent, PropType, computed } from 'vue';\nimport config from '../config';\nimport { ActionSheetItem } from './type';\nimport TButton from '../button';\nimport TBadge from '../badge';\nimport { TNode } from '../shared';\n\nconst { prefix } = config;\n\nconst name = `${prefix}-action-sheet`;\n\nexport default defineComponent({\n  components: { TNode, TButton, TBadge },\n  props: {\n    items: {\n      type: Array as PropType<ActionSheetItem[]>,\n      required: true,\n    },\n    align: {\n      type: String as PropType<'left' | 'center'>,\n      default: 'center',\n    },\n  },\n  emits: ['selected'],\n  setup(props, context) {\n    const handleSelected = (index: number) => {\n      context.emit('selected', index);\n    };\n    const itemClasses = computed(() => ({\n      [`${name}__list-item`]: true,\n      [`${name}__list-item--left`]: props.align === 'left',\n    }));\n    return {\n      name: ref(name),\n      itemClasses,\n      handleSelected,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TNode","TButton","TBadge","props","items","type","Array","required","align","String","default","emits","setup","context","handleSelected","index","emit","itemClasses","computed","_defineProperty","concat","ref","_createElementBlock","class","_ctx","_openBlock","_Fragment","_renderList","item","_createBlock","_component_t_button","key","variant","block","disabled","icon","style","_normalizeStyle","color","onClick","$event","badge","_component_t_node","content","_createElementVNode","_toDisplayString","label","dot","count","_component_t_badge","maxCount","size","offset"],"mappings":"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"}