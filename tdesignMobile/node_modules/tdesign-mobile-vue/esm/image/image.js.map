{"version":3,"file":"image.js","sources":["../../src/image/image.vue","../../src/image/image.vue?vue&type=template&id=724dbc64&lang.js"],"sourcesContent":["<template>\n  <div :class=\"classes\">\n    <div v-if=\"isLoading || isError\" :class=\"`${name}__mask`\">\n      <t-node :content=\"statusContent\" />\n    </div>\n    <picture>\n      <template v-if=\"srcset\">\n        <source v-for=\"(item, index) in Object.entries(srcset)\" :key=\"index\" :type=\"item[0]\" :srcset=\"item[1]\" />\n      </template>\n      <img\n        ref=\"imageDOM\"\n        :class=\"`${name}__img`\"\n        :style=\"imageStyles\"\n        :src=\"realSrc\"\n        :alt=\"alt\"\n        @load=\"handleImgLoadCompleted\"\n        @error=\"handleImgLoadError\"\n      />\n    </picture>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, getCurrentInstance, h, watchEffect } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\n\nimport Loading from '../loading';\nimport { renderTNode, TNode } from '../shared';\nimport ImageProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-image`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: ImageProps,\n  setup(props, context) {\n    // 默认loading和error状态展示，slot支持Node和Function\n    const internalInstance = getCurrentInstance();\n\n    const closeIcon = h(CloseIcon, { size: '22px' });\n    const LoadingIcon = h(Loading, { theme: 'dots', inheritColor: true });\n    const statusContent = computed(() => {\n      if (context.slots?.loading && isLoading.value) {\n        return renderTNode(internalInstance, 'loading');\n      }\n      if (!context.slots?.loading && isLoading.value) {\n        return LoadingIcon;\n      }\n      if (context.slots?.error && isError.value) {\n        return renderTNode(internalInstance, 'error');\n      }\n      if (!context.slots?.error && isError.value) {\n        return closeIcon;\n      }\n      return '';\n    });\n\n    // 记录图片的loading、error状态\n    const isLoading = ref(true);\n    const isError = ref(false);\n\n    // 图片自定义样式\n    const imageStyles = computed(() => {\n      return {\n        objectFit: props.fit,\n        objectPosition: props.position,\n      };\n    });\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${name}--${props.shape}`]: true,\n    }));\n\n    // 图片懒加载\n    const imageDOM = ref();\n    const realSrc = ref('');\n    watchEffect(() => {\n      realSrc.value = props.lazy ? '' : props.src;\n    });\n    const { stop } = useIntersectionObserver(imageDOM, ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting && props.lazy) {\n        // 停止监听\n        stop();\n        realSrc.value = props.src;\n      }\n    });\n\n    // 图片加载完成回调\n    const handleImgLoadCompleted = (e: Event) => {\n      props.onLoad?.({ e });\n      isLoading.value = false;\n    };\n\n    // 图片加载失败回调\n    const handleImgLoadError = (e: Event) => {\n      if (realSrc.value === '') {\n        return;\n      }\n      props.onError?.({ e });\n      isLoading.value = false;\n      isError.value = true;\n    };\n    return {\n      imageDOM,\n      statusContent,\n      name,\n      classes,\n      imageStyles,\n      isLoading,\n      realSrc,\n      isError,\n      handleImgLoadCompleted,\n      handleImgLoadError,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"classes\">\n    <div v-if=\"isLoading || isError\" :class=\"`${name}__mask`\">\n      <t-node :content=\"statusContent\" />\n    </div>\n    <picture>\n      <template v-if=\"srcset\">\n        <source v-for=\"(item, index) in Object.entries(srcset)\" :key=\"index\" :type=\"item[0]\" :srcset=\"item[1]\" />\n      </template>\n      <img\n        ref=\"imageDOM\"\n        :class=\"`${name}__img`\"\n        :style=\"imageStyles\"\n        :src=\"realSrc\"\n        :alt=\"alt\"\n        @load=\"handleImgLoadCompleted\"\n        @error=\"handleImgLoadError\"\n      />\n    </picture>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, getCurrentInstance, h, watchEffect } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { CloseIcon } from 'tdesign-icons-vue-next';\n\nimport Loading from '../loading';\nimport { renderTNode, TNode } from '../shared';\nimport ImageProps from './props';\nimport config from '../config';\n\nconst { prefix } = config;\nconst name = `${prefix}-image`;\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props: ImageProps,\n  setup(props, context) {\n    // 默认loading和error状态展示，slot支持Node和Function\n    const internalInstance = getCurrentInstance();\n\n    const closeIcon = h(CloseIcon, { size: '22px' });\n    const LoadingIcon = h(Loading, { theme: 'dots', inheritColor: true });\n    const statusContent = computed(() => {\n      if (context.slots?.loading && isLoading.value) {\n        return renderTNode(internalInstance, 'loading');\n      }\n      if (!context.slots?.loading && isLoading.value) {\n        return LoadingIcon;\n      }\n      if (context.slots?.error && isError.value) {\n        return renderTNode(internalInstance, 'error');\n      }\n      if (!context.slots?.error && isError.value) {\n        return closeIcon;\n      }\n      return '';\n    });\n\n    // 记录图片的loading、error状态\n    const isLoading = ref(true);\n    const isError = ref(false);\n\n    // 图片自定义样式\n    const imageStyles = computed(() => {\n      return {\n        objectFit: props.fit,\n        objectPosition: props.position,\n      };\n    });\n    const classes = computed(() => ({\n      [`${name}`]: true,\n      [`${name}--${props.shape}`]: true,\n    }));\n\n    // 图片懒加载\n    const imageDOM = ref();\n    const realSrc = ref('');\n    watchEffect(() => {\n      realSrc.value = props.lazy ? '' : props.src;\n    });\n    const { stop } = useIntersectionObserver(imageDOM, ([{ isIntersecting }], observerElement) => {\n      if (isIntersecting && props.lazy) {\n        // 停止监听\n        stop();\n        realSrc.value = props.src;\n      }\n    });\n\n    // 图片加载完成回调\n    const handleImgLoadCompleted = (e: Event) => {\n      props.onLoad?.({ e });\n      isLoading.value = false;\n    };\n\n    // 图片加载失败回调\n    const handleImgLoadError = (e: Event) => {\n      if (realSrc.value === '') {\n        return;\n      }\n      props.onError?.({ e });\n      isLoading.value = false;\n      isError.value = true;\n    };\n    return {\n      imageDOM,\n      statusContent,\n      name,\n      classes,\n      imageStyles,\n      isLoading,\n      realSrc,\n      isError,\n      handleImgLoadCompleted,\n      handleImgLoadError,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TNode","props","ImageProps","setup","context","internalInstance","getCurrentInstance","closeIcon","h","CloseIcon","size","LoadingIcon","Loading","theme","inheritColor","statusContent","computed","_context$slots","_context$slots2","_context$slots3","_context$slots4","slots","loading","isLoading","value","renderTNode","error","isError","ref","imageStyles","objectFit","fit","objectPosition","position","classes","_defineProperty","concat","shape","imageDOM","realSrc","watchEffect","lazy","src","_useIntersectionObser","useIntersectionObserver","_ref2","observerElement","_ref3","_slicedToArray","isIntersecting","stop","handleImgLoadCompleted","e","_props$onLoad","onLoad","call","handleImgLoadError","_props$onError","onError","_createElementBlock","class","_ctx","_createVNode","_component_t_node","content","_createElementVNode","srcset","_Fragment","key","_renderList","Object","entries","item","index","type","style","alt","apply","arguments"],"mappings":"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"}