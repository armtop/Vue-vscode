/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, createVNode, Transition, withDirectives, vShow } from 'vue';
import { preventDefault } from '../shared/dom.js';
import config from '../config.js';
import OverlayProps from './props.js';
import { usePrefixClass } from '../hooks/useClass.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import '../shared/index.js';
import './style';
import { withInstall } from '../shared/component.js';
import 'lodash/isFunction';
import 'lodash/isString';
import '../shared/util.js';
import '@babel/runtime/helpers/slicedToArray';
import 'lodash/isNumber';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-4c6045f6.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-1d280204.js';
import 'dayjs';
import '../_chunks/dep-5101c61a.js';
import '../config-provider/type.js';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';
import '../shared/functions.js';
import '../shared/constants.js';
import '../shared/render.js';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '../shared/useTest/index.js';
import '../shared/useClickAway/index.js';
import '../shared/useGesture/index.js';
import '@use-gesture/vanilla';
import '../shared/hover.js';

var prefix = config.prefix;
var name = "".concat(prefix, "-overlay");
var _Overlay = defineComponent({
  name: name,
  props: OverlayProps,
  setup: function setup(props) {
    var renderTNodeJSX = useTNodeJSX();
    var overlayClass = usePrefixClass("overlay");
    var overlayClasses = computed(function () {
      return _defineProperty(_defineProperty({}, "".concat(overlayClass.value), true), "".concat(overlayClass.value, "--active"), props.visible);
    });
    var overlayStyles = computed(function () {
      var arr = [];
      if (props.customStyle) {
        arr.push(props.customStyle);
      }
      if (props.zIndex) {
        arr.push("z-index: ".concat(props.zIndex));
      }
      if (props.duration) {
        arr.push("transition-duration: ".concat(props.duration, "ms"));
      }
      if (props.backgroundColor) {
        arr.push("background-color: ".concat(props.backgroundColor));
      }
      return arr.join("; ");
    });
    var handleTouchMove = function handleTouchMove(e) {
      if (props.preventScrollThrough) {
        preventDefault(e, true);
      }
    };
    var handleClick = function handleClick(e) {
      var _props$onClick;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, {
        e: e
      });
    };
    return function () {
      return createVNode(Transition, {
        "name": name
      }, {
        default: function _default() {
          return [withDirectives(createVNode("div", {
            "class": overlayClasses.value,
            "style": overlayStyles.value,
            "onClick": handleClick,
            "onTouchmove": handleTouchMove
          }, [renderTNodeJSX("default")]), [[vShow, props.visible]])];
        }
      });
    };
  }
});

var Overlay = withInstall(_Overlay);

export { Overlay as default };
//# sourceMappingURL=index.js.map
