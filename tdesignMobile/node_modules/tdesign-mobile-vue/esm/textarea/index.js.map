{"version":3,"file":"index.js","sources":["../../src/textarea/textarea.tsx","../../src/textarea/index.ts"],"sourcesContent":["import { computed, ref, onMounted, defineComponent, toRefs, nextTick, watch } from 'vue';\nimport { getCharacterLength, useVModel } from '../shared';\nimport config from '../config';\nimport TextareaProps from './props';\nimport { TextareaValue } from './type';\nimport calcTextareaHeight from '../_common/js/utils/calcTextareaHeight';\nimport { useFormDisabled } from '../form/hooks';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { useTNodeJSX } from '../hooks/tnode';\n\nconst { prefix } = config;\nconst name = `${prefix}-textarea`;\n\nexport default defineComponent({\n  name,\n  props: TextareaProps,\n  setup(props, context) {\n    const renderTNodeJSX = useTNodeJSX();\n    const disabled = useFormDisabled();\n\n    const textareaClass = usePrefixClass('textarea');\n\n    const textareaClasses = computed(() => [\n      `${textareaClass.value}`,\n      {\n        [`${textareaClass.value}--layout-${props.layout}`]: props.layout,\n        [`${textareaClass.value}--border`]: props.bordered,\n      },\n    ]);\n    const textareaInnerClasses = computed(() => [\n      `${textareaClass.value}__wrapper-inner`,\n      {\n        [`${textareaClass.value}--disabled`]: disabled.value,\n        [`${textareaClass.value}--readonly`]: props.readonly,\n      },\n    ]);\n\n    const textareaRef = ref<HTMLTextAreaElement>();\n    const textareaStyle = ref();\n    const textareaLength = ref(0);\n    const { value, modelValue } = toRefs(props);\n    const [innerValue, setInnerValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n\n    const setInputValue = (v: TextareaValue = '') => {\n      const input = textareaRef.value;\n      const sV = String(v);\n      if (!input) {\n        return;\n      }\n      if (input.value !== sV) {\n        input.value = sV;\n      }\n    };\n\n    const adjustTextareaHeight = () => {\n      if (props.autosize === true) {\n        textareaStyle.value = calcTextareaHeight(textareaRef.value);\n      } else if (props.autosize === false) {\n        textareaStyle.value = calcTextareaHeight(textareaRef.value, 1, 1);\n      } else if (typeof props.autosize === 'object') {\n        const { minRows, maxRows } = props.autosize;\n        textareaStyle.value = calcTextareaHeight(textareaRef.value, minRows, maxRows);\n      } else if (context.attrs.rows) {\n        textareaStyle.value = { height: 'auto', minHeight: 'auto' };\n      }\n    };\n\n    const handleInput = (e: Event) => {\n      if (e instanceof InputEvent) {\n        if (e.isComposing || e.inputType === 'insertCompositionText') return;\n      }\n      textareaValueChangeHandle();\n    };\n\n    const textareaValueChangeHandle = () => {\n      const textarea = textareaRef.value;\n\n      if (\n        !props.allowInputOverMax &&\n        props.maxcharacter &&\n        props.maxcharacter > 0 &&\n        !Number.isNaN(props.maxcharacter)\n      ) {\n        const { length = 0, characters = '' } = getCharacterLength(textarea.value, props.maxcharacter) as {\n          length: number;\n          characters: string;\n        };\n        setInnerValue(characters);\n        textareaLength.value = length;\n      } else {\n        setInnerValue(textarea.value);\n        textareaLength.value = textarea.value.length;\n      }\n      nextTick(() => setInputValue(innerValue.value));\n      adjustTextareaHeight();\n    };\n\n    const handleCompositionend = (e: InputEvent | CompositionEvent) => {\n      textareaValueChangeHandle();\n    };\n\n    const handleFocus = (e: FocusEvent) => {\n      props.onFocus?.(innerValue.value, { e });\n    };\n    const handleBlur = (e: FocusEvent) => {\n      props.onBlur?.(innerValue.value, { e });\n    };\n\n    onMounted(() => {\n      if (props.autofocus) {\n        textareaRef.value?.focus();\n      }\n      textareaValueChangeHandle();\n      adjustTextareaHeight();\n    });\n\n    watch(innerValue, () => {\n      nextTick(() => {\n        adjustTextareaHeight();\n      });\n    });\n    watch(\n      () => props.autosize,\n      () => {\n        adjustTextareaHeight();\n      },\n    );\n\n    return () => {\n      const renaderLabel = () => {\n        const label = renderTNodeJSX('label');\n        return label ? <div class={`${textareaClass.value}__label`}>{label}</div> : null;\n      };\n      const readerIndicator = () => {\n        const isShowIndicator = props.indicator && (props.maxcharacter || props.maxlength);\n        if (!isShowIndicator) {\n          return null;\n        }\n        return (\n          <div class={`${textareaClass.value}__indicator`}>\n            {`${textareaLength.value}/${props.maxcharacter || props.maxlength}`}\n          </div>\n        );\n      };\n\n      return (\n        <div class={textareaClasses.value}>\n          {renaderLabel()}\n          <div class={`${textareaClass.value}__wrapper`}>\n            <textarea\n              ref={textareaRef}\n              value={innerValue.value}\n              class={textareaInnerClasses.value}\n              style={textareaStyle.value}\n              name={props.name}\n              maxlength={props.maxlength}\n              disabled={props.disabled}\n              placeholder={props.placeholder}\n              readonly={props.readonly}\n              onFocus={handleFocus}\n              onBlur={handleBlur}\n              onInput={handleInput}\n              onCompositionend={handleCompositionend}\n            />\n            {readerIndicator()}\n          </div>\n        </div>\n      );\n    };\n  },\n});\n","import { withInstall, WithInstallType } from '../shared';\nimport Textarea from './textarea';\n\nimport './style';\n\nimport { TdTextareaProps } from './type';\n\nexport * from './type';\nexport type TextareaProps = TdTextareaProps;\n\nconst _Textarea: WithInstallType<typeof Textarea> = withInstall(Textarea);\nexport default _Textarea;\n"],"names":["prefix","config","name","defineComponent","props","TextareaProps","setup","context","renderTNodeJSX","useTNodeJSX","disabled","useFormDisabled","textareaClass","usePrefixClass","textareaClasses","computed","concat","value","_defineProperty","layout","bordered","textareaInnerClasses","readonly","textareaRef","ref","textareaStyle","textareaLength","_toRefs","toRefs","modelValue","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","innerValue","setInnerValue","setInputValue","v","arguments","length","undefined","input","sV","String","adjustTextareaHeight","autosize","calcTextareaHeight","_typeof","_props$autosize","minRows","maxRows","attrs","rows","height","minHeight","handleInput","e","InputEvent","isComposing","inputType","textareaValueChangeHandle","textarea","allowInputOverMax","maxcharacter","Number","isNaN","_getCharacterLength","getCharacterLength","_getCharacterLength$l","_getCharacterLength$c","characters","nextTick","handleCompositionend","handleFocus","_props$onFocus","onFocus","call","handleBlur","_props$onBlur","onBlur","onMounted","autofocus","_textareaRef$value","focus","watch","renaderLabel","label","_createVNode","readerIndicator","isShowIndicator","indicator","maxlength","placeholder","_Textarea","withInstall","Textarea"],"mappings":"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"}