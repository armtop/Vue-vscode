{"version":3,"file":"rate.js","sources":["../../src/rate/rate.vue","../../src/rate/rate.vue?vue&type=template&id=56006456&lang.js"],"sourcesContent":["<template>\n  <div :class=\"rootClasses\">\n    <div\n      ref=\"rateWrapper\"\n      :class=\"`${name}__wrapper`\"\n      @touchstart=\"onTouchstart\"\n      @touchmove=\"onTouchmove\"\n      @touchend=\"onTouchEnd\"\n      @touchcancel=\"onTouchEnd\"\n    >\n      <component\n        :is=\"iconComponent(n, actualVal)\"\n        v-for=\"n in count\"\n        :key=\"n\"\n        :class=\"classes(n)\"\n        :size=\"size\"\n        :style=\"{ marginRight: `${count > n ? gap : 0}px`, ...colors }\"\n        @click=\"onClick\"\n      />\n    </div>\n\n    <span v-if=\"showText\" :class=\"{ [`${name}__text`]: true, [`${name}__text--active`]: actualVal > 0 }\">\n      {{ rateText }}\n    </span>\n\n    <div v-if=\"tipsVisible\" ref=\"ratePopoverRef\" :class=\"`${name}__tips`\" :style=\"{ left: `${tipsLeft}px` }\">\n      <div v-if=\"actionType === 'tap'\" style=\"display: flex\">\n        <div\n          v-if=\"allowHalf\"\n          :class=\"{\n            [`${name}__tips-item`]: true,\n            [`${name}__tips-item--active`]: actualVal === Math.ceil(popoverValue) - 0.5,\n          }\"\n          @click=\"() => onSelect(Math.ceil(popoverValue) - 0.5)\"\n        >\n          <component\n            :is=\"iconComponent(Math.ceil(popoverValue), Math.ceil(popoverValue) - 0.5)\"\n            :style=\"{ ...colors }\"\n            :size=\"size\"\n            :class=\"`${name}__icon ${name}__icon--unselected`\"\n          />\n          <span :class=\"`${name}__tips-text`\">{{ Math.ceil(popoverValue) - 0.5 }}</span>\n        </div>\n        <div\n          :class=\"{\n            [`${name}__tips-item`]: true,\n            [`${name}__tips-item--active`]: allowHalf && actualVal === Math.ceil(popoverValue),\n          }\"\n          @click=\"() => onSelect(Math.ceil(popoverValue))\"\n        >\n          <component\n            :is=\"iconComponent(Math.ceil(popoverValue), Math.ceil(popoverValue))\"\n            :style=\"{ ...colors }\"\n            :size=\"size\"\n            :class=\"`${name}__icon ${name}__icon--selected`\"\n          />\n          <span :class=\"`${name}__tips-text`\">{{ Math.ceil(popoverValue) }}</span>\n        </div>\n      </div>\n\n      <div v-else :class=\"`${name}__tips-item`\" @click=\"() => onSelect(popoverValue)\">\n        <component\n          :is=\"iconComponent(Math.ceil(popoverValue), popoverValue)\"\n          :style=\"{ ...colors }\"\n          :size=\"size\"\n          :class=\"{\n            [`${name}__icon`]: true,\n            [`${name}__icon--selected`]: Math.ceil(popoverValue) === popoverValue,\n            [`${name}__icon--unselected`]: Math.ceil(popoverValue) !== popoverValue,\n          }\"\n        />\n        <span :class=\"`${name}__tips-text`\">{{ popoverValue }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, h } from 'vue';\nimport { StarFilledIcon } from 'tdesign-icons-vue-next';\nimport { onClickOutside } from '@vueuse/core';\nimport rateProps from './props';\nimport config from '../config';\nimport { TdRateProps } from './type';\nimport { useDefault } from '../shared';\nimport { useFormDisabled } from '../form/hooks';\nimport { useConfig } from '../config-provider/useConfig';\n\nconst { prefix } = config;\nconst name = `${prefix}-rate`;\n\nexport default defineComponent({\n  name,\n  props: rateProps,\n  emits: ['change', 'update:value', 'update:modelValue'],\n  setup(props, context) {\n    const { t, globalConfig } = useConfig('rate');\n    const disabled = useFormDisabled();\n\n    const rateWrapper = ref<HTMLElement | null>(null);\n    const [actualVal] = useDefault<number, TdRateProps>(props, context.emit, 'value', 'change');\n    const rateText = computed(() => {\n      if (Array.isArray(props.texts) && props.texts.length > 0) {\n        return props.texts[actualVal.value - 1];\n      }\n\n      return actualVal.value > 0\n        ? t(globalConfig.value.valueText, { value: actualVal.value })\n        : globalConfig.value.noValueText;\n    });\n    const colors = computed(() => {\n      const { color } = props;\n      if (Array.isArray(color) && color.length === 2) {\n        return {\n          '--td-rate-selected-color': color[0],\n          '--td-rate-unselected-color': color[1],\n        };\n      }\n      if (typeof color === 'string') {\n        return {\n          '--td-rate-selected-color': color,\n        };\n      }\n      return {};\n    });\n\n    const regSize = (val: string | number) => {\n      return `${val}`.includes('px') ? val : `${val}px`;\n    };\n    const unitConvert = (value: number | string): number => {\n      if (typeof value === 'string') {\n        return parseInt(value, 10);\n      }\n      return value;\n    };\n\n    const icon = (isSelect: boolean) => {\n      const { icon } = props;\n      const startComponent = StarFilledIcon;\n      let select = startComponent;\n      let unSelect = startComponent;\n\n      if (Array.isArray(icon)) {\n        const [_select, _unSelect] = icon;\n        if (typeof _select === 'function') {\n          select = _select(h);\n        } else {\n          select = _select;\n        }\n        if (typeof _unSelect === 'function') {\n          unSelect = _unSelect(h);\n        } else {\n          unSelect = _unSelect;\n        }\n      }\n      if (isSelect) {\n        return select || startComponent;\n      }\n      return unSelect || startComponent;\n    };\n\n    const iconComponent = (n: number, value: number) => {\n      const { allowHalf, size } = props;\n      const classPrefix = `${name}__icon-left`;\n      const select = value >= n;\n      const selectHalf = Math.ceil(value) >= n;\n      return h(\n        'div',\n        { style: { fontSize: regSize(size) } },\n        allowHalf\n          ? [\n              h(\n                'div',\n                { class: `${classPrefix} ${selectHalf ? `${classPrefix}--selected` : `${classPrefix}--unselected`}` },\n                h(icon(selectHalf)),\n              ),\n              h(icon(select)),\n            ]\n          : h(icon(select)),\n      );\n    };\n\n    const rootClasses = computed(() => [`${name}`, { [`${name}--disabled`]: disabled.value }]);\n\n    const classes = (n: number) => {\n      const classPrefix = `${name}__icon`;\n\n      return {\n        [classPrefix]: true,\n        [`${classPrefix}--current`]: scaleIndex.value === Math.ceil(n),\n        [`${classPrefix}--${actualVal.value >= n ? 'selected' : 'unselected'}`]: true,\n      };\n    };\n\n    const ratePopoverRef = ref<HTMLElement>();\n    const scaleIndex = ref(-1);\n    const popoverValue = ref(0);\n    const timer = ref<any>(null);\n    const touchEnd = ref(false);\n    const tipsVisible = ref(false);\n    const tipsLeft = ref(0);\n    const actionType = ref<'move' | 'tap'>('tap');\n    const touchStartTime = ref(0);\n\n    onClickOutside(ratePopoverRef, (event) => {\n      hideTips();\n    });\n\n    const hideTips = (delay = false) => {\n      if (delay) {\n        timer.value = setTimeout(() => {\n          handleCloseTips();\n        }, 3000);\n      } else {\n        handleCloseTips();\n      }\n    };\n\n    const handleCloseTips = () => {\n      tipsVisible.value = false;\n      scaleIndex.value = -1;\n      if (timer.value) {\n        clearTimeout(timer.value);\n      }\n    };\n\n    const onClick = (event: MouseEvent) => {\n      if (disabled.value) return;\n      // if (Date.now() - touchStartTime.value > 200) return;\n      getRect(event, 'tap');\n    };\n\n    const onTouch = (e: TouchEvent, eventType: 'move') => {\n      const [touch] = e.touches;\n      getRect(touch, eventType);\n    };\n\n    const onTouchstart = (e: TouchEvent) => {\n      if (disabled.value) return;\n      touchStartTime.value = Date.now();\n      touchEnd.value = false;\n    };\n\n    const onTouchmove = (e: TouchEvent) => {\n      if (disabled.value) return;\n      if (Date.now() - touchStartTime.value <= 200) return;\n      onTouch(e, 'move');\n    };\n\n    const onTouchEnd = (e: TouchEvent) => {\n      if (disabled.value) return;\n      touchEnd.value = true;\n      hideTips();\n    };\n\n    const getRect = (event: Touch | MouseEvent, eventType: 'move' | 'tap') => {\n      if (rateWrapper.value) {\n        const { count, allowHalf, gap, value: currentValue, size } = props;\n        const margin = unitConvert(gap);\n        const { width, left } = rateWrapper.value.getBoundingClientRect();\n        const starWidth = (width - (count - 1) * margin) / count;\n        const offsetX = event.pageX - left;\n        const num = (offsetX + margin) / (starWidth + margin);\n        const remainder = num % 1;\n        const integral = num - remainder;\n        let value = remainder <= 0.5 && allowHalf ? integral + 0.5 : integral + 1;\n\n        if (value > count) {\n          value = count;\n        } else if (value < 0) {\n          value = 0;\n        }\n\n        popoverValue.value = value;\n        const fontSize = size || getComputedStyle(rateWrapper.value).getPropertyValue('font-size');\n        const leftDis = Math.ceil(value - 1) * (unitConvert(gap) + unitConvert(fontSize)) + unitConvert(fontSize) * 0.5;\n        tipsVisible.value = true;\n        tipsLeft.value = Math.max(leftDis, unitConvert(fontSize) * 0.5);\n        scaleIndex.value = Math.ceil(value);\n        actionType.value = eventType;\n\n        if (value !== currentValue) {\n          actualVal.value = value;\n        }\n\n        if (touchEnd.value) {\n          hideTips(true);\n        }\n      }\n    };\n\n    const onSelect = (value: number) => {\n      actualVal.value = value;\n      hideTips();\n    };\n\n    return {\n      name: ref(name),\n      rootClasses,\n      classes,\n      rateWrapper,\n      actualVal,\n      regSize,\n      unitConvert,\n      colors,\n      rateText,\n      onClick,\n      onTouchstart,\n      onTouchmove,\n      onTouchEnd,\n      tipsVisible,\n      tipsLeft,\n      actionType,\n      onSelect,\n      popoverValue,\n      ratePopoverRef,\n      iconComponent,\n    };\n  },\n});\n</script>\n","<template>\n  <div :class=\"rootClasses\">\n    <div\n      ref=\"rateWrapper\"\n      :class=\"`${name}__wrapper`\"\n      @touchstart=\"onTouchstart\"\n      @touchmove=\"onTouchmove\"\n      @touchend=\"onTouchEnd\"\n      @touchcancel=\"onTouchEnd\"\n    >\n      <component\n        :is=\"iconComponent(n, actualVal)\"\n        v-for=\"n in count\"\n        :key=\"n\"\n        :class=\"classes(n)\"\n        :size=\"size\"\n        :style=\"{ marginRight: `${count > n ? gap : 0}px`, ...colors }\"\n        @click=\"onClick\"\n      />\n    </div>\n\n    <span v-if=\"showText\" :class=\"{ [`${name}__text`]: true, [`${name}__text--active`]: actualVal > 0 }\">\n      {{ rateText }}\n    </span>\n\n    <div v-if=\"tipsVisible\" ref=\"ratePopoverRef\" :class=\"`${name}__tips`\" :style=\"{ left: `${tipsLeft}px` }\">\n      <div v-if=\"actionType === 'tap'\" style=\"display: flex\">\n        <div\n          v-if=\"allowHalf\"\n          :class=\"{\n            [`${name}__tips-item`]: true,\n            [`${name}__tips-item--active`]: actualVal === Math.ceil(popoverValue) - 0.5,\n          }\"\n          @click=\"() => onSelect(Math.ceil(popoverValue) - 0.5)\"\n        >\n          <component\n            :is=\"iconComponent(Math.ceil(popoverValue), Math.ceil(popoverValue) - 0.5)\"\n            :style=\"{ ...colors }\"\n            :size=\"size\"\n            :class=\"`${name}__icon ${name}__icon--unselected`\"\n          />\n          <span :class=\"`${name}__tips-text`\">{{ Math.ceil(popoverValue) - 0.5 }}</span>\n        </div>\n        <div\n          :class=\"{\n            [`${name}__tips-item`]: true,\n            [`${name}__tips-item--active`]: allowHalf && actualVal === Math.ceil(popoverValue),\n          }\"\n          @click=\"() => onSelect(Math.ceil(popoverValue))\"\n        >\n          <component\n            :is=\"iconComponent(Math.ceil(popoverValue), Math.ceil(popoverValue))\"\n            :style=\"{ ...colors }\"\n            :size=\"size\"\n            :class=\"`${name}__icon ${name}__icon--selected`\"\n          />\n          <span :class=\"`${name}__tips-text`\">{{ Math.ceil(popoverValue) }}</span>\n        </div>\n      </div>\n\n      <div v-else :class=\"`${name}__tips-item`\" @click=\"() => onSelect(popoverValue)\">\n        <component\n          :is=\"iconComponent(Math.ceil(popoverValue), popoverValue)\"\n          :style=\"{ ...colors }\"\n          :size=\"size\"\n          :class=\"{\n            [`${name}__icon`]: true,\n            [`${name}__icon--selected`]: Math.ceil(popoverValue) === popoverValue,\n            [`${name}__icon--unselected`]: Math.ceil(popoverValue) !== popoverValue,\n          }\"\n        />\n        <span :class=\"`${name}__tips-text`\">{{ popoverValue }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent, h } from 'vue';\nimport { StarFilledIcon } from 'tdesign-icons-vue-next';\nimport { onClickOutside } from '@vueuse/core';\nimport rateProps from './props';\nimport config from '../config';\nimport { TdRateProps } from './type';\nimport { useDefault } from '../shared';\nimport { useFormDisabled } from '../form/hooks';\nimport { useConfig } from '../config-provider/useConfig';\n\nconst { prefix } = config;\nconst name = `${prefix}-rate`;\n\nexport default defineComponent({\n  name,\n  props: rateProps,\n  emits: ['change', 'update:value', 'update:modelValue'],\n  setup(props, context) {\n    const { t, globalConfig } = useConfig('rate');\n    const disabled = useFormDisabled();\n\n    const rateWrapper = ref<HTMLElement | null>(null);\n    const [actualVal] = useDefault<number, TdRateProps>(props, context.emit, 'value', 'change');\n    const rateText = computed(() => {\n      if (Array.isArray(props.texts) && props.texts.length > 0) {\n        return props.texts[actualVal.value - 1];\n      }\n\n      return actualVal.value > 0\n        ? t(globalConfig.value.valueText, { value: actualVal.value })\n        : globalConfig.value.noValueText;\n    });\n    const colors = computed(() => {\n      const { color } = props;\n      if (Array.isArray(color) && color.length === 2) {\n        return {\n          '--td-rate-selected-color': color[0],\n          '--td-rate-unselected-color': color[1],\n        };\n      }\n      if (typeof color === 'string') {\n        return {\n          '--td-rate-selected-color': color,\n        };\n      }\n      return {};\n    });\n\n    const regSize = (val: string | number) => {\n      return `${val}`.includes('px') ? val : `${val}px`;\n    };\n    const unitConvert = (value: number | string): number => {\n      if (typeof value === 'string') {\n        return parseInt(value, 10);\n      }\n      return value;\n    };\n\n    const icon = (isSelect: boolean) => {\n      const { icon } = props;\n      const startComponent = StarFilledIcon;\n      let select = startComponent;\n      let unSelect = startComponent;\n\n      if (Array.isArray(icon)) {\n        const [_select, _unSelect] = icon;\n        if (typeof _select === 'function') {\n          select = _select(h);\n        } else {\n          select = _select;\n        }\n        if (typeof _unSelect === 'function') {\n          unSelect = _unSelect(h);\n        } else {\n          unSelect = _unSelect;\n        }\n      }\n      if (isSelect) {\n        return select || startComponent;\n      }\n      return unSelect || startComponent;\n    };\n\n    const iconComponent = (n: number, value: number) => {\n      const { allowHalf, size } = props;\n      const classPrefix = `${name}__icon-left`;\n      const select = value >= n;\n      const selectHalf = Math.ceil(value) >= n;\n      return h(\n        'div',\n        { style: { fontSize: regSize(size) } },\n        allowHalf\n          ? [\n              h(\n                'div',\n                { class: `${classPrefix} ${selectHalf ? `${classPrefix}--selected` : `${classPrefix}--unselected`}` },\n                h(icon(selectHalf)),\n              ),\n              h(icon(select)),\n            ]\n          : h(icon(select)),\n      );\n    };\n\n    const rootClasses = computed(() => [`${name}`, { [`${name}--disabled`]: disabled.value }]);\n\n    const classes = (n: number) => {\n      const classPrefix = `${name}__icon`;\n\n      return {\n        [classPrefix]: true,\n        [`${classPrefix}--current`]: scaleIndex.value === Math.ceil(n),\n        [`${classPrefix}--${actualVal.value >= n ? 'selected' : 'unselected'}`]: true,\n      };\n    };\n\n    const ratePopoverRef = ref<HTMLElement>();\n    const scaleIndex = ref(-1);\n    const popoverValue = ref(0);\n    const timer = ref<any>(null);\n    const touchEnd = ref(false);\n    const tipsVisible = ref(false);\n    const tipsLeft = ref(0);\n    const actionType = ref<'move' | 'tap'>('tap');\n    const touchStartTime = ref(0);\n\n    onClickOutside(ratePopoverRef, (event) => {\n      hideTips();\n    });\n\n    const hideTips = (delay = false) => {\n      if (delay) {\n        timer.value = setTimeout(() => {\n          handleCloseTips();\n        }, 3000);\n      } else {\n        handleCloseTips();\n      }\n    };\n\n    const handleCloseTips = () => {\n      tipsVisible.value = false;\n      scaleIndex.value = -1;\n      if (timer.value) {\n        clearTimeout(timer.value);\n      }\n    };\n\n    const onClick = (event: MouseEvent) => {\n      if (disabled.value) return;\n      // if (Date.now() - touchStartTime.value > 200) return;\n      getRect(event, 'tap');\n    };\n\n    const onTouch = (e: TouchEvent, eventType: 'move') => {\n      const [touch] = e.touches;\n      getRect(touch, eventType);\n    };\n\n    const onTouchstart = (e: TouchEvent) => {\n      if (disabled.value) return;\n      touchStartTime.value = Date.now();\n      touchEnd.value = false;\n    };\n\n    const onTouchmove = (e: TouchEvent) => {\n      if (disabled.value) return;\n      if (Date.now() - touchStartTime.value <= 200) return;\n      onTouch(e, 'move');\n    };\n\n    const onTouchEnd = (e: TouchEvent) => {\n      if (disabled.value) return;\n      touchEnd.value = true;\n      hideTips();\n    };\n\n    const getRect = (event: Touch | MouseEvent, eventType: 'move' | 'tap') => {\n      if (rateWrapper.value) {\n        const { count, allowHalf, gap, value: currentValue, size } = props;\n        const margin = unitConvert(gap);\n        const { width, left } = rateWrapper.value.getBoundingClientRect();\n        const starWidth = (width - (count - 1) * margin) / count;\n        const offsetX = event.pageX - left;\n        const num = (offsetX + margin) / (starWidth + margin);\n        const remainder = num % 1;\n        const integral = num - remainder;\n        let value = remainder <= 0.5 && allowHalf ? integral + 0.5 : integral + 1;\n\n        if (value > count) {\n          value = count;\n        } else if (value < 0) {\n          value = 0;\n        }\n\n        popoverValue.value = value;\n        const fontSize = size || getComputedStyle(rateWrapper.value).getPropertyValue('font-size');\n        const leftDis = Math.ceil(value - 1) * (unitConvert(gap) + unitConvert(fontSize)) + unitConvert(fontSize) * 0.5;\n        tipsVisible.value = true;\n        tipsLeft.value = Math.max(leftDis, unitConvert(fontSize) * 0.5);\n        scaleIndex.value = Math.ceil(value);\n        actionType.value = eventType;\n\n        if (value !== currentValue) {\n          actualVal.value = value;\n        }\n\n        if (touchEnd.value) {\n          hideTips(true);\n        }\n      }\n    };\n\n    const onSelect = (value: number) => {\n      actualVal.value = value;\n      hideTips();\n    };\n\n    return {\n      name: ref(name),\n      rootClasses,\n      classes,\n      rateWrapper,\n      actualVal,\n      regSize,\n      unitConvert,\n      colors,\n      rateText,\n      onClick,\n      onTouchstart,\n      onTouchmove,\n      onTouchEnd,\n      tipsVisible,\n      tipsLeft,\n      actionType,\n      onSelect,\n      popoverValue,\n      ratePopoverRef,\n      iconComponent,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","props","rateProps","emits","setup","context","_useConfig","useConfig","t","globalConfig","disabled","useFormDisabled","rateWrapper","ref","_useDefault","useDefault","emit","_useDefault2","_slicedToArray","actualVal","rateText","computed","Array","isArray","texts","length","value","valueText","noValueText","colors","color","regSize","val","concat","includes","unitConvert","parseInt","icon","isSelect","startComponent","StarFilledIcon","select","unSelect","_icon","_select","_unSelect","h","iconComponent","n","allowHalf","size","classPrefix","selectHalf","Math","ceil","style","fontSize","class","rootClasses","_defineProperty","classes","scaleIndex","ratePopoverRef","popoverValue","timer","touchEnd","tipsVisible","tipsLeft","actionType","touchStartTime","onClickOutside","event","hideTips","delay","arguments","undefined","setTimeout","handleCloseTips","clearTimeout","onClick","getRect","onTouch","e","eventType","_e$touches","touches","touch","onTouchstart","Date","now","onTouchmove","onTouchEnd","count","gap","currentValue","margin","_rateWrapper$value$ge","getBoundingClientRect","width","left","starWidth","offsetX","pageX","num","remainder","integral","getComputedStyle","getPropertyValue","leftDis","max","onSelect","_createElementBlock","_ctx","_createElementVNode","apply","onTouchend","onTouchcancel","_Fragment","_renderList","_openBlock","_createBlock","_resolveDynamicComponent","key","_normalizeClass","showText","_hoisted_1","_cache"],"mappings":"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"}