import { TdButtonProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    block: BooleanConstructor;
    content: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    ghost: BooleanConstructor;
    icon: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    loading: BooleanConstructor;
    loadingProps: {
        type: PropType<import("../loading").TdLoadingProps>;
    };
    shape: {
        type: PropType<"circle" | "square" | "round" | "rectangle">;
        default: "circle" | "square" | "round" | "rectangle";
        validator(val: TdButtonProps['shape']): boolean;
    };
    size: {
        type: PropType<"small" | "medium" | "large" | "extra-small">;
        default: "small" | "medium" | "large" | "extra-small";
        validator(val: TdButtonProps['size']): boolean;
    };
    suffix: {
        type: PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    theme: {
        type: PropType<"default" | "light" | "primary" | "danger">;
        default: "default" | "light" | "primary" | "danger";
        validator(val: TdButtonProps['theme']): boolean;
    };
    type: {
        type: PropType<"button" | "reset" | "submit">;
        default: "button" | "reset" | "submit";
        validator(val: TdButtonProps['type']): boolean;
    };
    variant: {
        type: PropType<"base" | "text" | "outline">;
        default: "base" | "text" | "outline";
        validator(val: TdButtonProps['variant']): boolean;
    };
    onClick: PropType<(e: MouseEvent) => void>;
};
export default _default;
