import { h } from 'vue';
declare const _default: import("vue").DefineComponent<{
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    icon: {
        type: import("vue").PropType<boolean | ((h: typeof h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    target: {
        type: import("vue").PropType<() => HTMLElement>;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    theme: {
        type: import("vue").PropType<"round" | "half-round" | "round-dark" | "half-round-dark">;
        default: "round" | "half-round" | "round-dark" | "half-round-dark";
        validator(val: "round" | "half-round" | "round-dark" | "half-round-dark"): boolean;
    };
    onToTop: import("vue").PropType<() => void>;
}, {
    name: string;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
    iconTNode: import("vue").ComputedRef<any>;
    el: import("vue").ComputedRef<HTMLElement>;
    top: import("vue").Ref<number>;
    clickBackBtn: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    icon: {
        type: import("vue").PropType<boolean | ((h: typeof h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    target: {
        type: import("vue").PropType<() => HTMLElement>;
    };
    text: {
        type: StringConstructor;
        default: string;
    };
    theme: {
        type: import("vue").PropType<"round" | "half-round" | "round-dark" | "half-round-dark">;
        default: "round" | "half-round" | "round-dark" | "half-round-dark";
        validator(val: "round" | "half-round" | "round-dark" | "half-round-dark"): boolean;
    };
    onToTop: import("vue").PropType<() => void>;
}>>, {
    fixed: boolean;
    text: string;
    theme: "round" | "half-round" | "round-dark" | "half-round-dark";
    icon: boolean | ((h: typeof h) => import("../common").SlotReturnValue);
}, {}>;
export default _default;
