import { SwitchValue } from './type';
declare const _default: import("vue").DefineComponent<{
    customValue: {
        type: import("vue").PropType<SwitchValue[]>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: import("vue").PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue)[]>;
        default: () => ((h: typeof import("vue").h) => import("../common").SlotReturnValue)[];
    };
    label: {
        type: import("vue").PropType<string[]>;
        default: () => string[];
    };
    loading: BooleanConstructor;
    size: {
        type: import("vue").PropType<"small" | "medium" | "large">;
        default: "small" | "medium" | "large";
        validator(val: "small" | "medium" | "large"): boolean;
    };
    value: {
        type: import("vue").PropType<SwitchValue>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<SwitchValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<SwitchValue>;
    };
    onChange: import("vue").PropType<(value: SwitchValue, context: {
        e: MouseEvent;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    customValue: {
        type: import("vue").PropType<SwitchValue[]>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: import("vue").PropType<((h: typeof import("vue").h) => import("../common").SlotReturnValue)[]>;
        default: () => ((h: typeof import("vue").h) => import("../common").SlotReturnValue)[];
    };
    label: {
        type: import("vue").PropType<string[]>;
        default: () => string[];
    };
    loading: BooleanConstructor;
    size: {
        type: import("vue").PropType<"small" | "medium" | "large">;
        default: "small" | "medium" | "large";
        validator(val: "small" | "medium" | "large"): boolean;
    };
    value: {
        type: import("vue").PropType<SwitchValue>;
        default: any;
    };
    modelValue: {
        type: import("vue").PropType<SwitchValue>;
        default: any;
    };
    defaultValue: {
        type: import("vue").PropType<SwitchValue>;
    };
    onChange: import("vue").PropType<(value: SwitchValue, context: {
        e: MouseEvent;
    }) => void>;
}>>, {
    label: string[];
    size: "small" | "medium" | "large";
    loading: boolean;
    icon: ((h: typeof import("vue").h) => import("../common").SlotReturnValue)[];
    disabled: boolean;
    value: SwitchValue;
    modelValue: SwitchValue;
}, {}>;
export default _default;
