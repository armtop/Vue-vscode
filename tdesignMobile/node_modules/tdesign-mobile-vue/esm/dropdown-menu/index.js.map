{"version":3,"file":"index.js","sources":["../../src/dropdown-menu/dropdown-menu.tsx","../../src/dropdown-menu/dropdown-item.tsx","../../src/dropdown-menu/index.ts"],"sourcesContent":["import { defineComponent, computed, ref, reactive, watch, provide } from 'vue';\nimport { onClickOutside } from '@vueuse/core';\nimport { CaretDownSmallIcon, CaretUpSmallIcon } from 'tdesign-icons-vue-next';\nimport camelCase from 'lodash/camelCase';\n\nimport config from '../config';\nimport {\n  context as menuContext,\n  DropdownMenuState,\n  DropdownMenuControl,\n  DropdownMenuExpandState,\n  TriggerSource,\n} from './context';\nimport { useExpose } from '../shared';\nimport { findRelativeRect, findRelativeContainer } from './dom-utils';\nimport { useContent } from '../hooks/tnode';\nimport DropdownMenuProps from './props';\n\nconst { prefix } = config;\nconst name = `${prefix}-dropdown-menu`;\n\nexport default defineComponent({\n  name,\n  components: { CaretDownSmallIcon, CaretUpSmallIcon },\n  props: DropdownMenuProps,\n  emits: ['menuOpened', 'menuClosed'],\n  setup(props, { slots }) {\n    const renderContent = useContent();\n\n    // 菜单状态\n    const state = reactive<DropdownMenuState>({\n      activeId: null,\n      barRect: {},\n      childCount: 0,\n      itemsLabel: [],\n    });\n\n    // 子成员处理\n    const menuItems = ref<any>([]);\n    const updateItems = () => {\n      if (slots.default) {\n        const itemName = `${prefix}-dropdown-item`;\n        const children = slots.default();\n        menuItems.value = children.filter((child: any) => {\n          const childTypeName = child?.type?.name;\n          return childTypeName?.includes && childTypeName.includes(itemName);\n        });\n      }\n    };\n    watch(() => slots?.default?.(), updateItems, {\n      deep: true,\n      immediate: true,\n    });\n\n    // 通过 slots.default 子成员，计算标题栏选项\n    const menuTitles = computed(() =>\n      menuItems.value.map((item: any, index: number) => {\n        const { keys, label, value, modelValue, defaultValue, disabled, options } = item.props;\n        const currentValue = value || modelValue || defaultValue;\n        const target = options?.find((item: any) => item[keys?.value ?? 'value'] === currentValue);\n        if (state.itemsLabel.length < index + 1) {\n          const targetLabel = (target && target[keys?.label ?? 'label']) || '';\n          const computedLabel = label || targetLabel;\n\n          state.itemsLabel.push(computedLabel);\n\n          return {\n            label: computedLabel,\n            disabled: disabled !== undefined && disabled !== false,\n          };\n        }\n        return {\n          label: label || target.label,\n          disabled: disabled !== undefined && disabled !== false,\n        };\n      }),\n    );\n\n    // 提供子组件访问\n    provide('dropdownMenuProps', props);\n    provide('dropdownMenuState', state);\n    // 根结点样式\n    const classes = computed(() => [`${name}`]);\n    // 标题栏结点引用\n    const refBar = ref();\n    const styleBarItem = computed(() => (item: any, idx: number) => [\n      `${name}__item`,\n      {\n        [`${name}__item--disabled`]: item.disabled,\n        [`${name}__item--active`]: idx === state.activeId,\n      },\n    ]);\n    const styleIcon = computed(() => (item: any, idx: number) => [\n      `${name}__icon`,\n      {\n        [`${name}__icon--active`]: idx === state.activeId,\n      },\n    ]);\n\n    // 展开对应项目的菜单\n    const expandMenu = (item: any, idx: number) => {\n      const { disabled } = item;\n\n      if (disabled) return;\n\n      if (state.activeId === idx) {\n        // 再次点击时收起\n        collapseMenu();\n        props.onMenuClosed?.({ trigger: 'menu' });\n        return;\n      }\n      props.onMenuOpened?.('menuOpened');\n      state.activeId = idx;\n      state.itemsLabel[idx] = item.label;\n\n      // 获取菜单定位\n      const bar = refBar.value as any;\n      const barRect = findRelativeRect(bar);\n      state.barRect = barRect;\n\n      // 记录展开状态\n      const container = findRelativeContainer(bar) || document.body;\n      menuContext.recordMenuExpanded(container, control, DropdownMenuExpandState.expanded);\n    };\n    const collapseMenu = () => {\n      menuTitles.value.forEach((item: any, index: number) => {\n        item.label = state.itemsLabel[index];\n      });\n      state.activeId = null;\n\n      // 清除已展开状态记录\n      const bar = refBar.value as any;\n      const container = findRelativeContainer(bar) || document.body;\n      menuContext.recordMenuExpanded(container, control, DropdownMenuExpandState.collapsed);\n    };\n\n    // dropdown-menu外面点击触发dropdown下拉框收起\n    onClickOutside(refBar, () => {\n      collapseMenu();\n      props.onMenuClosed?.({ trigger: 'outside' });\n    });\n\n    const control: DropdownMenuControl = {\n      expandMenu,\n      collapseMenu,\n      emitEvents(emit: string, trigger?: TriggerSource) {\n        props[`on${camelCase(emit)}`]?.(trigger);\n      },\n    };\n    // 提供子组件访问\n    provide('dropdownMenuControl', control);\n    useExpose({\n      toggle(idx?: number) {\n        if (idx != null) {\n          const item = menuTitles.value[idx];\n          expandMenu(item, idx);\n        } else {\n          collapseMenu();\n        }\n      },\n    });\n\n    useExpose({\n      expandMenu,\n      collapseMenu,\n    });\n\n    return () => {\n      const defaultSlot = renderContent('default', 'content');\n\n      const renderDownIcon = (item: any, idx: number) => {\n        if (props.direction === 'down') {\n          return <caret-down-small-icon class={styleIcon.value(item, idx)} />;\n        }\n        return <caret-up-small-icon class={styleIcon.value(item, idx)} />;\n      };\n\n      return (\n        <div ref={refBar} class={classes.value}>\n          {(menuTitles.value || []).map((item: { label: any }, idx: number) => (\n            <div class={styleBarItem.value(item, idx)} onClick={() => expandMenu(item, idx)}>\n              <div class={`${name}__title`}>{item.label}</div>\n              {renderDownIcon(item, idx)}\n            </div>\n          ))}\n          {defaultSlot}\n        </div>\n      );\n    };\n  },\n});\n","import { ref, watch, toRefs, inject, computed, reactive, onBeforeMount, defineComponent, nextTick } from 'vue';\nimport TRadio, { RadioGroup as TRadioGroup } from '../radio';\nimport config from '../config';\nimport TButton from '../button';\nimport TPopup from '../popup';\nimport TCheckbox, { CheckboxGroup as TCheckboxGroup } from '../checkbox';\nimport { useVModel, uniqueFactory } from '../shared';\nimport DropdownItemProps from './dropdown-item-props';\nimport { DropdownMenuState, DropdownMenuControl } from './context';\nimport { TdDropdownMenuProps, DropdownValue } from './type';\nimport { KeysType } from '../common';\nimport { useConfig } from '../config-provider/useConfig';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\n\nconst { prefix } = config;\nconst name = `${prefix}-dropdown-item`;\nconst getUniqueID = uniqueFactory('dropdown-popup');\n\nexport default defineComponent({\n  name,\n  components: { TRadio, TButton, TPopup, TCheckbox, TRadioGroup, TCheckboxGroup },\n  props: DropdownItemProps,\n  emits: ['change', 'open', 'opened', 'close', 'closed', 'update:value', 'update:modelValue'],\n  setup(props) {\n    const { globalConfig } = useConfig('dropdownMenu');\n    const renderContent = useContent();\n    const renderTNodeJSX = useTNodeJSX();\n    const popupContent = ref(null);\n\n    // 受控 value 属性\n    const { value, modelValue } = toRefs(props);\n    const [passInValue, setValue] = useVModel(value, modelValue, props.defaultValue);\n    // 从父组件取属性、状态和控制函数\n    const menuProps = inject('dropdownMenuProps') as TdDropdownMenuProps;\n    const menuState = inject('dropdownMenuState') as DropdownMenuState;\n    const { expandMenu, collapseMenu, emitEvents } = inject('dropdownMenuControl') as DropdownMenuControl;\n\n    // 组件样式\n    const classes = computed(() => [`${name}`]);\n\n    const itemId = ref(0);\n    onBeforeMount(() => {\n      itemId.value = menuState.childCount;\n      menuState.childCount += 1;\n    });\n\n    const state = reactive({\n      showOverlay: computed(() => menuProps.showOverlay),\n      duration: computed(() => menuProps.duration),\n      isShowItems: false,\n      wrapperVisible: false,\n      expandStyle: {} as Object,\n      multiple: computed(() => props.multiple),\n      options: computed(() => {\n        if (props.keys) {\n          return props.options?.map((item) => ({\n            value: item[(props.keys as KeysType)?.value ?? 'value'],\n            label: item[(props.keys as KeysType)?.label ?? 'label'],\n            disabled: item.disabled,\n          }));\n        }\n        return props.options;\n      }),\n    });\n\n    const isCheckedRadio = (value: DropdownValue) => value === radioSelect.value;\n    const styleDropRadio = (value: DropdownValue) => [\n      `${name}__radio-item`,\n      {\n        [`${prefix}-is-tick`]: !props.multiple,\n        [`${prefix}-is-checked`]: isCheckedRadio(value),\n      },\n    ];\n    const popupStyle = computed(() => {\n      return {\n        zIndex: menuProps.zIndex && menuProps.zIndex + 1,\n        position: 'absolute',\n      };\n    });\n    const styleContent = computed(() => {\n      return [`${name}__content`, `t-popup__content`];\n    });\n    const contentStyle = computed(() => {\n      return menuProps.direction === 'up' ? { transform: 'rotateX(180deg) rotateY(180deg)' } : {};\n    });\n    const popupId = getUniqueID();\n    // 设置展开/收起状态\n    const setExpand = (val: boolean) => {\n      // 菜单定位\n      const { bottom, top } = menuState.barRect;\n      menuProps.direction === 'up'\n        ? (state.expandStyle = {\n            transform: menuProps.direction === 'up' ? 'rotateX(180deg) rotateY(180deg)' : '',\n            zIndex: menuProps.zIndex,\n            bottom: `calc(100vh - ${top}px)`,\n          })\n        : (state.expandStyle = {\n            zIndex: menuProps.zIndex,\n            top: `${bottom}px`,\n          });\n      const { duration } = menuProps;\n      props[`on${val ? 'Open' : 'Close'}`]?.();\n      // 动画状态控制\n      if (val) {\n        state.wrapperVisible = true;\n      }\n      nextTick(() => {\n        state.isShowItems = val;\n      });\n      if (!val) {\n        setTimeout(() => {\n          state.wrapperVisible = false;\n        }, Number(duration));\n      }\n      setTimeout(() => {\n        props[`on${val ? 'Opened' : 'Closed'}`]?.();\n      }, Number(duration));\n    };\n\n    // 根据父组件状态，判断当前是否展开\n    watch(\n      () => menuState.activeId === itemId.value,\n      (val: boolean) => setExpand(val),\n    );\n\n    const radioSelect = ref();\n    const checkSelect = ref();\n    // 根据传入值更新当前选中\n    const updateSelectValue = (val: DropdownValue | DropdownValue[] | null) => {\n      if (!props.multiple) {\n        const list = state.options;\n        const firstChild = list?.[0];\n        const newValue = val ?? firstChild?.value ?? null;\n        radioSelect.value = newValue as DropdownValue;\n      } else if (props.multiple) {\n        checkSelect.value = (val ?? []) as DropdownValue[];\n      }\n    };\n    // 初始值更新一次选中项\n    updateSelectValue(passInValue.value || null);\n    // 跟踪 modelValue 更新选项\n    watch(\n      () => passInValue.value,\n      (val) => {\n        if (!val) return;\n        updateSelectValue(val);\n      },\n    );\n    // 底部按键是否可用\n    const isBtnDisabled = computed(() => {\n      return Array.isArray(checkSelect.value) && checkSelect.value.length <= 0;\n    });\n    // 重置\n    const resetSelect = () => {\n      checkSelect.value = [];\n      let values = checkSelect.value;\n      values = JSON.parse(JSON.stringify(values));\n      props.onReset?.(values);\n    };\n    // 确认\n    const confirmSelect = () => {\n      let values = checkSelect.value;\n      values = JSON.parse(JSON.stringify(values));\n      props.onConfirm?.(values);\n      setValue(values);\n      collapseMenu();\n      emitEvents('menuClosed', 'confirm');\n    };\n    // 多选值监控\n    watch(checkSelect, (val) => {\n      if (!props.multiple) return;\n      if (!state.isShowItems) return;\n      if (val) {\n        const value = JSON.stringify(passInValue.value || []);\n        const values = JSON.stringify(val);\n        if (value === values) return;\n        props.onChange?.(JSON.parse(values));\n      }\n    });\n    // 单选值监控\n    watch(radioSelect, (val) => {\n      if (menuState.activeId !== null) {\n        const target = state.options?.find((item: any) => item.value === val);\n        menuState.itemsLabel[menuState.activeId] = target?.label;\n      }\n      if (props.multiple) return;\n      if (!state.isShowItems) return;\n      const value: any = passInValue.value || [];\n      if (value[0] === val) return;\n      props.onChange?.(val);\n      setValue(val);\n      collapseMenu();\n      emitEvents('menuClosed', 'content');\n    });\n\n    const onVisibleChange = (visible: boolean) => {\n      if (menuProps.closeOnClickOverlay && !visible) {\n        collapseMenu();\n        emitEvents('menuClosed', 'overlay');\n      }\n    };\n    const { showOverlay, duration, isShowItems, wrapperVisible, expandStyle, multiple, options } = toRefs(state);\n\n    return () => {\n      const handleRadioChange = (value: any) => {\n        radioSelect.value = value;\n      };\n      const handleCheckboxChange = (value: any) => {\n        checkSelect.value = value;\n      };\n      const defaultSlot = () => {\n        if (!multiple.value) {\n          // 单选列表\n          return (\n            <t-radio-group\n              value={radioSelect.value}\n              onChange={handleRadioChange}\n              placement=\"right\"\n              class={`${name}__radio-group`}\n            >\n              {(options.value || []).map((option) => (\n                <t-radio\n                  key={option.value}\n                  value={option.value}\n                  label={option.label}\n                  disabled={option.disabled}\n                  class={styleDropRadio(option.value)}\n                  checked={isCheckedRadio(option.value)}\n                  icon=\"line\"\n                />\n              ))}\n            </t-radio-group>\n          );\n        }\n        // 多选列表\n        return (\n          <t-checkbox-group\n            value={checkSelect.value}\n            onChange={handleCheckboxChange}\n            class={`${name}__checkbox-group`}\n            style={`grid-template-columns: repeat(${props.optionsColumns}, 1fr)`}\n          >\n            {(options.value || []).map((option) => (\n              <t-checkbox\n                key={option.value}\n                class={`${name}__checkbox-item t-checkbox--tag`}\n                icon={false}\n                borderless\n                value={option.value}\n                label={option.label}\n                disabled={option.disabled}\n              />\n            ))}\n          </t-checkbox-group>\n        );\n      };\n\n      const footerSlot = () => {\n        if (multiple.value) {\n          return (\n            <div class={`${name}__footer`}>\n              <t-button\n                theme=\"light\"\n                class={`${name}__footer-btn ${name}__reset-btn`}\n                disabled={isBtnDisabled.value}\n                onClick={resetSelect}\n              >\n                {globalConfig.value.reset}\n              </t-button>\n              <t-button\n                theme=\"primary\"\n                class={`${name}__footer-btn ${name}__confirm-btn`}\n                disabled={isBtnDisabled.value}\n                onClick={confirmSelect}\n              >\n                {globalConfig.value.confirm}\n              </t-button>\n            </div>\n          );\n        }\n      };\n\n      const content = renderContent('default', 'content');\n\n      const footer = renderTNodeJSX('footer');\n\n      return (\n        wrapperVisible.value && (\n          <div id={popupId} class={classes.value} style={{ ...expandStyle.value }}>\n            <t-popup\n              visible={isShowItems.value}\n              duration={duration.value}\n              showOverlay={showOverlay.value}\n              style={popupStyle.value}\n              overlayProps={{ style: 'position: absolute' }}\n              class={`${name}__popup-host`}\n              attach={`#${popupId}`}\n              onVisibleChange={onVisibleChange}\n            >\n              <div ref={popupContent} class={styleContent.value} style={contentStyle.value}>\n                <div class={`${name}__body`}>{content || defaultSlot()}</div>\n                {footer || footerSlot()}\n              </div>\n            </t-popup>\n          </div>\n        )\n      );\n    };\n  },\n});\n","import LocalDropdownMenu from './dropdown-menu';\nimport LocalDropdownItem from './dropdown-item';\nimport { withInstall, WithInstallType } from '../shared';\n\nimport './style';\n\nimport { TdDropdownMenuProps, TdDropdownItemProps } from './type';\n\nexport * from './type';\nexport type DropdownMenuProps = TdDropdownMenuProps;\nexport type DropdownItemProps = TdDropdownItemProps;\n\nexport const DropdownMenu: WithInstallType<typeof LocalDropdownMenu> = withInstall(LocalDropdownMenu);\nexport const DropdownItem: WithInstallType<typeof LocalDropdownItem> = withInstall(LocalDropdownItem);\n"],"names":["prefix","config","name","defineComponent","components","CaretDownSmallIcon","CaretUpSmallIcon","props","DropdownMenuProps","emits","setup","_ref","slots","renderContent","useContent","state","reactive","activeId","barRect","childCount","itemsLabel","menuItems","ref","updateItems","default","itemName","children","value","filter","child","_child$type","childTypeName","type","includes","watch","_slots$default","call","deep","immediate","menuTitles","computed","map","item","index","_item$props","keys","label","modelValue","defaultValue","disabled","options","currentValue","target","find","_keys$value","length","_keys$label","targetLabel","computedLabel","push","provide","classes","concat","refBar","styleBarItem","idx","_defineProperty","styleIcon","expandMenu","_props$onMenuOpened","_props$onMenuClosed","collapseMenu","onMenuClosed","trigger","onMenuOpened","bar","findRelativeRect","container","findRelativeContainer","document","body","menuContext","recordMenuExpanded","control","DropdownMenuExpandState","expanded","forEach","collapsed","onClickOutside","_props$onMenuClosed2","emitEvents","emit","_props","camelCase","useExpose","toggle","defaultSlot","renderDownIcon","direction","_createVNode","_resolveComponent","onClick","_isSlot","s","Object","prototype","toString","_isVNode","getUniqueID","uniqueFactory","TRadio","TButton","TPopup","TCheckbox","TRadioGroup","TCheckboxGroup","DropdownItemProps","_useConfig","useConfig","globalConfig","renderTNodeJSX","useTNodeJSX","popupContent","_toRefs","toRefs","_useVModel","useVModel","_useVModel2","_slicedToArray","passInValue","setValue","menuProps","inject","menuState","_inject","itemId","onBeforeMount","showOverlay","duration","isShowItems","wrapperVisible","expandStyle","multiple","_props$options","_props$keys$value","_props$keys","_props$keys$label","_props$keys2","isCheckedRadio","radioSelect","styleDropRadio","popupStyle","zIndex","position","styleContent","contentStyle","transform","popupId","setExpand","val","_menuState$barRect","bottom","top","nextTick","setTimeout","Number","_props2","checkSelect","updateSelectValue","_ref2","list","firstChild","newValue","isBtnDisabled","Array","isArray","resetSelect","_props$onReset","values","JSON","parse","stringify","onReset","confirmSelect","_props$onConfirm","onConfirm","_props$onChange","onChange","_props$onChange2","_state$options","onVisibleChange","visible","closeOnClickOverlay","_toRefs2","handleRadioChange","handleCheckboxChange","_slot2","_slot","option","_default","optionsColumns","footerSlot","reset","confirm","content","footer","_objectSpread","style","DropdownMenu","withInstall","LocalDropdownMenu","DropdownItem","LocalDropdownItem"],"mappings":"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"}