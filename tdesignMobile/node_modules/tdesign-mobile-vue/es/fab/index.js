/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

import { defineComponent, createVNode, mergeProps } from 'vue';
import config from '../config.js';
import FabProps from './props.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import { usePrefixClass } from '../hooks/useClass.js';
import _Button from '../button/index.js';
import '../shared/index.js';
import './style/css.js';
import { withInstall } from '../shared/component.js';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-4c6045f6.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-1d280204.js';
import 'dayjs';
import '../_chunks/dep-5101c61a.js';
import '../config-provider/type.js';
import '@babel/runtime/helpers/defineProperty';
import '../loading/index.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/objectWithoutProperties';
import '@babel/runtime/helpers/slicedToArray';
import 'lodash/isNull';
import 'lodash/isUndefined';
import 'lodash/isNumber';
import '../loading/props.js';
import '../loading/type.js';
import '../button/props.js';
import '../form/hooks.js';
import '../shared/hover.js';
import '../button/type.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/constants.js';
import '../shared/render.js';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import '../shared/useChildSlots/index.js';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '../shared/useTest/index.js';
import '../shared/useClickAway/index.js';
import '../shared/useGesture/index.js';
import '@use-gesture/vanilla';

var prefix = config.prefix;
var name = "".concat(prefix, "-fab");
var Fab = defineComponent({
  name: name,
  props: FabProps,
  setup: function setup(props) {
    var renderTNodeJSX = useTNodeJSX();
    var fabClass = usePrefixClass("fab");
    var handleClick = function handleClick(e) {
      var _props$onClick;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, {
        e: e
      });
    };
    return function () {
      var icon = renderTNodeJSX("icon");
      return createVNode("div", {
        "class": fabClass.value,
        "style": props.style,
        "onClick": handleClick
      }, [createVNode(_Button, mergeProps({
        "size": "large",
        "theme": "primary",
        "shape": props.text ? "round" : "circle",
        "class": "".concat(fabClass.value, "__button")
      }, props.buttonProps, {
        "icon": icon
      }), {
        default: function _default() {
          return [props.text];
        }
      })]);
    };
  }
});

var _Fab = withInstall(Fab);

export { _Fab as default };
//# sourceMappingURL=index.js.map
