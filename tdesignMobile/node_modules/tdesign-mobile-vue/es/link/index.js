/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, createVNode } from 'vue';
import config from '../config.js';
import LinkProps from './props.js';
import { useTNodeJSX, useContent } from '../hooks/tnode.js';
import { usePrefixClass } from '../hooks/useClass.js';
import '../shared/index.js';
import './style/css.js';
import './type.js';
import { withInstall } from '../shared/component.js';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import 'lodash/isArray';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-4c6045f6.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-1d280204.js';
import 'dayjs';
import '../_chunks/dep-5101c61a.js';
import '../config-provider/type.js';
import '../shared/functions.js';
import '../shared/util.js';
import '@babel/runtime/helpers/slicedToArray';
import 'lodash/isNumber';
import '../shared/constants.js';
import '../shared/render.js';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '../shared/useTest/index.js';
import '../shared/useClickAway/index.js';
import '../shared/useGesture/index.js';
import '@use-gesture/vanilla';
import '../shared/hover.js';

var prefix = config.prefix;
var name = "".concat(prefix, "-link");
var Link = defineComponent({
  name: name,
  props: LinkProps,
  setup: function setup(props) {
    var linkClass = usePrefixClass("link");
    var renderTNodeJSX = useTNodeJSX();
    var renderTNodeContent = useContent();
    var linkClasses = computed(function () {
      return [linkClass.value, "".concat(linkClass.value, "--").concat(props.theme || "default"), "".concat(linkClass.value, "--").concat(props.size || "medium"), _defineProperty(_defineProperty(_defineProperty({}, "".concat(linkClass.value, "--disabled"), props.disabled), "".concat(linkClass.value, "--underline"), props.underline), "".concat(linkClass.value, "--hover"), props.hover && !props.disabled)];
    });
    var handleClick = function handleClick(e) {
      var _props$onClick;
      if (props.disabled) return;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, e);
    };
    var renderContent = function renderContent() {
      var content = renderTNodeContent("default", "content");
      return content ? createVNode("span", {
        "class": ["".concat(linkClass.value, "__content")]
      }, [content]) : null;
    };
    var renderPrefixIcon = function renderPrefixIcon() {
      var prefixIcon = renderTNodeJSX("prefixIcon");
      return prefixIcon ? createVNode("span", {
        "class": ["".concat(linkClass.value, "__prefix-icon")]
      }, [prefixIcon]) : null;
    };
    var renderSuffixIcon = function renderSuffixIcon() {
      var suffixIcon = renderTNodeJSX("suffixIcon");
      return suffixIcon ? createVNode("span", {
        "class": ["".concat(linkClass.value, "__suffix-icon")]
      }, [suffixIcon]) : null;
    };
    return function () {
      return createVNode("a", {
        "class": linkClasses.value,
        "aria-disabled": props.disabled,
        "target": props.target,
        "href": props.disabled || !props.href ? void 0 : props.href,
        "onClick": handleClick
      }, [renderPrefixIcon(), renderContent(), renderSuffixIcon()]);
    };
  }
});

var _Link = withInstall(Link);

export { _Link as default };
//# sourceMappingURL=index.js.map
