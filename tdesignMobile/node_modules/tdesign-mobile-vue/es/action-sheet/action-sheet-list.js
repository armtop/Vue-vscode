/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, ref, resolveComponent, openBlock, createElementBlock, normalizeClass, Fragment, renderList, createBlock, normalizeStyle, withCtx, createElementVNode, toDisplayString, createCommentVNode } from 'vue';
import config from '../config.js';
import _Button from '../button/index.js';
import _Badge from '../badge/index.js';
import '../shared/index.js';
import TNodeComponent from '../shared/render-tnode.js';
import '../loading/index.js';
import '../_common/js/loading/circle-adapter.js';
import '../_common/js/utils/set-style.js';
import '../_common/js/utils/helper.js';
import '@babel/runtime/helpers/toConsumableArray';
import '@babel/runtime/helpers/objectWithoutProperties';
import '@babel/runtime/helpers/slicedToArray';
import 'lodash/isString';
import 'lodash/isNull';
import 'lodash/isUndefined';
import 'lodash/isNumber';
import 'lodash/isArray';
import '../hooks/useClass.js';
import '../config-provider/useConfig.js';
import 'lodash/isFunction';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-4c6045f6.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-1d280204.js';
import 'dayjs';
import '../_chunks/dep-5101c61a.js';
import '../config-provider/type.js';
import '../loading/props.js';
import '../hooks/tnode.js';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isObject';
import './style/css.js';
import '../loading/type.js';
import '../shared/component.js';
import '../shared/functions.js';
import '../shared/util.js';
import '../shared/constants.js';
import '../shared/render.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useDefault/index.js';
import '../shared/useChildSlots/index.js';
import '../shared/useVModel/index.js';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '../shared/useTest/index.js';
import '../shared/useClickAway/index.js';
import '../shared/useGesture/index.js';
import '@use-gesture/vanilla';
import '../shared/hover.js';
import '../button/props.js';
import '../form/hooks.js';
import '../button/type.js';
import '../badge/props.js';
import '../badge/type.js';

var prefix = config.prefix;
var name = "".concat(prefix, "-action-sheet");
var script = defineComponent({
  components: {
    TNode: TNodeComponent,
    TButton: _Button,
    TBadge: _Badge
  },
  props: {
    items: {
      type: Array,
      required: true
    },
    align: {
      type: String,
      default: "center"
    }
  },
  emits: ["selected"],
  setup: function setup(props, context) {
    var handleSelected = function handleSelected(index) {
      context.emit("selected", index);
    };
    var itemClasses = computed(function () {
      return _defineProperty(_defineProperty({}, "".concat(name, "__list-item"), true), "".concat(name, "__list-item--left"), props.align === "left");
    });
    return {
      name: ref(name),
      itemClasses: itemClasses,
      handleSelected: handleSelected
    };
  }
});

function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_t_node = resolveComponent("t-node");
  var _component_t_badge = resolveComponent("t-badge");
  var _component_t_button = resolveComponent("t-button");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass("".concat(_ctx.name, "__list"))
  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.items, function (item, index) {
    return openBlock(), createBlock(_component_t_button, {
      key: index,
      variant: "text",
      block: "",
      class: normalizeClass([_ctx.itemClasses, _defineProperty({}, "".concat(_ctx.name, "__list-item--disabled"), item.disabled)]),
      disabled: item.disabled,
      icon: item.icon,
      style: normalizeStyle({
        color: item.color
      }),
      onClick: function onClick($event) {
        return _ctx.handleSelected(index);
      }
    }, {
      default: withCtx(function () {
        return [item.badge ? (openBlock(), createBlock(_component_t_node, {
          key: 0,
          content: item.badge
        }, {
          default: withCtx(function () {
            return [createElementVNode("span", {
              class: normalizeClass("".concat(_ctx.name, "__list-item-text"))
            }, toDisplayString(item.label), 3)];
          }),
          _: 2
        }, 1032, ["content"])) : createCommentVNode("", true), item.badge && (item.badge.dot || item.badge.count) ? (openBlock(), createBlock(_component_t_badge, {
          key: 1,
          count: item.badge.count,
          "max-count": item.badge.maxCount || 99,
          dot: item.badge.dot,
          content: item.badge.content,
          size: item.badge.size,
          offset: item.badge.offset || [-16, 20]
        }, {
          default: withCtx(function () {
            return [createElementVNode("span", {
              class: normalizeClass("".concat(_ctx.name, "__list-item-text"))
            }, toDisplayString(item.label), 3)];
          }),
          _: 2
        }, 1032, ["count", "max-count", "dot", "content", "size", "offset"])) : (openBlock(), createElementBlock("span", {
          key: 2,
          class: normalizeClass("".concat(_ctx.name, "__list-item-text"))
        }, toDisplayString(item.label), 3))];
      }),
      _: 2
    }, 1032, ["class", "disabled", "icon", "style", "onClick"]);
  }), 128))], 2);
}

script.render = render;

export { script as default };
//# sourceMappingURL=action-sheet-list.js.map
