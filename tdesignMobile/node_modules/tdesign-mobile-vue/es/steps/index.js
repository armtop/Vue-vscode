/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, computed, reactive, provide, createVNode, getCurrentInstance, inject, h, onUnmounted } from 'vue';
import props from './props.js';
import config from '../config.js';
import '../shared/index.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import { usePrefixClass } from '../hooks/useClass.js';
import { useDefault } from '../shared/useDefault/index.js';
import { CheckIcon, CloseIcon } from 'tdesign-icons-vue-next';
import props$1 from './step-item-props.js';
import './style/css.js';
import './type.js';
import { withInstall } from '../shared/component.js';
import '../shared/functions.js';
import '../shared/util.js';
import 'lodash/isNumber';
import '../shared/constants.js';
import '../shared/render.js';
import '@babel/runtime/helpers/typeof';
import 'lodash/camelCase';
import '../shared/render-tnode.js';
import '../shared/useToggle/index.js';
import '../shared/useCountDown/index.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/regenerator';
import '@vueuse/core';
import '../shared/useCountDown/utils.js';
import '../shared/useChildSlots/index.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../shared/useVModel/index.js';
import 'lodash/kebabCase';
import '../shared/useTouch/index.js';
import '../shared/useScrollParent/index.js';
import '../shared/useExpose/index.js';
import '../shared/useTest/index.js';
import '../shared/useClickAway/index.js';
import 'lodash/isArray';
import '../shared/useGesture/index.js';
import '@use-gesture/vanilla';
import '../shared/hover.js';
import 'lodash/isFunction';
import '../hooks/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/mobile/default-config.js';
import '../_common/js/global-config/mobile/locale/zh_CN.js';
import '../_chunks/dep-4c6045f6.js';
import '../_chunks/dep-1d280204.js';
import 'dayjs';
import '../_chunks/dep-5101c61a.js';
import '../config-provider/type.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var prefix$1 = config.prefix;
var name$1 = "".concat(prefix$1, "-steps");
var LocalSteps = defineComponent({
  name: name$1,
  props: props,
  emits: ["update:current", "update:modelValue", "change"],
  setup: function setup(props2, context) {
    var stepsClass = usePrefixClass("steps");
    var baseClass = computed(function () {
      return [stepsClass.value, "".concat(stepsClass.value, "--").concat(props2.layout), "".concat(stepsClass.value, "--").concat(props2.sequence), _defineProperty({}, "".concat(stepsClass.value, "--readonly"), props2.readonly)];
    });
    var renderTNodeJSX = useTNodeJSX();
    var _useDefault = useDefault(props2, context.emit, "current", "change"),
      _useDefault2 = _slicedToArray(_useDefault, 2),
      current = _useDefault2[0],
      setCurrent = _useDefault2[1];
    var state = reactive({
      children: []
    });
    var relation = function relation(child) {
      child && state.children.push(child);
    };
    var removeRelation = function removeRelation(child) {
      state.children = state.children.filter(function (item) {
        return item !== child;
      });
    };
    var onClickItem = function onClickItem(cur, prev, e) {
      setCurrent(cur, prev, {
        e: e
      });
    };
    provide("stepsProvide", _objectSpread(_objectSpread({}, props2), {}, {
      state: state,
      current: current,
      relation: relation,
      removeRelation: removeRelation,
      onClickItem: onClickItem
    }));
    return function () {
      var renderContent = renderTNodeJSX("default") || null;
      return createVNode("div", {
        "class": baseClass.value
      }, [renderContent]);
    };
  }
});

var prefix = config.prefix;
var name = "".concat(prefix, "-step-item");
var LocalStepItem = defineComponent({
  name: name,
  props: props$1,
  setup: function setup(props2, context) {
    var stepItemClass = usePrefixClass("step-item");
    var renderTNodeJSX = useTNodeJSX();
    var internalInstance = getCurrentInstance();
    var proxy = internalInstance.proxy;
    var stepsProvide = inject("stepsProvide", void 0);
    stepsProvide.relation(proxy);
    var iconDefault = {
      check: h(CheckIcon),
      close: h(CloseIcon)
    };
    var index = computed(function () {
      return stepsProvide.state.children.indexOf(proxy);
    });
    var isLastChild = computed(function () {
      return index.value === (stepsProvide.sequence === "positive" ? stepsProvide.state.children.length - 1 : 0);
    });
    var theme = computed(function () {
      return stepsProvide.theme;
    });
    var dot = computed(function () {
      return theme.value === "dot";
    });
    var icon = computed(function () {
      return props2.icon || context.slots.icon;
    });
    var current = computed(function () {
      return stepsProvide.current.value || stepsProvide.defaultCurrent || 0;
    });
    var stepsStatus = computed(function () {
      return stepsProvide.currentStatus;
    });
    var readonly = computed(function () {
      return stepsProvide.readonly;
    });
    var currentStatus = computed(function () {
      var status = props2.status;
      if (status !== "default") return status;
      if (index.value === current.value) return stepsStatus.value;
      if (index.value < current.value) return "finish";
      return status;
    });
    var rootClassName = computed(function () {
      return [stepItemClass.value, "".concat(stepItemClass.value, "--").concat(stepsProvide.layout), _defineProperty({}, "".concat(stepItemClass.value, "--default"), readonly.value), _defineProperty({}, "".concat(stepItemClass.value, "--").concat(currentStatus.value), currentStatus.value)];
    });
    var iconWrapperClassName = computed(function () {
      return ["".concat(stepItemClass.value, "__anchor"), "".concat(stepItemClass.value, "__anchor--").concat(stepsProvide.layout)];
    });
    var dotClass = computed(function () {
      return ["".concat(stepItemClass.value, "__dot"), "".concat(stepItemClass.value, "__dot--").concat(currentStatus.value)];
    });
    var iconClassName = computed(function () {
      return [_defineProperty({}, "".concat(stepItemClass.value, "__icon"), icon.value), _defineProperty({}, "".concat(stepItemClass.value, "__icon--").concat(currentStatus.value), icon.value), _defineProperty({}, "".concat(stepItemClass.value, "__circle"), !icon.value), _defineProperty({}, "".concat(stepItemClass.value, "__circle--").concat(currentStatus.value), !icon.value)];
    });
    var contentClass = computed(function () {
      return ["".concat(stepItemClass.value, "__content"), "".concat(stepItemClass.value, "__content--").concat(stepsProvide.layout), _defineProperty({}, "".concat(stepItemClass.value, "__content--").concat(stepsProvide.layout), isLastChild.value), _defineProperty({}, "".concat(stepItemClass.value, "__content--last"), isLastChild.value)];
    });
    var tilteClass = computed(function () {
      return ["".concat(stepItemClass.value, "__title"), "".concat(stepItemClass.value, "__title--").concat(currentStatus.value), "".concat(stepItemClass.value, "__title--").concat(stepsProvide.layout)];
    });
    var descriptionClass = computed(function () {
      return ["".concat(stepItemClass.value, "__description"), "".concat(stepItemClass.value, "__description--").concat(currentStatus.value), "".concat(stepItemClass.value, "__description--").concat(stepsProvide.layout)];
    });
    var extraClass = computed(function () {
      return ["".concat(stepItemClass.value, "__extra"), "".concat(stepItemClass.value, "__extra--").concat(currentStatus.value), "".concat(stepItemClass.value, "__extra--").concat(stepsProvide.layout)];
    });
    var separatorClass = computed(function () {
      return [stepItemClass.value, "".concat(stepItemClass.value, "__line"), "".concat(stepItemClass.value, "__line--").concat(currentStatus.value), "".concat(stepItemClass.value, "__line--").concat(stepsProvide.sequence), "".concat(stepItemClass.value, "__line--").concat(stepsProvide.layout), "".concat(stepItemClass.value, "__line--").concat(stepsProvide.theme)];
    });
    var onClickIcon = function onClickIcon(e) {
      if (!readonly.value) {
        stepsProvide.onClickItem(index.value, current.value, e);
      }
    };
    onUnmounted(function () {
      stepsProvide.removeRelation(proxy);
    });
    return function () {
      var renderIconContent = function renderIconContent() {
        if (icon.value) {
          return renderTNodeJSX("icon") || null;
        }
        if (currentStatus.value === "error") {
          return iconDefault.close;
        }
        if (currentStatus.value === "finish") {
          return iconDefault.check;
        }
        return index.value + 1;
      };
      return createVNode("div", {
        "class": rootClassName.value,
        "onClick": onClickIcon
      }, [createVNode("div", {
        "class": iconWrapperClassName.value
      }, [dot.value ? createVNode("div", {
        "class": dotClass.value
      }, null) : createVNode("div", {
        "class": iconClassName.value
      }, [renderIconContent()])]), createVNode("div", {
        "class": contentClass.value
      }, [createVNode("div", {
        "class": tilteClass.value
      }, [renderTNodeJSX("title"), renderTNodeJSX("titleRight")]), createVNode("div", {
        "class": descriptionClass.value
      }, [renderTNodeJSX("content")]), createVNode("div", {
        "class": extraClass.value
      }, [renderTNodeJSX("extra")])]), !isLastChild.value && createVNode("div", {
        "class": separatorClass.value
      }, null)]);
    };
  }
});

var StepItem = withInstall(LocalStepItem);
var Steps = withInstall(LocalSteps);

export { StepItem, Steps };
//# sourceMappingURL=index.js.map
