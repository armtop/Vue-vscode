{"version":3,"file":"index.js","sources":["../../src/collapse/collapse.tsx","../../src/collapse/collapse-panel.tsx","../../src/collapse/index.ts"],"sourcesContent":["import { toRefs, provide, defineComponent, computed, Ref, ComputedRef } from 'vue';\nimport props from './props';\nimport config from '../config';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { useVModel } from '../shared';\nimport { CollapseValue, TdCollapseProps } from './type';\n\nexport interface CollapseProvide {\n  activeValue: Ref<CollapseValue | undefined>;\n  disabled: ComputedRef<boolean>;\n  expandIcon: ComputedRef<TdCollapseProps['expandIcon']>;\n  onPanelChange: (name: string | number, args: any) => void;\n  defaultExpandAll: boolean;\n}\n\nconst { prefix } = config;\nconst name = `${prefix}-collapse`;\n\nexport default defineComponent({\n  name,\n  props,\n  setup(props, { slots }) {\n    const renderTNodeJSX = useTNodeJSX();\n\n    const componentName = usePrefixClass('collapse');\n\n    const { value, modelValue } = toRefs(props);\n    const [activeValue, setActiveValue] = useVModel(value, modelValue, props.defaultValue, props.onChange);\n    const calcActiveValues = (activeValues: any[], panelValue: any, expandMutex: boolean) => {\n      const hit = activeValues.indexOf(panelValue);\n\n      if (hit > -1) {\n        return activeValues.filter((item) => item !== panelValue);\n      }\n\n      return expandMutex ? [panelValue] : activeValues.concat(panelValue);\n    };\n\n    const onPanelChange = (value: string | number, args: any) => {\n      if (Array.isArray(activeValue.value)) {\n        const val = calcActiveValues(activeValue.value, value, props.expandMutex);\n\n        setActiveValue(val, args);\n      }\n    };\n\n    const disabled = computed(() => props.disabled);\n    const expandIcon = computed(() => props.expandIcon);\n    const rootClass = computed(() => [componentName.value, `${componentName.value}--${props.theme}`]);\n\n    provide<CollapseProvide>('collapse', {\n      activeValue,\n      disabled,\n      expandIcon,\n      onPanelChange,\n      defaultExpandAll: props.defaultExpandAll,\n    });\n    provide('renderParentTNode', renderTNodeJSX);\n\n    return () => <div class={rootClass.value}>{slots.default?.()}</div>;\n  },\n});\n","import { ref, computed, nextTick, watch, onMounted, inject, defineComponent, getCurrentInstance } from 'vue';\nimport { ChevronDownIcon, ChevronUpIcon } from 'tdesign-icons-vue-next';\nimport TCell from '../cell';\nimport props from './collapse-panel-props';\nimport config from '../config';\nimport { findIndex } from './util';\nimport { useTNodeJSX, useContent } from '../hooks/tnode';\nimport { usePrefixClass } from '../hooks/useClass';\nimport { CollapseProvide } from './collapse';\n\nconst { prefix } = config;\nconst name = `${prefix}-collapse-panel`;\n\nexport default defineComponent({\n  name,\n  components: { TCell },\n  props,\n  setup(props, { slots }) {\n    const renderTNodeJSX = useTNodeJSX();\n    const renderContent = useContent();\n\n    const componentName = usePrefixClass('collapse-panel');\n\n    const parent = inject<CollapseProvide>('collapse');\n    const renderParentTNode: Function = inject('renderParentTNode');\n\n    const disabled = computed(() => parent?.disabled.value || props.disabled);\n    const rootClass = computed(() => ({\n      [`${componentName.value}`]: true,\n      [`${componentName.value}--${props.placement}`]: true,\n      [`${componentName.value}--active`]: isActive.value,\n      [`${componentName.value}--disabled`]: disabled.value,\n    }));\n    const isActive = computed(() => findIndex(props.value, parent?.activeValue.value) > -1);\n    const updatePanelValue = (args?: any) => {\n      if (props.value != null) {\n        parent?.onPanelChange(props.value, args);\n      }\n    };\n\n    const handleClick = (e: MouseEvent) => {\n      e?.stopPropagation();\n      if (disabled.value) {\n        return;\n      }\n      updatePanelValue({ e });\n    };\n\n    // 设置折叠/展开高度过渡\n    const bodyRef = ref();\n    const wrapRef = ref();\n    const headRef = ref();\n    const wrapperHeight = ref('');\n    const updatePanelState = () => {\n      nextTick(() => {\n        if (!wrapRef.value) {\n          return;\n        }\n        const { height: headHeight } = headRef.value.getBoundingClientRect();\n        if (!isActive.value) {\n          wrapperHeight.value = `${headHeight}px`;\n          return;\n        }\n        const { height: bodyHeight } = bodyRef.value.getBoundingClientRect();\n        const height = headHeight + bodyHeight;\n        wrapperHeight.value = `${height}px`;\n      });\n    };\n\n    watch(\n      isActive,\n      () => {\n        nextTick(() => updatePanelState());\n      },\n      {\n        immediate: true,\n      },\n    );\n\n    onMounted(() => {\n      if (parent?.defaultExpandAll) {\n        updatePanelValue();\n      }\n    });\n\n    const renderDefaultIcon = () => {\n      if (props.placement === 'bottom') {\n        return isActive.value ? <ChevronUpIcon /> : <ChevronDownIcon />;\n      }\n      return isActive.value ? <ChevronDownIcon /> : <ChevronUpIcon />;\n    };\n    const panelExpandIcon = computed(() => slots.expandIcon || props.expandIcon);\n    const renderRightIcon = () => {\n      const tNodeRender = panelExpandIcon.value === undefined ? renderParentTNode : renderTNodeJSX;\n      return <div class={`${componentName.value}__header-icon`}>{tNodeRender('expandIcon', renderDefaultIcon())}</div>;\n    };\n\n    return () => {\n      const panelContent = renderContent('default', 'content');\n      const headerContent = renderTNodeJSX('header');\n      const noteContent = renderTNodeJSX('headerRightContent');\n      const leftIcon = renderTNodeJSX('headerLeftIcon');\n\n      return (\n        <div ref={wrapRef} class={rootClass.value} style={{ height: wrapperHeight.value }}>\n          <div ref={headRef} class={`${componentName.value}__title`} onClick={handleClick}>\n            <TCell\n              class={[\n                `${componentName.value}__header`,\n                `${componentName.value}__header--${props.placement}`,\n                { [`${componentName.value}__header--expanded`]: isActive.value },\n              ]}\n              v-slots={{\n                leftIcon: () => leftIcon,\n                title: () => headerContent,\n                note: () => noteContent,\n                rightIcon: () => renderRightIcon(),\n              }}\n            ></TCell>\n          </div>\n          <div ref={bodyRef} class={`${componentName.value}__content`}>\n            {panelContent}\n          </div>\n        </div>\n      );\n    };\n  },\n});\n","import LocalCollapse from './collapse';\nimport LocalCollapsePanel from './collapse-panel';\nimport { withInstall, WithInstallType } from '../shared';\n\nimport './style';\n\nexport const Collapse: WithInstallType<typeof LocalCollapse> = withInstall(LocalCollapse);\nexport const CollapsePanel: WithInstallType<typeof LocalCollapsePanel> = withInstall(LocalCollapsePanel);\n"],"names":["prefix","config","name","defineComponent","props","setup","slots","_ref","renderTNodeJSX","useTNodeJSX","componentName","usePrefixClass","_toRefs","toRefs","value","modelValue","_useVModel","useVModel","defaultValue","onChange","_useVModel2","_slicedToArray","activeValue","setActiveValue","calcActiveValues","activeValues","panelValue","expandMutex","hit","indexOf","filter","item","concat","onPanelChange","args","Array","isArray","val","disabled","computed","expandIcon","rootClass","theme","provide","defaultExpandAll","_slots$default","_createVNode","default","call","components","TCell","renderContent","useContent","parent","inject","renderParentTNode","_defineProperty","placement","isActive","findIndex","updatePanelValue","handleClick","e","stopPropagation","bodyRef","ref","wrapRef","headRef","wrapperHeight","updatePanelState","nextTick","_headRef$value$getBou","getBoundingClientRect","headHeight","height","_bodyRef$value$getBou","bodyHeight","watch","immediate","onMounted","renderDefaultIcon","ChevronUpIcon","ChevronDownIcon","panelExpandIcon","renderRightIcon","tNodeRender","panelContent","headerContent","noteContent","leftIcon","title","note","rightIcon","Collapse","withInstall","LocalCollapse","CollapsePanel","LocalCollapsePanel"],"mappings":"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"}