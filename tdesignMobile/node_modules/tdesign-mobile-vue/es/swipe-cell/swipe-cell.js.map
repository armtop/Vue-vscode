{"version":3,"file":"swipe-cell.js","sources":["../../src/swipe-cell/swipe-cell.vue","../../src/swipe-cell/swipe-cell.vue?vue&type=template&id=5884ebc3&lang.js"],"sourcesContent":["<template>\n  <div ref=\"swipeCell\" :class=\"classes\" @click.capture=\"handleCellClick\">\n    <div :style=\"wrapperStyle\">\n      <div\n        ref=\"leftRef\"\n        :class=\"classes + '__left'\"\n        :style=\"{\n          width: initData.leftWidth ? `${initData.leftWidth}px` : 'auto',\n        }\"\n      >\n        <t-node v-if=\"swipeLeftMenu\" :content=\"swipeLeftMenu\"></t-node>\n        <template v-else>\n          <template v-for=\"(btn, index) of left\" :key=\"index\">\n            <div\n              :class=\"[classes + '__content', btn.className || '']\"\n              :style=\"btn.style || 'height: 100%;'\"\n              @click=\"\n                handleClickBtn({\n                  action: { ...btn },\n                  source: 'left',\n                })\n              \"\n            >\n              <t-node v-if=\"btn.icon\" :class=\"classes + '__icon'\" :content=\"btn.icon\"></t-node>\n              <span v-if=\"btn.text\" :class=\"classes + '__text'\">\n                <t-node :content=\"btn.text\"></t-node>\n              </span>\n            </div>\n          </template>\n        </template>\n        <div :style=\"sureLeftBgStyle\"></div>\n        <div ref=\"sureLeftRef\" :style=\"sureLeftStyle\" @click=\"handleSureClick\">\n          <t-node v-if=\"sureLeftContent\" :content=\"sureLeftContent\"></t-node>\n        </div>\n      </div>\n      <t-node v-if=\"swipeContent\" :content=\"swipeContent\"></t-node>\n      <div\n        ref=\"rightRef\"\n        :class=\"classes + '__right'\"\n        :style=\"{\n          width: initData.rightWidth ? `${initData.rightWidth}px` : 'auto',\n        }\"\n      >\n        <t-node v-if=\"swipeRightMenu\" :content=\"swipeRightMenu\"></t-node>\n        <template v-else>\n          <template v-for=\"(btn, index) of right\" :key=\"index\">\n            <div\n              :class=\"[classes + '__content', btn.className || '']\"\n              :style=\"btn.style || 'height: 100%;'\"\n              @click=\"\n                handleClickBtn({\n                  action: { ...btn },\n                  source: 'right',\n                })\n              \"\n            >\n              <t-node v-if=\"btn.icon\" :class=\"classes + '__icon'\" :content=\"btn.icon\"></t-node>\n              <span v-if=\"btn.text\" :class=\"classes + '__text'\">\n                <t-node :content=\"btn.text\"></t-node>\n              </span>\n            </div>\n          </template>\n        </template>\n        <div :style=\"sureRightBgStyle\"></div>\n        <div ref=\"sureRightRef\" :style=\"sureRightStyle\" @click=\"handleSureClick\">\n          <t-node v-if=\"sureRightContent\" :content=\"sureRightContent\"></t-node>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ref,\n  watch,\n  toRefs,\n  reactive,\n  computed,\n  onMounted,\n  defineComponent,\n  getCurrentInstance,\n  StyleValue,\n  onUnmounted,\n} from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport isArray from 'lodash/isArray';\nimport isBoolean from 'lodash/isBoolean';\nimport { useSwipe } from './useSwipe';\nimport props from './props';\nimport config from '../config';\nimport { SwipeActionItem } from './type';\nimport { renderContent, renderTNode, TNode, useClickAway } from '../shared';\nimport { preventDefault } from '../shared/dom';\nimport { useSureConfirm } from './useSureConfirm';\n\nconst { prefix } = config;\nconst name = `${prefix}-swipe-cell`;\n\nexport interface SwipeInitData {\n  moving: boolean;\n  moved: boolean;\n  leftWidth: number;\n  rightWidth: number;\n  offset: number;\n  pos: number;\n  status: 'open' | 'close';\n}\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props,\n  emits: ['click', 'change'],\n  setup(props, context) {\n    const internalInstance = getCurrentInstance();\n    const swipeContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n    const swipeLeftMenu = computed(() =>\n      isFunction(props.left) || internalInstance?.slots.left ? renderTNode(internalInstance, 'left') : false,\n    );\n    const swipeRightMenu = computed(() =>\n      isFunction(props.right) || internalInstance?.slots.right ? renderTNode(internalInstance, 'right') : false,\n    );\n    const wrapperRef = ref<HTMLElement>();\n    const leftRef = ref<HTMLElement>();\n    const rightRef = ref<HTMLElement>();\n    const swipeCell = ref<HTMLElement>();\n    const wrapperStyle = computed(() => {\n      const transform = `translate3d(${initData.pos}px, 0, 0)`;\n      let transition = 'margin-left .6s cubic-bezier(0.18, 0.89, 0.32, 1)';\n      transition += ',margin-right .6s cubic-bezier(0.18, 0.89, 0.32, 1)';\n      transition += initData.moving ? '' : ',transform .6s cubic-bezier(0.18, 0.89, 0.32, 1)';\n      return {\n        position: 'relative',\n        transition,\n        transform,\n        marginLeft: `${sureMarginLeft.value}px`,\n        marginRight: `${sureMarginRight.value}px`,\n      } as StyleValue;\n    });\n\n    const distance = 10; // distance 滑动多少距离后开始显示菜\n    const autoBack = true; // autoBack 点击菜单后是否收回菜\n    const threshold = 0.3; // threshold 滑动宽度的百分之多少自动打开菜单，否则收回\n    const initData: SwipeInitData = reactive({\n      moving: false, // 是否正在划动\n      moved: false, // 标记是否有过划动，划动过则不触发点击事件\n      leftWidth: 0, // 左边菜单的宽度\n      rightWidth: 0, // 右边菜单的宽度\n      offset: 0, // 起点时的偏移\n      pos: 0, // 移动的距离\n      status: 'close', // 菜单的状态，默认close\n    });\n\n    const {\n      sureRightRef,\n      sureLeftRef,\n      showSureRight,\n      showSureLeft,\n      sureMarginRight,\n      sureMarginLeft,\n      closedSure,\n      sureRightContent,\n      sureLeftContent,\n      sureLeftBgStyle,\n      sureRightBgStyle,\n      sureRightStyle,\n      sureLeftStyle,\n      showSure,\n      handleSureClick,\n    } = useSureConfirm(internalInstance, initData);\n\n    const range = (num: number, min: number, max: number) => {\n      return Math.min(Math.max(num, min), max);\n    };\n    // 首次touchmove的方向，用于分开左右和上下滑动，左右滑动时禁止上下滑动，上下滑动时禁止左右滑动\n    let swipeDir: -1 | 0 | 1 = 0;\n    const { lengthX, lengthY, stop } = useSwipe(swipeCell, {\n      threshold: 0,\n      onSwipeStart: (e: TouchEvent) => {\n        if (props.disabled) {\n          return;\n        }\n        setPanelWidth();\n        swipeDir = 0;\n        initData.moved = false;\n        initData.offset = initData.pos;\n      },\n      onSwipe: (e: TouchEvent) => {\n        const absLenX = Math.abs(lengthX.value);\n        const absLenY = Math.abs(lengthY.value);\n        // distance / 2 是为了避免触发上下滑动时 又走左右滑动的逻辑 导致preventDefault终止无效\n        if (!swipeDir && absLenX < distance / 2 && absLenY < distance / 2) {\n          return;\n        }\n        if (!swipeDir && absLenX < absLenY) {\n          swipeDir = -1;\n        } else if (!swipeDir && absLenX >= absLenY) {\n          swipeDir = 1;\n        }\n        if (swipeDir < 0) {\n          swipeDir = -1;\n          return;\n        }\n        preventDefault(e, false);\n\n        if (props.disabled || (!initData.moved && Math.abs(lengthX.value) < distance)) {\n          return;\n        }\n\n        if (showSureRight.value) {\n          closedSure.value = lengthX.value > 0 && initData.pos === 0;\n          showSureRight.value = false;\n        } else if (showSureLeft.value) {\n          closedSure.value = lengthX.value < 0 && initData.pos === 0;\n          showSureLeft.value = false;\n        }\n        initData.moving = true;\n        initData.moved = true;\n        const offset = range(initData.offset - lengthX.value, -initData.rightWidth, initData.leftWidth);\n        initData.pos = offset;\n      },\n      onSwipeEnd: (e: TouchEvent) => {\n        if (props.disabled) {\n          return;\n        }\n        initData.moving = false;\n        setTimeout(() => {\n          closedSure.value = false;\n        }, 0);\n        end();\n      },\n    });\n\n    const setPanelWidth = () => {\n      const leftWidth = leftRef.value?.clientWidth as number;\n      const rightWidth = rightRef.value?.clientWidth as number;\n      initData.leftWidth = leftWidth > 0 ? leftWidth : 0;\n      initData.rightWidth = rightWidth > 0 ? rightWidth : 0;\n    };\n\n    const classes = computed(() => [`${name}`]);\n    onMounted(async () => {\n      setPanelWidth();\n      renderMenuStatus();\n    });\n    onUnmounted(() => {\n      stop();\n      stopClickAway.value?.();\n    });\n    watch(\n      () => props.opened,\n      () => renderMenuStatus(),\n      { deep: true },\n    );\n    watch(\n      () => initData.pos,\n      (newVal, oldVal) => {\n        if (rightRef.value && (newVal < 0 || (newVal === 0 && oldVal < 0))) {\n          updateRightMenuPosStyle(newVal);\n        } else if (leftRef.value && (newVal > 0 || (newVal === 0 && oldVal > 0))) {\n          updateLeftMenuPosStyle(newVal);\n        }\n      },\n    );\n    const updateRightMenuPosStyle = (value?: number) => {\n      if (!rightRef.value) return;\n      const pos = value || initData.pos;\n      const children: any = rightRef.value.children || [];\n      const wArr: number[] = [];\n      for (let i = 0, len = children.length - 2; i < len; ++i) {\n        const el = children[i] as HTMLElement;\n        wArr.push((wArr[i - 1] || 0) + el.clientWidth);\n      }\n      for (let i = 0, len = children.length - 2; i < len; ++i) {\n        const el = children[i] as HTMLElement;\n        const w = (1 + pos / initData.rightWidth) * (wArr[i - 1] || 0);\n        if (el) {\n          el.style.transform = `translate3d(${-w}px, 0, 0)`;\n          el.style.transition = initData.moving ? 'none' : `transform .6s cubic-bezier(0.18, 0.89, 0.32, 1)`;\n        }\n      }\n    };\n    const updateLeftMenuPosStyle = (value?: number) => {\n      if (!leftRef.value) return;\n      const pos = value || initData.pos;\n      const children: string | any[] | HTMLCollection = leftRef.value.children || [];\n      const wArr: number[] = [];\n      for (let i = 0, len = children.length - 2; i < len; ++i) {\n        const el = children[i] as HTMLElement;\n        wArr.push((wArr[i - 1] || 0) + el.clientWidth);\n      }\n      for (let i = 0, len = children.length - 2; i < len; ++i) {\n        const el = children[i] as HTMLElement;\n        const w = (1 - pos / initData.leftWidth) * (wArr[i - 1] || 0);\n        if (el) {\n          el.style.transform = `translate3d(${w}px, 0, 0)`;\n          el.style.transition = initData.moving ? 'none' : `transform .6s cubic-bezier(0.18, 0.89, 0.32, 1)`;\n        }\n      }\n    };\n    const stopClickAway = ref(\n      useClickAway(\n        swipeCell,\n        () => {\n          close();\n        },\n        { detectIframe: true },\n      ),\n    );\n    const renderMenuStatus = () => {\n      if (isBoolean(props.opened)) {\n        // opened为boolean类型，判断默认打开\n        if (props.opened && initData.rightWidth > 0) {\n          open('toLeft');\n        } else if (props.opened && initData.leftWidth > 0) {\n          open('toRight');\n        } else if (!props.opened && (initData.leftWidth > 0 || initData.rightWidth > 0)) {\n          close();\n        }\n      } else if (isArray(props.opened)) {\n        // opened为array类型，判断默认打开，同时设定左右action时优先打开右边\n        if (props.opened[1] && initData.rightWidth > 0) {\n          open('toLeft');\n        } else if (props.opened[0] && initData.leftWidth > 0) {\n          open('toRight');\n        } else if ((!props.opened[1] && initData.rightWidth > 0) || (!props.opened[0] && initData.leftWidth > 0)) {\n          close();\n        }\n      }\n    };\n    const end = () => {\n      if (props.disabled) {\n        return;\n      }\n      if (\n        +initData.rightWidth > 0 &&\n        ((-initData.offset < +initData.rightWidth && -initData.pos > +initData.rightWidth * threshold) ||\n          // 处理回弹\n          (-initData.offset === +initData.rightWidth && -initData.pos > +initData.rightWidth * (1 - threshold)))\n      ) {\n        open('toLeft');\n      } else if (\n        +initData.leftWidth > 0 &&\n        ((initData.offset < +initData.leftWidth && initData.pos > +initData.leftWidth * threshold) ||\n          // 处理回弹\n          (initData.offset === +initData.leftWidth && initData.pos > +initData.leftWidth * (1 - threshold)))\n      ) {\n        open('toRight');\n      } else if (initData.offset !== initData.pos) {\n        // 仅在有发生侧滑的情况下自动关闭（由js控制是否异步关闭）\n        close('force');\n      }\n    };\n    const open = (direction: 'toRight' | 'toLeft') => {\n      // 包括回弹open\n      const isOpen = initData.status === 'open';\n\n      initData.status = 'open';\n      if (direction === 'toLeft') {\n        initData.pos = -initData.rightWidth;\n        if (initData.rightWidth && !isOpen) {\n          props.onChange?.('right');\n        }\n      } else {\n        initData.pos = initData.leftWidth;\n        if (initData.leftWidth && !isOpen) {\n          props.onChange?.('left');\n        }\n      }\n    };\n    const close = (type?: string) => {\n      if (initData.status === 'close' && type !== 'force') {\n        return;\n      }\n      sureMarginLeft.value = 0;\n      sureMarginRight.value = 0;\n      initData.status = 'close';\n      initData.pos = 0;\n      props.onChange?.(undefined);\n    };\n    const handleClickBtn = ({ action, source }: { action: SwipeActionItem; source: String }) => {\n      const clickFn = () => {\n        if (autoBack) {\n          close();\n        }\n        if (action.onClick) {\n          action.onClick();\n          return;\n        }\n        props.onClick?.({ action, source });\n      };\n      if (action.sure) {\n        showSure(action.sure, clickFn);\n        return;\n      }\n      clickFn();\n    };\n    // 点击事件拦截，判定是否透传事件\n    const handleCellClick = (e: Event) => {\n      if (initData.moved) {\n        preventDefault(e, true);\n      }\n    };\n\n    context.expose({\n      showSure,\n    });\n    return {\n      ...toRefs(props),\n      swipeContent,\n      swipeLeftMenu,\n      swipeRightMenu,\n      initData,\n      classes,\n      wrapperRef,\n      wrapperStyle,\n      swipeCell,\n      leftRef,\n      rightRef,\n      handleClickBtn,\n      end,\n      handleCellClick,\n      showSureRight,\n      showSureLeft,\n      sureLeftBgStyle,\n      sureRightBgStyle,\n      sureRightStyle,\n      sureLeftStyle,\n      sureRightRef,\n      sureLeftRef,\n      sureRightContent,\n      sureLeftContent,\n      showSure,\n      handleSureClick,\n    };\n  },\n});\n</script>\n","<template>\n  <div ref=\"swipeCell\" :class=\"classes\" @click.capture=\"handleCellClick\">\n    <div :style=\"wrapperStyle\">\n      <div\n        ref=\"leftRef\"\n        :class=\"classes + '__left'\"\n        :style=\"{\n          width: initData.leftWidth ? `${initData.leftWidth}px` : 'auto',\n        }\"\n      >\n        <t-node v-if=\"swipeLeftMenu\" :content=\"swipeLeftMenu\"></t-node>\n        <template v-else>\n          <template v-for=\"(btn, index) of left\" :key=\"index\">\n            <div\n              :class=\"[classes + '__content', btn.className || '']\"\n              :style=\"btn.style || 'height: 100%;'\"\n              @click=\"\n                handleClickBtn({\n                  action: { ...btn },\n                  source: 'left',\n                })\n              \"\n            >\n              <t-node v-if=\"btn.icon\" :class=\"classes + '__icon'\" :content=\"btn.icon\"></t-node>\n              <span v-if=\"btn.text\" :class=\"classes + '__text'\">\n                <t-node :content=\"btn.text\"></t-node>\n              </span>\n            </div>\n          </template>\n        </template>\n        <div :style=\"sureLeftBgStyle\"></div>\n        <div ref=\"sureLeftRef\" :style=\"sureLeftStyle\" @click=\"handleSureClick\">\n          <t-node v-if=\"sureLeftContent\" :content=\"sureLeftContent\"></t-node>\n        </div>\n      </div>\n      <t-node v-if=\"swipeContent\" :content=\"swipeContent\"></t-node>\n      <div\n        ref=\"rightRef\"\n        :class=\"classes + '__right'\"\n        :style=\"{\n          width: initData.rightWidth ? `${initData.rightWidth}px` : 'auto',\n        }\"\n      >\n        <t-node v-if=\"swipeRightMenu\" :content=\"swipeRightMenu\"></t-node>\n        <template v-else>\n          <template v-for=\"(btn, index) of right\" :key=\"index\">\n            <div\n              :class=\"[classes + '__content', btn.className || '']\"\n              :style=\"btn.style || 'height: 100%;'\"\n              @click=\"\n                handleClickBtn({\n                  action: { ...btn },\n                  source: 'right',\n                })\n              \"\n            >\n              <t-node v-if=\"btn.icon\" :class=\"classes + '__icon'\" :content=\"btn.icon\"></t-node>\n              <span v-if=\"btn.text\" :class=\"classes + '__text'\">\n                <t-node :content=\"btn.text\"></t-node>\n              </span>\n            </div>\n          </template>\n        </template>\n        <div :style=\"sureRightBgStyle\"></div>\n        <div ref=\"sureRightRef\" :style=\"sureRightStyle\" @click=\"handleSureClick\">\n          <t-node v-if=\"sureRightContent\" :content=\"sureRightContent\"></t-node>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ref,\n  watch,\n  toRefs,\n  reactive,\n  computed,\n  onMounted,\n  defineComponent,\n  getCurrentInstance,\n  StyleValue,\n  onUnmounted,\n} from 'vue';\nimport isFunction from 'lodash/isFunction';\nimport isArray from 'lodash/isArray';\nimport isBoolean from 'lodash/isBoolean';\nimport { useSwipe } from './useSwipe';\nimport props from './props';\nimport config from '../config';\nimport { SwipeActionItem } from './type';\nimport { renderContent, renderTNode, TNode, useClickAway } from '../shared';\nimport { preventDefault } from '../shared/dom';\nimport { useSureConfirm } from './useSureConfirm';\n\nconst { prefix } = config;\nconst name = `${prefix}-swipe-cell`;\n\nexport interface SwipeInitData {\n  moving: boolean;\n  moved: boolean;\n  leftWidth: number;\n  rightWidth: number;\n  offset: number;\n  pos: number;\n  status: 'open' | 'close';\n}\n\nexport default defineComponent({\n  name,\n  components: { TNode },\n  props,\n  emits: ['click', 'change'],\n  setup(props, context) {\n    const internalInstance = getCurrentInstance();\n    const swipeContent = computed(() => renderContent(internalInstance, 'default', 'content'));\n    const swipeLeftMenu = computed(() =>\n      isFunction(props.left) || internalInstance?.slots.left ? renderTNode(internalInstance, 'left') : false,\n    );\n    const swipeRightMenu = computed(() =>\n      isFunction(props.right) || internalInstance?.slots.right ? renderTNode(internalInstance, 'right') : false,\n    );\n    const wrapperRef = ref<HTMLElement>();\n    const leftRef = ref<HTMLElement>();\n    const rightRef = ref<HTMLElement>();\n    const swipeCell = ref<HTMLElement>();\n    const wrapperStyle = computed(() => {\n      const transform = `translate3d(${initData.pos}px, 0, 0)`;\n      let transition = 'margin-left .6s cubic-bezier(0.18, 0.89, 0.32, 1)';\n      transition += ',margin-right .6s cubic-bezier(0.18, 0.89, 0.32, 1)';\n      transition += initData.moving ? '' : ',transform .6s cubic-bezier(0.18, 0.89, 0.32, 1)';\n      return {\n        position: 'relative',\n        transition,\n        transform,\n        marginLeft: `${sureMarginLeft.value}px`,\n        marginRight: `${sureMarginRight.value}px`,\n      } as StyleValue;\n    });\n\n    const distance = 10; // distance 滑动多少距离后开始显示菜\n    const autoBack = true; // autoBack 点击菜单后是否收回菜\n    const threshold = 0.3; // threshold 滑动宽度的百分之多少自动打开菜单，否则收回\n    const initData: SwipeInitData = reactive({\n      moving: false, // 是否正在划动\n      moved: false, // 标记是否有过划动，划动过则不触发点击事件\n      leftWidth: 0, // 左边菜单的宽度\n      rightWidth: 0, // 右边菜单的宽度\n      offset: 0, // 起点时的偏移\n      pos: 0, // 移动的距离\n      status: 'close', // 菜单的状态，默认close\n    });\n\n    const {\n      sureRightRef,\n      sureLeftRef,\n      showSureRight,\n      showSureLeft,\n      sureMarginRight,\n      sureMarginLeft,\n      closedSure,\n      sureRightContent,\n      sureLeftContent,\n      sureLeftBgStyle,\n      sureRightBgStyle,\n      sureRightStyle,\n      sureLeftStyle,\n      showSure,\n      handleSureClick,\n    } = useSureConfirm(internalInstance, initData);\n\n    const range = (num: number, min: number, max: number) => {\n      return Math.min(Math.max(num, min), max);\n    };\n    // 首次touchmove的方向，用于分开左右和上下滑动，左右滑动时禁止上下滑动，上下滑动时禁止左右滑动\n    let swipeDir: -1 | 0 | 1 = 0;\n    const { lengthX, lengthY, stop } = useSwipe(swipeCell, {\n      threshold: 0,\n      onSwipeStart: (e: TouchEvent) => {\n        if (props.disabled) {\n          return;\n        }\n        setPanelWidth();\n        swipeDir = 0;\n        initData.moved = false;\n        initData.offset = initData.pos;\n      },\n      onSwipe: (e: TouchEvent) => {\n        const absLenX = Math.abs(lengthX.value);\n        const absLenY = Math.abs(lengthY.value);\n        // distance / 2 是为了避免触发上下滑动时 又走左右滑动的逻辑 导致preventDefault终止无效\n        if (!swipeDir && absLenX < distance / 2 && absLenY < distance / 2) {\n          return;\n        }\n        if (!swipeDir && absLenX < absLenY) {\n          swipeDir = -1;\n        } else if (!swipeDir && absLenX >= absLenY) {\n          swipeDir = 1;\n        }\n        if (swipeDir < 0) {\n          swipeDir = -1;\n          return;\n        }\n        preventDefault(e, false);\n\n        if (props.disabled || (!initData.moved && Math.abs(lengthX.value) < distance)) {\n          return;\n        }\n\n        if (showSureRight.value) {\n          closedSure.value = lengthX.value > 0 && initData.pos === 0;\n          showSureRight.value = false;\n        } else if (showSureLeft.value) {\n          closedSure.value = lengthX.value < 0 && initData.pos === 0;\n          showSureLeft.value = false;\n        }\n        initData.moving = true;\n        initData.moved = true;\n        const offset = range(initData.offset - lengthX.value, -initData.rightWidth, initData.leftWidth);\n        initData.pos = offset;\n      },\n      onSwipeEnd: (e: TouchEvent) => {\n        if (props.disabled) {\n          return;\n        }\n        initData.moving = false;\n        setTimeout(() => {\n          closedSure.value = false;\n        }, 0);\n        end();\n      },\n    });\n\n    const setPanelWidth = () => {\n      const leftWidth = leftRef.value?.clientWidth as number;\n      const rightWidth = rightRef.value?.clientWidth as number;\n      initData.leftWidth = leftWidth > 0 ? leftWidth : 0;\n      initData.rightWidth = rightWidth > 0 ? rightWidth : 0;\n    };\n\n    const classes = computed(() => [`${name}`]);\n    onMounted(async () => {\n      setPanelWidth();\n      renderMenuStatus();\n    });\n    onUnmounted(() => {\n      stop();\n      stopClickAway.value?.();\n    });\n    watch(\n      () => props.opened,\n      () => renderMenuStatus(),\n      { deep: true },\n    );\n    watch(\n      () => initData.pos,\n      (newVal, oldVal) => {\n        if (rightRef.value && (newVal < 0 || (newVal === 0 && oldVal < 0))) {\n          updateRightMenuPosStyle(newVal);\n        } else if (leftRef.value && (newVal > 0 || (newVal === 0 && oldVal > 0))) {\n          updateLeftMenuPosStyle(newVal);\n        }\n      },\n    );\n    const updateRightMenuPosStyle = (value?: number) => {\n      if (!rightRef.value) return;\n      const pos = value || initData.pos;\n      const children: any = rightRef.value.children || [];\n      const wArr: number[] = [];\n      for (let i = 0, len = children.length - 2; i < len; ++i) {\n        const el = children[i] as HTMLElement;\n        wArr.push((wArr[i - 1] || 0) + el.clientWidth);\n      }\n      for (let i = 0, len = children.length - 2; i < len; ++i) {\n        const el = children[i] as HTMLElement;\n        const w = (1 + pos / initData.rightWidth) * (wArr[i - 1] || 0);\n        if (el) {\n          el.style.transform = `translate3d(${-w}px, 0, 0)`;\n          el.style.transition = initData.moving ? 'none' : `transform .6s cubic-bezier(0.18, 0.89, 0.32, 1)`;\n        }\n      }\n    };\n    const updateLeftMenuPosStyle = (value?: number) => {\n      if (!leftRef.value) return;\n      const pos = value || initData.pos;\n      const children: string | any[] | HTMLCollection = leftRef.value.children || [];\n      const wArr: number[] = [];\n      for (let i = 0, len = children.length - 2; i < len; ++i) {\n        const el = children[i] as HTMLElement;\n        wArr.push((wArr[i - 1] || 0) + el.clientWidth);\n      }\n      for (let i = 0, len = children.length - 2; i < len; ++i) {\n        const el = children[i] as HTMLElement;\n        const w = (1 - pos / initData.leftWidth) * (wArr[i - 1] || 0);\n        if (el) {\n          el.style.transform = `translate3d(${w}px, 0, 0)`;\n          el.style.transition = initData.moving ? 'none' : `transform .6s cubic-bezier(0.18, 0.89, 0.32, 1)`;\n        }\n      }\n    };\n    const stopClickAway = ref(\n      useClickAway(\n        swipeCell,\n        () => {\n          close();\n        },\n        { detectIframe: true },\n      ),\n    );\n    const renderMenuStatus = () => {\n      if (isBoolean(props.opened)) {\n        // opened为boolean类型，判断默认打开\n        if (props.opened && initData.rightWidth > 0) {\n          open('toLeft');\n        } else if (props.opened && initData.leftWidth > 0) {\n          open('toRight');\n        } else if (!props.opened && (initData.leftWidth > 0 || initData.rightWidth > 0)) {\n          close();\n        }\n      } else if (isArray(props.opened)) {\n        // opened为array类型，判断默认打开，同时设定左右action时优先打开右边\n        if (props.opened[1] && initData.rightWidth > 0) {\n          open('toLeft');\n        } else if (props.opened[0] && initData.leftWidth > 0) {\n          open('toRight');\n        } else if ((!props.opened[1] && initData.rightWidth > 0) || (!props.opened[0] && initData.leftWidth > 0)) {\n          close();\n        }\n      }\n    };\n    const end = () => {\n      if (props.disabled) {\n        return;\n      }\n      if (\n        +initData.rightWidth > 0 &&\n        ((-initData.offset < +initData.rightWidth && -initData.pos > +initData.rightWidth * threshold) ||\n          // 处理回弹\n          (-initData.offset === +initData.rightWidth && -initData.pos > +initData.rightWidth * (1 - threshold)))\n      ) {\n        open('toLeft');\n      } else if (\n        +initData.leftWidth > 0 &&\n        ((initData.offset < +initData.leftWidth && initData.pos > +initData.leftWidth * threshold) ||\n          // 处理回弹\n          (initData.offset === +initData.leftWidth && initData.pos > +initData.leftWidth * (1 - threshold)))\n      ) {\n        open('toRight');\n      } else if (initData.offset !== initData.pos) {\n        // 仅在有发生侧滑的情况下自动关闭（由js控制是否异步关闭）\n        close('force');\n      }\n    };\n    const open = (direction: 'toRight' | 'toLeft') => {\n      // 包括回弹open\n      const isOpen = initData.status === 'open';\n\n      initData.status = 'open';\n      if (direction === 'toLeft') {\n        initData.pos = -initData.rightWidth;\n        if (initData.rightWidth && !isOpen) {\n          props.onChange?.('right');\n        }\n      } else {\n        initData.pos = initData.leftWidth;\n        if (initData.leftWidth && !isOpen) {\n          props.onChange?.('left');\n        }\n      }\n    };\n    const close = (type?: string) => {\n      if (initData.status === 'close' && type !== 'force') {\n        return;\n      }\n      sureMarginLeft.value = 0;\n      sureMarginRight.value = 0;\n      initData.status = 'close';\n      initData.pos = 0;\n      props.onChange?.(undefined);\n    };\n    const handleClickBtn = ({ action, source }: { action: SwipeActionItem; source: String }) => {\n      const clickFn = () => {\n        if (autoBack) {\n          close();\n        }\n        if (action.onClick) {\n          action.onClick();\n          return;\n        }\n        props.onClick?.({ action, source });\n      };\n      if (action.sure) {\n        showSure(action.sure, clickFn);\n        return;\n      }\n      clickFn();\n    };\n    // 点击事件拦截，判定是否透传事件\n    const handleCellClick = (e: Event) => {\n      if (initData.moved) {\n        preventDefault(e, true);\n      }\n    };\n\n    context.expose({\n      showSure,\n    });\n    return {\n      ...toRefs(props),\n      swipeContent,\n      swipeLeftMenu,\n      swipeRightMenu,\n      initData,\n      classes,\n      wrapperRef,\n      wrapperStyle,\n      swipeCell,\n      leftRef,\n      rightRef,\n      handleClickBtn,\n      end,\n      handleCellClick,\n      showSureRight,\n      showSureLeft,\n      sureLeftBgStyle,\n      sureRightBgStyle,\n      sureRightStyle,\n      sureLeftStyle,\n      sureRightRef,\n      sureLeftRef,\n      sureRightContent,\n      sureLeftContent,\n      showSure,\n      handleSureClick,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","defineComponent","components","TNode","props","emits","setup","context","internalInstance","getCurrentInstance","swipeContent","computed","renderContent","swipeLeftMenu","isFunction","left","slots","renderTNode","swipeRightMenu","right","wrapperRef","ref","leftRef","rightRef","swipeCell","wrapperStyle","transform","concat","initData","pos","transition","moving","position","marginLeft","sureMarginLeft","value","marginRight","sureMarginRight","distance","autoBack","threshold","reactive","moved","leftWidth","rightWidth","offset","status","_useSureConfirm","useSureConfirm","sureRightRef","sureLeftRef","showSureRight","showSureLeft","closedSure","sureRightContent","sureLeftContent","sureLeftBgStyle","sureRightBgStyle","sureRightStyle","sureLeftStyle","showSure","handleSureClick","range","num","min","max","Math","swipeDir","_useSwipe","useSwipe","onSwipeStart","e","disabled","setPanelWidth","onSwipe","absLenX","abs","lengthX","absLenY","lengthY","preventDefault","onSwipeEnd","setTimeout","end","stop","_leftRef$value","_rightRef$value","clientWidth","classes","onMounted","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","renderMenuStatus","onUnmounted","_stopClickAway$value","stopClickAway","call","watch","opened","deep","newVal","oldVal","updateRightMenuPosStyle","updateLeftMenuPosStyle","children","wArr","i","len","length","el","push","w","style","useClickAway","close","detectIframe","isBoolean","open","isArray","direction","isOpen","_props2$onChange","onChange","_props2$onChange2","type","_props2$onChange3","handleClickBtn","_ref2","action","source","clickFn","_props2$onClick","onClick","sure","handleCellClick","expose","_objectSpread","toRefs","_createElementBlock","class","_ctx","apply","arguments","_createElementVNode","_normalizeStyle","width","_createBlock","_component_t_node","content","_openBlock","_Fragment","key","_renderList","btn","index","_normalizeClass","className","$event","icon","text","_createVNode"],"mappings":"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"}