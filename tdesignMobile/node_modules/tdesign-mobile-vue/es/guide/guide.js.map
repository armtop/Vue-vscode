{"version":3,"file":"guide.js","sources":["../../src/guide/guide.vue","../../src/guide/guide.vue?vue&type=template&id=f7d1b852&lang.js"],"sourcesContent":["<template>\n  <teleport v-if=\"actived\" to=\"body\">\n    <div ref=\"overlayLayerRef\" :class=\"`${name}__overlay`\" :style=\"{ zIndex: zIndex - 2 }\"></div>\n    <div ref=\"highlightLayerRef\" :class=\"[...highlightClass, ...maskClass]\" :style=\"{ zIndex: zIndex - 1 }\">\n      <t-node v-if=\"showCustomHighlightContent\" :content=\"currentCustomHighlightContent\"></t-node>\n    </div>\n    <div ref=\"popoverWrapperRef\" :class=\"wrapperClass\" :style=\"{ zIndex }\">\n      <component :is=\"stepContainer\" v-bind=\"stepProps\">\n        <template v-if=\"isPopover\" #triggerElement>\n          <div ref=\"referenceLayerRef\" :class=\"[...popoverClass]\"></div>\n        </template>\n        <template #[contentSlot]>\n          <t-node v-if=\"isPopover && contentNode\" :content=\"contentNode\"></t-node>\n          <div v-else :class=\"contetnClass\">\n            <div :class=\"`${name}__tooltip`\">\n              <div :class=\"`${name}__title`\">\n                <t-node :content=\"titleNode\"></t-node>\n              </div>\n              <div :class=\"`${name}__desc`\">\n                <t-node :content=\"bodyNode\"></t-node>\n              </div>\n            </div>\n            <div :class=\"footerClass\">\n              <t-button\n                v-if=\"!hideSkip && !isLast\"\n                key=\"skip\"\n                :class=\"`${name}__skip`\"\n                theme=\"light\"\n                :size=\"buttonSize\"\n                variant=\"base\"\n                :content=\"globalConfig.skip\"\n                v-bind=\"getCurrentCrossProps('skipButtonProps')\"\n                @click=\"handleSkip\"\n              >\n              </t-button>\n              <t-button\n                v-if=\"!isLast\"\n                key=\"next\"\n                :class=\"`${name}__next`\"\n                theme=\"primary\"\n                :size=\"buttonSize\"\n                variant=\"base\"\n                v-bind=\"getCurrentCrossProps('nextButtonProps')\"\n                @click=\"handleNext\"\n              >\n                <template #content>\n                  <t-node\n                    :content=\"renderButtonContent(getCurrentCrossProps('nextButtonProps'), globalConfig.next)\"\n                  ></t-node>\n                  <t-node v-if=\"!hideCounter\" :content=\"counterNode\"></t-node>\n                </template>\n              </t-button>\n              <t-button\n                v-if=\"isLast\"\n                key=\"back\"\n                :class=\"`${name}__back`\"\n                theme=\"light\"\n                :size=\"buttonSize\"\n                variant=\"base\"\n                :content=\"globalConfig.back\"\n                v-bind=\"getCurrentCrossProps('backButtonProps')\"\n                @click=\"handleBack\"\n              ></t-button>\n              <t-button\n                v-if=\"isLast\"\n                key=\"finish\"\n                :class=\"`${name}__finish`\"\n                theme=\"primary\"\n                :size=\"buttonSize\"\n                variant=\"base\"\n                v-bind=\"finishButtonProps ?? {}\"\n                @click=\"handleFinish\"\n              >\n                <template #content>\n                  <t-node :content=\"renderButtonContent(finishButtonProps, globalConfig.finish)\"></t-node>\n                  <t-node v-if=\"!hideCounter\" :content=\"counterNode\"></t-node>\n                </template>\n              </t-button>\n            </div>\n          </div>\n        </template>\n      </component>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, toRefs, h, getCurrentInstance, nextTick, onMounted, watch } from 'vue';\nimport isFunction from 'lodash/isFunction';\n\nimport TPopover, { PopoverProps } from '../popover';\nimport TPopup, { PopupProps } from '../popup';\nimport TButton, { ButtonProps } from '../button';\nimport config from '../config';\nimport { useVModel, TNode } from '../shared';\nimport { addClass, getWindowScroll, removeClass } from '../shared/dom';\nimport setStyle from '../_common/js/utils/set-style';\nimport guideProps from './props';\nimport { GuideStep, TdGuideProps } from './type';\nimport { isFixed, getRelativePosition, getTargetElm, scrollToParentVisibleArea, scrollToElm } from './utils';\nimport { GuideCrossProps } from './interface';\nimport { useConfig } from '../config-provider/useConfig';\nimport { SizeEnum } from '../common';\n\nconst { prefix } = config;\nconst name = `${prefix}-guide`;\nconst LOCK_CLASS = `${name}--lock`;\nexport default defineComponent({\n  name,\n  components: {\n    TNode,\n    TPopover,\n    TButton,\n    TPopup,\n  },\n  props: guideProps,\n  setup(props: TdGuideProps, context) {\n    const { current, modelValue, finishButtonProps, hideCounter, hideSkip, steps, zIndex } = toRefs(props);\n    const [innerCurrent, setInnerCurrent] = useVModel(\n      current,\n      modelValue,\n      props.defaultCurrent,\n      props.onChange,\n      'current',\n    );\n    const { globalConfig } = useConfig('guide');\n    // 覆盖层，用于覆盖所有元素\n    const overlayLayerRef = ref<HTMLElement>();\n    // 高亮层，用于高亮元素\n    const highlightLayerRef = ref<HTMLElement>();\n    // 提示层，用于高亮元素\n    const referenceLayerRef = ref<HTMLElement>();\n    // 当前高亮的元素\n    const currentHighlightLayerElm = ref<HTMLElement>();\n    // dialog wrapper ref\n    const popoverWrapperRef = ref<HTMLElement>();\n    // dialog ref\n    const dialogTooltipRef = ref<HTMLElement>();\n    // 是否开始展示\n    const actived = ref(false);\n    // 步骤总数\n    const stepsTotal = computed(() => steps.value.length);\n    // 当前步骤的信息\n    const currentStepInfo = computed<GuideStep>(() => steps.value[innerCurrent.value]);\n    // 当前是否为 popover\n    const isPopover = computed(() => getCurrentCrossProps('mode') === 'popover');\n    const popoverVisible = ref(false);\n    const stepContainer = computed(() => (isPopover.value ? TPopover : TPopup));\n    const contentSlot = computed(() => (isPopover.value ? 'content' : 'default'));\n    const isPopoverCenter = computed(() => isPopover.value && currentStepInfo.value.placement === 'center');\n    const stepProps = computed(() => {\n      if (isPopover.value) {\n        return {\n          visible: popoverVisible.value,\n          placement: isPopoverCenter.value ? 'bottom' : currentStepInfo.value.placement,\n          theme: 'light',\n          showArrow: false,\n          ...currentStepInfo.value.popoverProps,\n        } as PopoverProps;\n      }\n      return {\n        visible: popoverVisible.value,\n        zIndex: zIndex.value,\n        placement: 'center',\n        // destroyOnClose: true,\n        class: `${name}__dialog`,\n        overlayProps: {\n          zIndex: zIndex.value - 1,\n        },\n      } as PopupProps;\n    });\n\n    // 当前元素位置状态\n    const currentElmIsFixed = computed(() => isFixed(currentHighlightLayerElm.value || document.body));\n    // 获取当前步骤的属性值 用户当前步骤设置 > 用户组件设置的\n    const getCurrentCrossProps = <Key extends keyof GuideCrossProps>(propsName: Key) =>\n      currentStepInfo.value[propsName] ?? props[propsName];\n\n    const hWithParams = (params: Record<string, any> = { currentStepInfo: currentStepInfo.value }) => {\n      // @ts-ignore\n      const newH = (...args: any[]) => h(...args);\n      return Object.assign(newH, params);\n    };\n\n    // highlight layer 相关\n    // 获取当前步骤的用户设定的高亮内容\n    const currentCustomHighlightContent = computed(() => {\n      const { highlightContent } = currentStepInfo.value;\n\n      let node: any = highlightContent;\n      if (isFunction(highlightContent)) {\n        // 支持函数\n        node = highlightContent(hWithParams());\n      } else if (context.slots.highlightContent) {\n        // 支持插槽\n        node = context.slots.highlightContent(hWithParams());\n      } else if (context.slots['highlight-content']) {\n        // 支持插槽\n        node = context.slots['highlight-content'](hWithParams());\n      }\n      // 给自定义元素添加类名\n      if (node) {\n        if (!node.props) node.props = {};\n        node.props.class = node.props.class || '';\n      }\n      return node;\n    });\n    // 是否展示高亮区域\n    const showCustomHighlightContent = computed(() => Boolean(currentCustomHighlightContent.value && isPopover.value));\n\n    const showOverlay = computed(() => getCurrentCrossProps('showOverlay'));\n\n    const highlightClass = computed(() => [\n      `${name}__highlight`,\n      `${name}__highlight--${isPopover.value ? 'popover' : 'dialog'}`,\n      `${name}--${currentElmIsFixed.value && isPopover.value ? 'fixed' : 'absolute'}`,\n    ]);\n    const maskClass = computed(() => [`${name}__highlight--${showOverlay.value ? 'mask' : 'nomask'}`]);\n    const wrapperClass = computed(() => [\n      `${name}__wrapper`,\n      `${name}--${currentElmIsFixed.value ? 'fixed' : 'absolute'}`,\n      {\n        [`${name}__wrapper--content`]: !!currentStepInfo.value.content,\n      },\n    ]);\n    const popoverClass = computed(() => [`${name}__reference`]);\n    const contetnClass = computed(() => [`${name}__content--${isPopover.value ? 'popover' : 'dialog'}`]);\n    const tooltipClass = computed(() => [`${name}__tooltip--${isPopover.value ? 'popover' : 'dialog'}`]);\n    const footerClass = computed(() => [\n      `${name}__footer`,\n      `${name}__footer--${isPopover.value ? 'popover' : 'dialog'}`,\n    ]);\n\n    const contentNode = computed(() => {\n      const { content } = currentStepInfo.value;\n      let renderContent;\n      if (isFunction(content)) {\n        renderContent = content(hWithParams(contentProps.value));\n      } else if (context.slots.content) {\n        renderContent = context.slots.content(hWithParams(contentProps.value));\n      } else if (content) {\n        renderContent = h(content, contentProps.value);\n      }\n      return renderContent;\n    });\n\n    const titleNode = computed(() => {\n      const { title } = currentStepInfo.value;\n      let renderTitle: any = null;\n      if (isFunction(title)) {\n        renderTitle = title(hWithParams());\n      } else if (context.slots.title) {\n        renderTitle = context.slots.title(hWithParams());\n      } else if (typeof title === 'string') {\n        renderTitle = title;\n      } else if (title) {\n        renderTitle = h(title);\n      }\n      return renderTitle;\n    });\n\n    const bodyNode = computed(() => {\n      const { body } = currentStepInfo.value;\n      let renderBody: any = null;\n      if (isFunction(body)) {\n        renderBody = body(hWithParams());\n      } else if (context.slots.body) {\n        renderBody = context.slots.body(hWithParams());\n      } else if (typeof body === 'string') {\n        renderBody = body;\n      } else if (body) {\n        renderBody = h(body);\n      }\n      return renderBody;\n    });\n\n    const counterNode = computed(() => {\n      const params = {\n        total: stepsTotal.value,\n        current: innerCurrent.value,\n      };\n      let renderCounter: any = null;\n      const { counter } = props;\n      if (isFunction(counter)) {\n        renderCounter = counter(h, params);\n      } else if (context.slots.counter) {\n        renderCounter = context.slots.counter(hWithParams(params));\n      } else if (counter) {\n        renderCounter = h(counter, params);\n      }\n      return renderCounter || ` (${innerCurrent.value + 1}/${stepsTotal.value})`;\n    });\n\n    const isLast = computed(() => innerCurrent.value === stepsTotal.value - 1);\n    const isFirst = computed(() => innerCurrent.value === 0);\n    const buttonSize = computed(() => (isPopover.value ? 'extra-small' : 'medium') as SizeEnum);\n\n    // 设置高亮层的位置\n    const setHighlightLayerPosition = (highlightLayer: HTMLElement, isReference = false) => {\n      let { top, left } = getRelativePosition(currentHighlightLayerElm.value);\n      let { width, height } = currentHighlightLayerElm.value.getBoundingClientRect();\n      const highlightPadding = getCurrentCrossProps('highlightPadding');\n\n      if (isPopover.value) {\n        width += highlightPadding * 2;\n        height += highlightPadding * 2;\n        top -= highlightPadding;\n        left -= highlightPadding;\n      } else {\n        const { scrollTop, scrollLeft } = getWindowScroll();\n        top += scrollTop;\n        left += scrollLeft;\n      }\n\n      const style = {\n        top: `${top}px`,\n        left: `${left}px`,\n      };\n\n      // 展示自定义高亮\n      if (showCustomHighlightContent.value) {\n        // 高亮框本身不设定宽高，引用用框的宽高设定为用户自定义的宽高\n        if (isReference) {\n          const { width, height } = highlightLayerRef.value.getBoundingClientRect();\n          Object.assign(style, {\n            width: `${width}px`,\n            height: `${height}px`,\n          });\n        } else {\n          Object.assign(style, {\n            width: 'auto',\n            height: 'auto',\n          });\n        }\n      } else {\n        Object.assign(style, {\n          width: `${width}px`,\n          height: `${height}px`,\n        });\n      }\n\n      setStyle(highlightLayer, style);\n    };\n\n    const setReferenceFullW = (referenceElements: HTMLElement[]): void => {\n      const style = {\n        left: 0,\n        width: '100vw',\n      };\n\n      referenceElements.forEach((elem) => setStyle(elem, style));\n    };\n\n    const showPopoverGuide = () => {\n      nextTick(() => {\n        currentHighlightLayerElm.value = getTargetElm(currentStepInfo.value.element);\n        if (!currentHighlightLayerElm.value) return;\n        scrollToParentVisibleArea(currentHighlightLayerElm.value);\n        setHighlightLayerPosition(highlightLayerRef.value);\n        setHighlightLayerPosition(popoverWrapperRef.value, true);\n        setHighlightLayerPosition(referenceLayerRef.value, true);\n        scrollToElm(currentHighlightLayerElm.value);\n        isPopoverCenter.value && setReferenceFullW([referenceLayerRef.value, popoverWrapperRef.value]);\n      });\n    };\n\n    const showDialogGuide = () => {\n      nextTick(() => {\n        currentHighlightLayerElm.value = getTargetElm(currentStepInfo.value.element);\n        scrollToParentVisibleArea(currentHighlightLayerElm.value);\n        setHighlightLayerPosition(highlightLayerRef.value);\n        scrollToElm(currentHighlightLayerElm.value);\n      });\n    };\n\n    const showGuide = () => {\n      if (isPopover.value) {\n        showPopoverGuide();\n      } else {\n        showDialogGuide();\n      }\n      nextTick(() => {\n        popoverVisible.value = true;\n      });\n    };\n\n    const destroyGuide = () => {\n      highlightLayerRef.value?.parentNode.removeChild(highlightLayerRef.value);\n      overlayLayerRef.value?.parentNode.removeChild(overlayLayerRef.value);\n      removeClass(document.body, LOCK_CLASS);\n    };\n\n    const renderButtonContent = (buttonProps: ButtonProps, defaultContent: string) => {\n      const { content } = buttonProps || {};\n      return isFunction(content) ? content(h) : content || defaultContent;\n    };\n\n    const handleSkip = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      actived.value = false;\n      setInnerCurrent(-1, { e, total });\n      props.onSkip?.({ e, current: innerCurrent.value, total });\n    };\n\n    const handleNext = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      setInnerCurrent(innerCurrent.value + 1, { e, total });\n      props.onNextStepClick?.({\n        e,\n        next: innerCurrent.value + 1,\n        current: innerCurrent.value,\n        total,\n      });\n    };\n\n    const handleFinish = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      actived.value = false;\n      setInnerCurrent(-1, { e, total });\n      props.onFinish?.({ e, current: innerCurrent.value, total });\n    };\n\n    const handleBack = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      setInnerCurrent(0, { e, total });\n      props.onBack?.({ e, current: innerCurrent.value, total });\n    };\n\n    const contentProps = computed(() => ({\n      handleSkip,\n      handleNext,\n      handleFinish,\n      handleBack,\n      current: innerCurrent.value,\n      total: stepsTotal.value,\n    }));\n\n    const initGuide = () => {\n      if (innerCurrent.value >= 0 && innerCurrent.value < steps.value.length) {\n        if (!actived.value) {\n          actived.value = true;\n          addClass(document.body, LOCK_CLASS);\n        }\n        showGuide();\n      }\n    };\n\n    watch(innerCurrent, (val) => {\n      if (val >= 0 && val < stepsTotal.value) {\n        isPopover.value && (popoverVisible.value = false);\n        initGuide();\n      } else {\n        actived.value = false;\n        destroyGuide();\n      }\n    });\n\n    onMounted(() => {\n      initGuide();\n    });\n\n    return {\n      actived,\n      name,\n      zIndex,\n      stepProps,\n      currentCustomHighlightContent,\n      showCustomHighlightContent,\n      highlightClass,\n      maskClass,\n      popoverClass,\n      tooltipClass,\n      contetnClass,\n      footerClass,\n      wrapperClass,\n      overlayLayerRef,\n      highlightLayerRef,\n      referenceLayerRef,\n      popoverWrapperRef,\n      dialogTooltipRef,\n      popoverVisible,\n      currentStepInfo,\n      isPopover,\n      stepContainer,\n      contentSlot,\n      contentNode,\n      titleNode,\n      bodyNode,\n      counterNode,\n      hideSkip,\n      hideCounter,\n      isLast,\n      isFirst,\n      finishButtonProps,\n      buttonSize,\n      globalConfig,\n      getCurrentCrossProps,\n      handleSkip,\n      handleNext,\n      handleFinish,\n      handleBack,\n      renderButtonContent,\n    };\n  },\n});\n</script>\n","<template>\n  <teleport v-if=\"actived\" to=\"body\">\n    <div ref=\"overlayLayerRef\" :class=\"`${name}__overlay`\" :style=\"{ zIndex: zIndex - 2 }\"></div>\n    <div ref=\"highlightLayerRef\" :class=\"[...highlightClass, ...maskClass]\" :style=\"{ zIndex: zIndex - 1 }\">\n      <t-node v-if=\"showCustomHighlightContent\" :content=\"currentCustomHighlightContent\"></t-node>\n    </div>\n    <div ref=\"popoverWrapperRef\" :class=\"wrapperClass\" :style=\"{ zIndex }\">\n      <component :is=\"stepContainer\" v-bind=\"stepProps\">\n        <template v-if=\"isPopover\" #triggerElement>\n          <div ref=\"referenceLayerRef\" :class=\"[...popoverClass]\"></div>\n        </template>\n        <template #[contentSlot]>\n          <t-node v-if=\"isPopover && contentNode\" :content=\"contentNode\"></t-node>\n          <div v-else :class=\"contetnClass\">\n            <div :class=\"`${name}__tooltip`\">\n              <div :class=\"`${name}__title`\">\n                <t-node :content=\"titleNode\"></t-node>\n              </div>\n              <div :class=\"`${name}__desc`\">\n                <t-node :content=\"bodyNode\"></t-node>\n              </div>\n            </div>\n            <div :class=\"footerClass\">\n              <t-button\n                v-if=\"!hideSkip && !isLast\"\n                key=\"skip\"\n                :class=\"`${name}__skip`\"\n                theme=\"light\"\n                :size=\"buttonSize\"\n                variant=\"base\"\n                :content=\"globalConfig.skip\"\n                v-bind=\"getCurrentCrossProps('skipButtonProps')\"\n                @click=\"handleSkip\"\n              >\n              </t-button>\n              <t-button\n                v-if=\"!isLast\"\n                key=\"next\"\n                :class=\"`${name}__next`\"\n                theme=\"primary\"\n                :size=\"buttonSize\"\n                variant=\"base\"\n                v-bind=\"getCurrentCrossProps('nextButtonProps')\"\n                @click=\"handleNext\"\n              >\n                <template #content>\n                  <t-node\n                    :content=\"renderButtonContent(getCurrentCrossProps('nextButtonProps'), globalConfig.next)\"\n                  ></t-node>\n                  <t-node v-if=\"!hideCounter\" :content=\"counterNode\"></t-node>\n                </template>\n              </t-button>\n              <t-button\n                v-if=\"isLast\"\n                key=\"back\"\n                :class=\"`${name}__back`\"\n                theme=\"light\"\n                :size=\"buttonSize\"\n                variant=\"base\"\n                :content=\"globalConfig.back\"\n                v-bind=\"getCurrentCrossProps('backButtonProps')\"\n                @click=\"handleBack\"\n              ></t-button>\n              <t-button\n                v-if=\"isLast\"\n                key=\"finish\"\n                :class=\"`${name}__finish`\"\n                theme=\"primary\"\n                :size=\"buttonSize\"\n                variant=\"base\"\n                v-bind=\"finishButtonProps ?? {}\"\n                @click=\"handleFinish\"\n              >\n                <template #content>\n                  <t-node :content=\"renderButtonContent(finishButtonProps, globalConfig.finish)\"></t-node>\n                  <t-node v-if=\"!hideCounter\" :content=\"counterNode\"></t-node>\n                </template>\n              </t-button>\n            </div>\n          </div>\n        </template>\n      </component>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref, toRefs, h, getCurrentInstance, nextTick, onMounted, watch } from 'vue';\nimport isFunction from 'lodash/isFunction';\n\nimport TPopover, { PopoverProps } from '../popover';\nimport TPopup, { PopupProps } from '../popup';\nimport TButton, { ButtonProps } from '../button';\nimport config from '../config';\nimport { useVModel, TNode } from '../shared';\nimport { addClass, getWindowScroll, removeClass } from '../shared/dom';\nimport setStyle from '../_common/js/utils/set-style';\nimport guideProps from './props';\nimport { GuideStep, TdGuideProps } from './type';\nimport { isFixed, getRelativePosition, getTargetElm, scrollToParentVisibleArea, scrollToElm } from './utils';\nimport { GuideCrossProps } from './interface';\nimport { useConfig } from '../config-provider/useConfig';\nimport { SizeEnum } from '../common';\n\nconst { prefix } = config;\nconst name = `${prefix}-guide`;\nconst LOCK_CLASS = `${name}--lock`;\nexport default defineComponent({\n  name,\n  components: {\n    TNode,\n    TPopover,\n    TButton,\n    TPopup,\n  },\n  props: guideProps,\n  setup(props: TdGuideProps, context) {\n    const { current, modelValue, finishButtonProps, hideCounter, hideSkip, steps, zIndex } = toRefs(props);\n    const [innerCurrent, setInnerCurrent] = useVModel(\n      current,\n      modelValue,\n      props.defaultCurrent,\n      props.onChange,\n      'current',\n    );\n    const { globalConfig } = useConfig('guide');\n    // 覆盖层，用于覆盖所有元素\n    const overlayLayerRef = ref<HTMLElement>();\n    // 高亮层，用于高亮元素\n    const highlightLayerRef = ref<HTMLElement>();\n    // 提示层，用于高亮元素\n    const referenceLayerRef = ref<HTMLElement>();\n    // 当前高亮的元素\n    const currentHighlightLayerElm = ref<HTMLElement>();\n    // dialog wrapper ref\n    const popoverWrapperRef = ref<HTMLElement>();\n    // dialog ref\n    const dialogTooltipRef = ref<HTMLElement>();\n    // 是否开始展示\n    const actived = ref(false);\n    // 步骤总数\n    const stepsTotal = computed(() => steps.value.length);\n    // 当前步骤的信息\n    const currentStepInfo = computed<GuideStep>(() => steps.value[innerCurrent.value]);\n    // 当前是否为 popover\n    const isPopover = computed(() => getCurrentCrossProps('mode') === 'popover');\n    const popoverVisible = ref(false);\n    const stepContainer = computed(() => (isPopover.value ? TPopover : TPopup));\n    const contentSlot = computed(() => (isPopover.value ? 'content' : 'default'));\n    const isPopoverCenter = computed(() => isPopover.value && currentStepInfo.value.placement === 'center');\n    const stepProps = computed(() => {\n      if (isPopover.value) {\n        return {\n          visible: popoverVisible.value,\n          placement: isPopoverCenter.value ? 'bottom' : currentStepInfo.value.placement,\n          theme: 'light',\n          showArrow: false,\n          ...currentStepInfo.value.popoverProps,\n        } as PopoverProps;\n      }\n      return {\n        visible: popoverVisible.value,\n        zIndex: zIndex.value,\n        placement: 'center',\n        // destroyOnClose: true,\n        class: `${name}__dialog`,\n        overlayProps: {\n          zIndex: zIndex.value - 1,\n        },\n      } as PopupProps;\n    });\n\n    // 当前元素位置状态\n    const currentElmIsFixed = computed(() => isFixed(currentHighlightLayerElm.value || document.body));\n    // 获取当前步骤的属性值 用户当前步骤设置 > 用户组件设置的\n    const getCurrentCrossProps = <Key extends keyof GuideCrossProps>(propsName: Key) =>\n      currentStepInfo.value[propsName] ?? props[propsName];\n\n    const hWithParams = (params: Record<string, any> = { currentStepInfo: currentStepInfo.value }) => {\n      // @ts-ignore\n      const newH = (...args: any[]) => h(...args);\n      return Object.assign(newH, params);\n    };\n\n    // highlight layer 相关\n    // 获取当前步骤的用户设定的高亮内容\n    const currentCustomHighlightContent = computed(() => {\n      const { highlightContent } = currentStepInfo.value;\n\n      let node: any = highlightContent;\n      if (isFunction(highlightContent)) {\n        // 支持函数\n        node = highlightContent(hWithParams());\n      } else if (context.slots.highlightContent) {\n        // 支持插槽\n        node = context.slots.highlightContent(hWithParams());\n      } else if (context.slots['highlight-content']) {\n        // 支持插槽\n        node = context.slots['highlight-content'](hWithParams());\n      }\n      // 给自定义元素添加类名\n      if (node) {\n        if (!node.props) node.props = {};\n        node.props.class = node.props.class || '';\n      }\n      return node;\n    });\n    // 是否展示高亮区域\n    const showCustomHighlightContent = computed(() => Boolean(currentCustomHighlightContent.value && isPopover.value));\n\n    const showOverlay = computed(() => getCurrentCrossProps('showOverlay'));\n\n    const highlightClass = computed(() => [\n      `${name}__highlight`,\n      `${name}__highlight--${isPopover.value ? 'popover' : 'dialog'}`,\n      `${name}--${currentElmIsFixed.value && isPopover.value ? 'fixed' : 'absolute'}`,\n    ]);\n    const maskClass = computed(() => [`${name}__highlight--${showOverlay.value ? 'mask' : 'nomask'}`]);\n    const wrapperClass = computed(() => [\n      `${name}__wrapper`,\n      `${name}--${currentElmIsFixed.value ? 'fixed' : 'absolute'}`,\n      {\n        [`${name}__wrapper--content`]: !!currentStepInfo.value.content,\n      },\n    ]);\n    const popoverClass = computed(() => [`${name}__reference`]);\n    const contetnClass = computed(() => [`${name}__content--${isPopover.value ? 'popover' : 'dialog'}`]);\n    const tooltipClass = computed(() => [`${name}__tooltip--${isPopover.value ? 'popover' : 'dialog'}`]);\n    const footerClass = computed(() => [\n      `${name}__footer`,\n      `${name}__footer--${isPopover.value ? 'popover' : 'dialog'}`,\n    ]);\n\n    const contentNode = computed(() => {\n      const { content } = currentStepInfo.value;\n      let renderContent;\n      if (isFunction(content)) {\n        renderContent = content(hWithParams(contentProps.value));\n      } else if (context.slots.content) {\n        renderContent = context.slots.content(hWithParams(contentProps.value));\n      } else if (content) {\n        renderContent = h(content, contentProps.value);\n      }\n      return renderContent;\n    });\n\n    const titleNode = computed(() => {\n      const { title } = currentStepInfo.value;\n      let renderTitle: any = null;\n      if (isFunction(title)) {\n        renderTitle = title(hWithParams());\n      } else if (context.slots.title) {\n        renderTitle = context.slots.title(hWithParams());\n      } else if (typeof title === 'string') {\n        renderTitle = title;\n      } else if (title) {\n        renderTitle = h(title);\n      }\n      return renderTitle;\n    });\n\n    const bodyNode = computed(() => {\n      const { body } = currentStepInfo.value;\n      let renderBody: any = null;\n      if (isFunction(body)) {\n        renderBody = body(hWithParams());\n      } else if (context.slots.body) {\n        renderBody = context.slots.body(hWithParams());\n      } else if (typeof body === 'string') {\n        renderBody = body;\n      } else if (body) {\n        renderBody = h(body);\n      }\n      return renderBody;\n    });\n\n    const counterNode = computed(() => {\n      const params = {\n        total: stepsTotal.value,\n        current: innerCurrent.value,\n      };\n      let renderCounter: any = null;\n      const { counter } = props;\n      if (isFunction(counter)) {\n        renderCounter = counter(h, params);\n      } else if (context.slots.counter) {\n        renderCounter = context.slots.counter(hWithParams(params));\n      } else if (counter) {\n        renderCounter = h(counter, params);\n      }\n      return renderCounter || ` (${innerCurrent.value + 1}/${stepsTotal.value})`;\n    });\n\n    const isLast = computed(() => innerCurrent.value === stepsTotal.value - 1);\n    const isFirst = computed(() => innerCurrent.value === 0);\n    const buttonSize = computed(() => (isPopover.value ? 'extra-small' : 'medium') as SizeEnum);\n\n    // 设置高亮层的位置\n    const setHighlightLayerPosition = (highlightLayer: HTMLElement, isReference = false) => {\n      let { top, left } = getRelativePosition(currentHighlightLayerElm.value);\n      let { width, height } = currentHighlightLayerElm.value.getBoundingClientRect();\n      const highlightPadding = getCurrentCrossProps('highlightPadding');\n\n      if (isPopover.value) {\n        width += highlightPadding * 2;\n        height += highlightPadding * 2;\n        top -= highlightPadding;\n        left -= highlightPadding;\n      } else {\n        const { scrollTop, scrollLeft } = getWindowScroll();\n        top += scrollTop;\n        left += scrollLeft;\n      }\n\n      const style = {\n        top: `${top}px`,\n        left: `${left}px`,\n      };\n\n      // 展示自定义高亮\n      if (showCustomHighlightContent.value) {\n        // 高亮框本身不设定宽高，引用用框的宽高设定为用户自定义的宽高\n        if (isReference) {\n          const { width, height } = highlightLayerRef.value.getBoundingClientRect();\n          Object.assign(style, {\n            width: `${width}px`,\n            height: `${height}px`,\n          });\n        } else {\n          Object.assign(style, {\n            width: 'auto',\n            height: 'auto',\n          });\n        }\n      } else {\n        Object.assign(style, {\n          width: `${width}px`,\n          height: `${height}px`,\n        });\n      }\n\n      setStyle(highlightLayer, style);\n    };\n\n    const setReferenceFullW = (referenceElements: HTMLElement[]): void => {\n      const style = {\n        left: 0,\n        width: '100vw',\n      };\n\n      referenceElements.forEach((elem) => setStyle(elem, style));\n    };\n\n    const showPopoverGuide = () => {\n      nextTick(() => {\n        currentHighlightLayerElm.value = getTargetElm(currentStepInfo.value.element);\n        if (!currentHighlightLayerElm.value) return;\n        scrollToParentVisibleArea(currentHighlightLayerElm.value);\n        setHighlightLayerPosition(highlightLayerRef.value);\n        setHighlightLayerPosition(popoverWrapperRef.value, true);\n        setHighlightLayerPosition(referenceLayerRef.value, true);\n        scrollToElm(currentHighlightLayerElm.value);\n        isPopoverCenter.value && setReferenceFullW([referenceLayerRef.value, popoverWrapperRef.value]);\n      });\n    };\n\n    const showDialogGuide = () => {\n      nextTick(() => {\n        currentHighlightLayerElm.value = getTargetElm(currentStepInfo.value.element);\n        scrollToParentVisibleArea(currentHighlightLayerElm.value);\n        setHighlightLayerPosition(highlightLayerRef.value);\n        scrollToElm(currentHighlightLayerElm.value);\n      });\n    };\n\n    const showGuide = () => {\n      if (isPopover.value) {\n        showPopoverGuide();\n      } else {\n        showDialogGuide();\n      }\n      nextTick(() => {\n        popoverVisible.value = true;\n      });\n    };\n\n    const destroyGuide = () => {\n      highlightLayerRef.value?.parentNode.removeChild(highlightLayerRef.value);\n      overlayLayerRef.value?.parentNode.removeChild(overlayLayerRef.value);\n      removeClass(document.body, LOCK_CLASS);\n    };\n\n    const renderButtonContent = (buttonProps: ButtonProps, defaultContent: string) => {\n      const { content } = buttonProps || {};\n      return isFunction(content) ? content(h) : content || defaultContent;\n    };\n\n    const handleSkip = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      actived.value = false;\n      setInnerCurrent(-1, { e, total });\n      props.onSkip?.({ e, current: innerCurrent.value, total });\n    };\n\n    const handleNext = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      setInnerCurrent(innerCurrent.value + 1, { e, total });\n      props.onNextStepClick?.({\n        e,\n        next: innerCurrent.value + 1,\n        current: innerCurrent.value,\n        total,\n      });\n    };\n\n    const handleFinish = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      actived.value = false;\n      setInnerCurrent(-1, { e, total });\n      props.onFinish?.({ e, current: innerCurrent.value, total });\n    };\n\n    const handleBack = (e: MouseEvent) => {\n      const total = stepsTotal.value;\n      setInnerCurrent(0, { e, total });\n      props.onBack?.({ e, current: innerCurrent.value, total });\n    };\n\n    const contentProps = computed(() => ({\n      handleSkip,\n      handleNext,\n      handleFinish,\n      handleBack,\n      current: innerCurrent.value,\n      total: stepsTotal.value,\n    }));\n\n    const initGuide = () => {\n      if (innerCurrent.value >= 0 && innerCurrent.value < steps.value.length) {\n        if (!actived.value) {\n          actived.value = true;\n          addClass(document.body, LOCK_CLASS);\n        }\n        showGuide();\n      }\n    };\n\n    watch(innerCurrent, (val) => {\n      if (val >= 0 && val < stepsTotal.value) {\n        isPopover.value && (popoverVisible.value = false);\n        initGuide();\n      } else {\n        actived.value = false;\n        destroyGuide();\n      }\n    });\n\n    onMounted(() => {\n      initGuide();\n    });\n\n    return {\n      actived,\n      name,\n      zIndex,\n      stepProps,\n      currentCustomHighlightContent,\n      showCustomHighlightContent,\n      highlightClass,\n      maskClass,\n      popoverClass,\n      tooltipClass,\n      contetnClass,\n      footerClass,\n      wrapperClass,\n      overlayLayerRef,\n      highlightLayerRef,\n      referenceLayerRef,\n      popoverWrapperRef,\n      dialogTooltipRef,\n      popoverVisible,\n      currentStepInfo,\n      isPopover,\n      stepContainer,\n      contentSlot,\n      contentNode,\n      titleNode,\n      bodyNode,\n      counterNode,\n      hideSkip,\n      hideCounter,\n      isLast,\n      isFirst,\n      finishButtonProps,\n      buttonSize,\n      globalConfig,\n      getCurrentCrossProps,\n      handleSkip,\n      handleNext,\n      handleFinish,\n      handleBack,\n      renderButtonContent,\n    };\n  },\n});\n</script>\n"],"names":["prefix","config","name","LOCK_CLASS","defineComponent","components","TNode","TPopover","TButton","TPopup","props","guideProps","setup","context","_toRefs","toRefs","current","modelValue","finishButtonProps","hideCounter","hideSkip","steps","zIndex","_useVModel","useVModel","defaultCurrent","onChange","_useVModel2","_slicedToArray","innerCurrent","setInnerCurrent","_useConfig","useConfig","globalConfig","overlayLayerRef","ref","highlightLayerRef","referenceLayerRef","currentHighlightLayerElm","popoverWrapperRef","dialogTooltipRef","actived","stepsTotal","computed","value","length","currentStepInfo","isPopover","getCurrentCrossProps","popoverVisible","stepContainer","contentSlot","isPopoverCenter","placement","stepProps","_objectSpread","visible","theme","showArrow","popoverProps","class","overlayProps","currentElmIsFixed","isFixed","document","body","propsName","_currentStepInfo$valu","hWithParams","params","arguments","undefined","newH","h","apply","Object","assign","currentCustomHighlightContent","highlightContent","node","isFunction","slots","showCustomHighlightContent","Boolean","showOverlay","highlightClass","concat","maskClass","wrapperClass","_defineProperty","content","popoverClass","contetnClass","tooltipClass","footerClass","contentNode","renderContent","contentProps","titleNode","title","renderTitle","bodyNode","renderBody","counterNode","total","renderCounter","counter","isLast","isFirst","buttonSize","setHighlightLayerPosition","highlightLayer","isReference","_getRelativePosition","getRelativePosition","top","left","_currentHighlightLaye","getBoundingClientRect","width","height","highlightPadding","_getWindowScroll","getWindowScroll","scrollTop","scrollLeft","style","_highlightLayerRef$va","setStyle","setReferenceFullW","referenceElements","forEach","elem","showPopoverGuide","nextTick","getTargetElm","element","scrollToParentVisibleArea","scrollToElm","showDialogGuide","showGuide","destroyGuide","_highlightLayerRef$va2","_overlayLayerRef$valu","parentNode","removeChild","removeClass","renderButtonContent","buttonProps","defaultContent","_ref2","handleSkip","e","_props$onSkip","onSkip","call","handleNext","_props$onNextStepClic","onNextStepClick","next","handleFinish","_props$onFinish","onFinish","handleBack","_props$onBack","onBack","initGuide","addClass","watch","val","onMounted","_ctx","_createBlock","_Teleport","to","_createElementVNode","_normalizeClass","_toConsumableArray","_component_t_node","_resolveDynamicComponent","_normalizeProps","_guardReactiveProps","_createSlots","_ctx$finishButtonProp","_createElementBlock","_createVNode","_openBlock","_component_t_button","_mergeProps","key","size","variant","skip","onClick","back","finish"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA,IAAQA,SAAWC,MAAA,CAAXD;AACR,IAAME,iBAAUF,MAAA,EAAA,QAAA,CAAA,CAAA;AAChB,IAAMG,uBAAgBD,IAAA,EAAA,QAAA,CAAA,CAAA;AACtB,aAAeE,eAAgB,CAAA;AAC7BF,EAAAA,IAAA,EAAAA,IAAA;AACAG,EAAAA,UAAY,EAAA;AACVC,IAAAA,KAAA,EAAAA,cAAA;AACAC,IAAAA,QAAA,EAAAA,QAAA;AACAC,IAAAA,OAAA,EAAAA,OAAA;AACAC,IAAAA,MAAA,EAAAA,MAAAA;GACF;AACAC,EAAAA,KAAO,EAAAC,UAAA;AACPC,EAAAA,KAAA,EAAAA,SAAAA,KAAAA,CAAMF,OAAqBG,OAAS,EAAA;AAC5B,IAAA,IAAAC,OAAA,GAAmFC,MAAA,CAAOL,KAAK,CAAA;MAA7FM,OAAS,GAAAF,OAAA,CAATE,OAAS;MAAAC,UAAA,GAAAH,OAAA,CAAAG,UAAA;MAAYC,iBAAmB,GAAAJ,OAAA,CAAnBI,iBAAmB;MAAAC,WAAA,GAAAL,OAAA,CAAAK,WAAA;MAAaC,mBAAAA;MAAUC,KAAO,GAAAP,OAAA,CAAPO,KAAO;MAAAC,MAAA,GAAAR,OAAA,CAAAQ,MAAA,CAAA;AACxE,IAAA,IAAAC,UAAA,GAAkCC,SAAA,CACtCR,OAAA,EACAC,UAAA,EACAP,KAAM,CAAAe,cAAA,EACNf,KAAM,CAAAgB,QAAA,EACN,SACF,CAAA;MAAAC,WAAA,GAAAC,cAAA,CAAAL,UAAA,EAAA,CAAA,CAAA;AANOM,MAAAA,YAAc,GAAAF,WAAA,CAAA,CAAA,CAAA;AAAAG,MAAAA,eAAe,GAAAH,WAAA,CAAA,CAAA,CAAA,CAAA;AAOpC,IAAA,IAAAI,UAAA,GAAyBC,SAAA,CAAU,OAAO,CAAA;MAAlCC,YAAA,GAAAF,UAAA,CAAAE,YAAA,CAAA;AAER,IAAA,IAAMC,kBAAkBC,GAAiB,EAAA,CAAA;AAEzC,IAAA,IAAMC,oBAAoBD,GAAiB,EAAA,CAAA;AAE3C,IAAA,IAAME,oBAAoBF,GAAiB,EAAA,CAAA;AAE3C,IAAA,IAAMG,2BAA2BH,GAAiB,EAAA,CAAA;AAElD,IAAA,IAAMI,oBAAoBJ,GAAiB,EAAA,CAAA;AAE3C,IAAA,IAAMK,mBAAmBL,GAAiB,EAAA,CAAA;AAEpC,IAAA,IAAAM,OAAA,GAAUN,IAAI,KAAK,CAAA,CAAA;IAEzB,IAAMO,UAAa,GAAAC,QAAA,CAAS,YAAA;AAAA,MAAA,OAAMtB,KAAA,CAAMuB,MAAMC,MAAM,CAAA;KAAA,CAAA,CAAA;IAEpD,IAAMC,kBAAkBH,QAAoB,CAAA,YAAA;AAAA,MAAA,OAAMtB,KAAM,CAAAuB,KAAA,CAAMf,aAAae,KAAM,CAAA,CAAA;KAAA,CAAA,CAAA;IAEjF,IAAMG,YAAYJ,QAAS,CAAA,YAAA;AAAA,MAAA,OAAMK,oBAAqB,CAAA,MAAM,MAAM,SAAS,CAAA;KAAA,CAAA,CAAA;AACrE,IAAA,IAAAC,cAAA,GAAiBd,IAAI,KAAK,CAAA,CAAA;IAChC,IAAMe,gBAAgBP,QAAS,CAAA,YAAA;AAAA,MAAA,OAAOI,SAAU,CAAAH,KAAA,GAAQrC,WAAWE,MAAO,CAAA;KAAA,CAAA,CAAA;IAC1E,IAAM0C,cAAcR,QAAS,CAAA,YAAA;AAAA,MAAA,OAAOI,SAAU,CAAAH,KAAA,GAAQ,YAAY,SAAU,CAAA;KAAA,CAAA,CAAA;IACtE,IAAAQ,eAAA,GAAkBT,SAAS,YAAA;MAAA,OAAMI,SAAA,CAAUH,SAASE,eAAgB,CAAAF,KAAA,CAAMS,cAAc,QAAQ,CAAA;KAAA,CAAA,CAAA;AAChG,IAAA,IAAAC,SAAA,GAAYX,SAAS,YAAM;MAC/B,IAAII,UAAUH,KAAO,EAAA;AACZ,QAAA,OAAAW,aAAA,CAAA;UACLC,SAASP,cAAe,CAAAL,KAAA;UACxBS,SAAW,EAAAD,eAAA,CAAgBR,KAAQ,GAAA,QAAA,GAAWE,gBAAgBF,KAAM,CAAAS,SAAA;AACpEI,UAAAA,KAAO,EAAA,OAAA;AACPC,UAAAA,SAAW,EAAA,KAAA;AAAA,SAAA,EACRZ,gBAAgBF,KAAM,CAAAe,YAAA,CAAA,CAAA;AAE7B,OAAA;MACO,OAAA;QACLH,SAASP,cAAe,CAAAL,KAAA;QACxBtB,QAAQA,MAAO,CAAAsB,KAAA;AACfS,QAAAA,SAAW,EAAA,QAAA;AAEXO,QAAAA,iBAAU1D,IAAA,EAAA,UAAA,CAAA;AACV2D,QAAAA,YAAc,EAAA;AACZvC,UAAAA,MAAA,EAAQA,OAAOsB,KAAQ,GAAA,CAAA;AACzB,SAAA;OACF,CAAA;AACF,KAAC,CAAA,CAAA;IAGK,IAAAkB,iBAAA,GAAoBnB,SAAS,YAAA;MAAA,OAAMoB,OAAA,CAAQzB,yBAAyBM,KAAS,IAAAoB,QAAA,CAASC,IAAI,CAAC,CAAA;KAAA,CAAA,CAAA;AAEjG,IAAA,IAAMjB,uBAAuB,SAAvBA,qBAA2DkB,SAAA,EAAA;AAAA,MAAA,IAAAC,qBAAA,CAAA;AAAA,MAAA,OAAA,CAAAA,qBAAA,GAC/DrB,eAAgB,CAAAF,KAAA,CAAMsB,mFAAcxD,KAAM,CAAAwD,SAAA,CAAA,CAAA;AAAA,KAAA,CAAA;AAE5C,IAAA,IAAME,cAAc,SAAdA,cAA4F;MAAA,IAA7EC,MAAA,GAAAC,SAAA,CAAAzB,MAAA,GAAAyB,CAAAA,IAAAA,SAAA,CAAAC,CAAAA,CAAAA,KAAAA,SAAA,GAAAD,SAAA,CAA8B,CAAA,CAAA,GAAA;QAAExB,eAAiB,EAAAA,eAAA,CAAgBF,KAAAA;OAAY,CAAA;AAEhG,MAAA,IAAM4B,IAAO,GAAA,SAAPA,IAAOA,GAAA;AAAA,QAAA,OAAoBC,CAAA,CAAAC,KAAA,CAAA,KAAA,CAAA,EAAAJ,SAAS,CAAA,CAAA;AAAA,OAAA,CAAA;AACnC,MAAA,OAAAK,MAAA,CAAOC,MAAO,CAAAJ,IAAA,EAAMH,MAAM,CAAA,CAAA;KACnC,CAAA;AAIM,IAAA,IAAAQ,6BAAA,GAAgClC,SAAS,YAAM;AAC7C,MAAA,IAAEmC,gBAAiB,GAAIhC,eAAgB,CAAAF,KAAA,CAArCkC,gBAAiB,CAAA;MAEzB,IAAIC,IAAY,GAAAD,gBAAA,CAAA;AACZ,MAAA,IAAAE,UAAA,CAAWF,gBAAgB,CAAG,EAAA;AAEzBC,QAAAA,IAAA,GAAAD,gBAAA,CAAiBV,aAAa,CAAA,CAAA;AACvC,OAAA,MAAA,IAAWvD,OAAQ,CAAAoE,KAAA,CAAMH,gBAAkB,EAAA;QAEzCC,IAAA,GAAOlE,OAAQ,CAAAoE,KAAA,CAAMH,gBAAiB,CAAAV,WAAA,EAAa,CAAA,CAAA;OACrD,MAAA,IAAWvD,OAAQ,CAAAoE,KAAA,CAAM,mBAAsB,CAAA,EAAA;QAE7CF,IAAA,GAAOlE,OAAQ,CAAAoE,KAAA,CAAM,mBAAqB,CAAA,CAAAb,WAAA,EAAa,CAAA,CAAA;AACzD,OAAA;AAEA,MAAA,IAAIW,IAAM,EAAA;QACR,IAAI,CAACA,IAAK,CAAArE,KAAA,EAAOqE,IAAA,CAAKrE,QAAQ,EAAC,CAAA;QAC/BqE,IAAA,CAAKrE,KAAM,CAAAkD,KAAA,GAAQmB,IAAK,CAAArE,KAAA,CAAMkD,KAAS,IAAA,EAAA,CAAA;AACzC,OAAA;AACO,MAAA,OAAAmB,IAAA,CAAA;AACT,KAAC,CAAA,CAAA;IAEK,IAAAG,0BAAA,GAA6BvC,SAAS,YAAA;MAAA,OAAMwC,OAAA,CAAQN,8BAA8BjC,KAAS,IAAAG,SAAA,CAAUH,KAAK,CAAC,CAAA;KAAA,CAAA,CAAA;IAEjH,IAAMwC,WAAc,GAAAzC,QAAA,CAAS,YAAA;MAAA,OAAMK,oBAAA,CAAqB,aAAa,CAAC,CAAA;KAAA,CAAA,CAAA;IAEhE,IAAAqC,cAAA,GAAiB1C,SAAS,YAAA;AAAA,MAAA,OAAM,IAAA2C,MAAA,CACjCpF,IAAA,EAAA,aAAA,CAAA,EAAA,EAAA,CAAAoF,MAAA,CACApF,IAAA,EAAAoF,eAAAA,CAAAA,CAAAA,MAAA,CAAoBvC,SAAU,CAAAH,KAAA,GAAQ,SAAY,GAAA,QAAA,CAAA0C,EAAAA,EAAAA,CAAAA,MAAA,CAClDpF,IAAS,EAAA,IAAA,CAAA,CAAAoF,MAAA,CAAAxB,iBAAA,CAAkBlB,KAAS,IAAAG,SAAA,CAAUH,QAAQ,OAAU,GAAA,UAAA,CACpE,CAAA,CAAA;KAAA,CAAA,CAAA;IACK,IAAA2C,SAAA,GAAY5C,QAAS,CAAA,YAAA;AAAA,MAAA,OAAM,CAAA2C,EAAAA,CAAAA,MAAA,CAAIpF,8BAAoBkF,WAAY,CAAAxC,KAAA,GAAQ,MAAS,GAAA,QAAA,CAAW,CAAA,CAAA;KAAA,CAAA,CAAA;IAC3F,IAAA4C,YAAA,GAAe7C,SAAS,YAAA;AAAA,MAAA,OAAM,CAAA2C,EAAAA,CAAAA,MAAA,CAC/BpF,IAAA,mBAAAoF,MAAA,CACApF,IAAA,EAAA,IAAA,CAAA,CAAAoF,MAAA,CAASxB,iBAAkB,CAAAlB,KAAA,GAAQ,OAAU,GAAA,UAAA,CAAA6C,EAAAA,eAAA,CAAAH,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CAE1CpF,IAAA,EAAA,oBAAA,CAAA,EAA2B,CAAC,CAAC4C,gBAAgBF,KAAM,CAAA8C,OAAA,CAE1D,CAAA,CAAA;KAAA,CAAA,CAAA;IACD,IAAMC,eAAehD,QAAS,CAAA,YAAA;AAAA,MAAA,OAAM,CAAA2C,EAAAA,CAAAA,MAAA,CAAIpF,MAAkB,aAAA,CAAA,CAAA,CAAA;KAAA,CAAA,CAAA;IACpD,IAAA0F,YAAA,GAAejD,QAAS,CAAA,YAAA;AAAA,MAAA,OAAM,CAAA2C,EAAAA,CAAAA,MAAA,CAAIpF,4BAAkB6C,SAAU,CAAAH,KAAA,GAAQ,SAAY,GAAA,QAAA,CAAW,CAAA,CAAA;KAAA,CAAA,CAAA;IAC7F,IAAAiD,YAAA,GAAelD,QAAS,CAAA,YAAA;AAAA,MAAA,OAAM,CAAA2C,EAAAA,CAAAA,MAAA,CAAIpF,4BAAkB6C,SAAU,CAAAH,KAAA,GAAQ,SAAY,GAAA,QAAA,CAAW,CAAA,CAAA;KAAA,CAAA,CAAA;IAC7F,IAAAkD,WAAA,GAAcnD,SAAS,YAAA;AAAA,MAAA,OAAM,IAAA2C,MAAA,CAC9BpF,IAAA,EAAAoF,UAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACApF,IAAA,EAAA,YAAA,CAAA,CAAAoF,MAAA,CAAiBvC,SAAU,CAAAH,KAAA,GAAQ,SAAY,GAAA,QAAA,CACnD,CAAA,CAAA;KAAA,CAAA,CAAA;AAEK,IAAA,IAAAmD,WAAA,GAAcpD,SAAS,YAAM;AAC3B,MAAA,IAAE+C,OAAQ,GAAI5C,eAAgB,CAAAF,KAAA,CAA5B8C,OAAQ,CAAA;AACZ,MAAA,IAAAM,aAAA,CAAA;AACA,MAAA,IAAAhB,UAAA,CAAWU,OAAO,CAAG,EAAA;QACvBM,aAAA,GAAgBN,OAAQ,CAAAtB,WAAA,CAAY6B,YAAa,CAAArD,KAAK,CAAC,CAAA,CAAA;AACzD,OAAA,MAAA,IAAW/B,OAAQ,CAAAoE,KAAA,CAAMS,OAAS,EAAA;AAChCM,QAAAA,aAAA,GAAgBnF,QAAQoE,KAAM,CAAAS,OAAA,CAAQtB,WAAY,CAAA6B,YAAA,CAAarD,KAAK,CAAC,CAAA,CAAA;iBAC5D8C,OAAS,EAAA;QACFM,aAAA,GAAAvB,CAAA,CAAEiB,OAAS,EAAAO,YAAA,CAAarD,KAAK,CAAA,CAAA;AAC/C,OAAA;AACO,MAAA,OAAAoD,aAAA,CAAA;AACT,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAE,SAAA,GAAYvD,SAAS,YAAM;AACzB,MAAA,IAAEwD,KAAM,GAAIrD,eAAgB,CAAAF,KAAA,CAA1BuD,KAAM,CAAA;MACd,IAAIC,WAAmB,GAAA,IAAA,CAAA;AACnB,MAAA,IAAApB,UAAA,CAAWmB,KAAK,CAAG,EAAA;AACPC,QAAAA,WAAA,GAAAD,KAAA,CAAM/B,aAAa,CAAA,CAAA;AACnC,OAAA,MAAA,IAAWvD,OAAQ,CAAAoE,KAAA,CAAMkB,KAAO,EAAA;QAC9BC,WAAA,GAAcvF,OAAQ,CAAAoE,KAAA,CAAMkB,KAAM,CAAA/B,WAAA,EAAa,CAAA,CAAA;AACjD,OAAA,MAAA,IAAW,OAAO+B,KAAA,KAAU,QAAU,EAAA;AACtBC,QAAAA,WAAA,GAAAD,KAAA,CAAA;iBACLA,KAAO,EAAA;AAChBC,QAAAA,WAAA,GAAc3B,EAAE0B,KAAK,CAAA,CAAA;AACvB,OAAA;AACO,MAAA,OAAAC,WAAA,CAAA;AACT,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAC,QAAA,GAAW1D,SAAS,YAAM;AACxB,MAAA,IAAEsB,IAAK,GAAInB,eAAgB,CAAAF,KAAA,CAAzBqB,IAAK,CAAA;MACb,IAAIqC,UAAkB,GAAA,IAAA,CAAA;AAClB,MAAA,IAAAtB,UAAA,CAAWf,IAAI,CAAG,EAAA;AACPqC,QAAAA,UAAA,GAAArC,IAAA,CAAKG,aAAa,CAAA,CAAA;AACjC,OAAA,MAAA,IAAWvD,OAAQ,CAAAoE,KAAA,CAAMhB,IAAM,EAAA;QAC7BqC,UAAA,GAAazF,OAAQ,CAAAoE,KAAA,CAAMhB,IAAK,CAAAG,WAAA,EAAa,CAAA,CAAA;AAC/C,OAAA,MAAA,IAAW,OAAOH,IAAA,KAAS,QAAU,EAAA;AACtBqC,QAAAA,UAAA,GAAArC,IAAA,CAAA;iBACJA,IAAM,EAAA;AACfqC,QAAAA,UAAA,GAAa7B,EAAER,IAAI,CAAA,CAAA;AACrB,OAAA;AACO,MAAA,OAAAqC,UAAA,CAAA;AACT,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAC,WAAA,GAAc5D,SAAS,YAAM;AACjC,MAAA,IAAM0B,MAAS,GAAA;QACbmC,OAAO9D,UAAW,CAAAE,KAAA;QAClB5B,SAASa,YAAa,CAAAe,KAAAA;OACxB,CAAA;MACA,IAAI6D,aAAqB,GAAA,IAAA,CAAA;AACnB,MAAA,IAAEC,UAAYhG,KAAA,CAAZgG;AACJ,MAAA,IAAA1B,UAAA,CAAW0B,OAAO,CAAG,EAAA;AACPD,QAAAA,aAAA,GAAAC,OAAA,CAAQjC,GAAGJ,MAAM,CAAA,CAAA;AACnC,OAAA,MAAA,IAAWxD,OAAQ,CAAAoE,KAAA,CAAMyB,OAAS,EAAA;QAChCD,aAAA,GAAgB5F,OAAQ,CAAAoE,KAAA,CAAMyB,OAAQ,CAAAtC,WAAA,CAAYC,MAAM,CAAC,CAAA,CAAA;iBAChDqC,OAAS,EAAA;AACFD,QAAAA,aAAA,GAAAhC,CAAA,CAAEiC,SAASrC,MAAM,CAAA,CAAA;AACnC,OAAA;AACA,MAAA,OAAOoC,aAAiB,IAAA,IAAA,CAAAnB,MAAA,CAAKzD,YAAa,CAAAe,KAAA,GAAQ,eAAKF,UAAW,CAAAE,KAAA,EAAA,GAAA,CAAA,CAAA;AACpE,KAAC,CAAA,CAAA;IAED,IAAM+D,SAAShE,QAAS,CAAA,YAAA;MAAA,OAAMd,aAAae,KAAU,KAAAF,UAAA,CAAWE,QAAQ,CAAC,CAAA;KAAA,CAAA,CAAA;IACzE,IAAMgE,OAAU,GAAAjE,QAAA,CAAS,YAAA;AAAA,MAAA,OAAMd,YAAA,CAAae,UAAU,CAAC,CAAA;KAAA,CAAA,CAAA;IACvD,IAAMiE,aAAalE,QAAS,CAAA,YAAA;AAAA,MAAA,OAAOI,SAAU,CAAAH,KAAA,GAAQ,gBAAgB,QAAqB,CAAA;KAAA,CAAA,CAAA;AAG1F,IAAA,IAAMkE,yBAA4B,GAAA,SAA5BA,yBAA4BA,CAACC,cAA6B,EAAwB;AAAA,MAAA,IAAxBC,WAAA,GAAA1C,SAAA,CAAAzB,MAAA,GAAA,CAAA,IAAAyB,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAc,KAAU,CAAA;AACtF,MAAA,IAAA2C,oBAAA,GAAoBC,mBAAA,CAAoB5E,yBAAyBM,KAAK,CAAA;QAAhEuE,GAAK,GAAAF,oBAAA,CAALE,GAAK;QAAAC,IAAA,GAAAH,oBAAA,CAAAG,IAAA,CAAA;MACX,IAAAC,qBAAA,GAAwB/E,wBAAA,CAAyBM,MAAM0E,qBAAsB,EAAA;QAAvEC,KAAO,GAAAF,qBAAA,CAAPE,KAAO;QAAAC,MAAA,GAAAH,qBAAA,CAAAG,MAAA,CAAA;AACP,MAAA,IAAAC,gBAAA,GAAmBzE,qBAAqB,kBAAkB,CAAA,CAAA;MAEhE,IAAID,UAAUH,KAAO,EAAA;QACnB2E,KAAA,IAASE,gBAAmB,GAAA,CAAA,CAAA;QAC5BD,MAAA,IAAUC,gBAAmB,GAAA,CAAA,CAAA;AACtBN,QAAAA,GAAA,IAAAM,gBAAA,CAAA;AACCL,QAAAA,IAAA,IAAAK,gBAAA,CAAA;AACV,OAAO,MAAA;AACL,QAAA,IAAAC,gBAAA,GAAkCC,eAAgB,EAAA;UAA1CC,SAAA,GAAAF,gBAAA,CAAAE,SAAA;UAAWC,UAAW,GAAAH,gBAAA,CAAXG,UAAW,CAAA;AACvBV,QAAAA,GAAA,IAAAS,SAAA,CAAA;AACCR,QAAAA,IAAA,IAAAS,UAAA,CAAA;AACV,OAAA;AAEA,MAAA,IAAMC,KAAQ,GAAA;AACZX,QAAAA,eAAQA,GAAA,EAAA,IAAA,CAAA;QACRC,gBAASA,IAAA,EAAA,IAAA,CAAA;OACX,CAAA;MAGA,IAAIlC,2BAA2BtC,KAAO,EAAA;AAEpC,QAAA,IAAIoE,WAAa,EAAA;UACT,IAAAe,qBAAA,GAAoB3F,iBAAA,CAAkBQ,MAAM0E,qBAAsB,EAAA;YAAhEC,MAAO,GAAAQ,qBAAA,CAAPR;YAAOC,gCAAAA,MAAA,CAAA;AACf7C,UAAAA,MAAA,CAAOC,OAAOkD,KAAO,EAAA;AACnBP,YAAAA,iBAAUA,MAAAA,EAAAA,IAAAA,CAAAA;YACVC,kBAAWA,OAAAA,EAAAA,IAAAA,CAAAA;AACb,WAAC,CAAA,CAAA;AACH,SAAO,MAAA;AACL7C,UAAAA,MAAA,CAAOC,OAAOkD,KAAO,EAAA;AACnBP,YAAAA,KAAO,EAAA,MAAA;AACPC,YAAAA,MAAQ,EAAA,MAAA;AACV,WAAC,CAAA,CAAA;AACH,SAAA;AACF,OAAO,MAAA;AACL7C,QAAAA,MAAA,CAAOC,OAAOkD,KAAO,EAAA;AACnBP,UAAAA,iBAAUA,KAAA,EAAA,IAAA,CAAA;UACVC,kBAAWA,MAAA,EAAA,IAAA,CAAA;AACb,SAAC,CAAA,CAAA;AACH,OAAA;AAEAQ,MAAAA,QAAA,CAASjB,gBAAgBe,KAAK,CAAA,CAAA;KAChC,CAAA;AAEM,IAAA,IAAAG,iBAAA,GAAoB,SAApBA,iBAAAA,CAAqBC,iBAA2C,EAAA;AACpE,MAAA,IAAMJ,KAAQ,GAAA;AACZV,QAAAA,IAAM,EAAA,CAAA;AACNG,QAAAA,KAAO,EAAA,OAAA;OACT,CAAA;AAEAW,MAAAA,iBAAA,CAAkBC,QAAQ,UAACC,IAAA,EAAA;AAAA,QAAA,OAASJ,QAAS,CAAAI,IAAA,EAAMN,KAAK,CAAC,CAAA;OAAA,CAAA,CAAA;KAC3D,CAAA;AAEA,IAAA,IAAMO,mBAAmB,SAAnBA,mBAAyB;AAC7BC,MAAAA,QAAA,CAAS,YAAM;QACbhG,wBAAA,CAAyBM,KAAQ,GAAA2F,YAAA,CAAazF,eAAgB,CAAAF,KAAA,CAAM4F,OAAO,CAAA,CAAA;AAC3E,QAAA,IAAI,CAAClG,wBAAyB,CAAAM,KAAA,EAAO,OAAA;AACrC6F,QAAAA,yBAAA,CAA0BnG,yBAAyBM,KAAK,CAAA,CAAA;AACxDkE,QAAAA,yBAAA,CAA0B1E,kBAAkBQ,KAAK,CAAA,CAAA;AACvBkE,QAAAA,yBAAA,CAAAvE,iBAAA,CAAkBK,OAAO,IAAI,CAAA,CAAA;AAC7BkE,QAAAA,yBAAA,CAAAzE,iBAAA,CAAkBO,OAAO,IAAI,CAAA,CAAA;AACvD8F,QAAAA,WAAA,CAAYpG,yBAAyBM,KAAK,CAAA,CAAA;AAC1CQ,QAAAA,eAAA,CAAgBR,SAASqF,iBAAkB,CAAA,CAAC5F,kBAAkBO,KAAO,EAAAL,iBAAA,CAAkBK,KAAK,CAAC,CAAA,CAAA;AAC/F,OAAC,CAAA,CAAA;KACH,CAAA;AAEA,IAAA,IAAM+F,kBAAkB,SAAlBA,kBAAwB;AAC5BL,MAAAA,QAAA,CAAS,YAAM;QACbhG,wBAAA,CAAyBM,KAAQ,GAAA2F,YAAA,CAAazF,eAAgB,CAAAF,KAAA,CAAM4F,OAAO,CAAA,CAAA;AAC3EC,QAAAA,yBAAA,CAA0BnG,yBAAyBM,KAAK,CAAA,CAAA;AACxDkE,QAAAA,yBAAA,CAA0B1E,kBAAkBQ,KAAK,CAAA,CAAA;AACjD8F,QAAAA,WAAA,CAAYpG,yBAAyBM,KAAK,CAAA,CAAA;AAC5C,OAAC,CAAA,CAAA;KACH,CAAA;AAEA,IAAA,IAAMgG,YAAY,SAAZA,YAAkB;MACtB,IAAI7F,UAAUH,KAAO,EAAA;AACFyF,QAAAA,gBAAA,EAAA,CAAA;AACnB,OAAO,MAAA;AACWM,QAAAA,eAAA,EAAA,CAAA;AAClB,OAAA;AACAL,MAAAA,QAAA,CAAS,YAAM;QACbrF,cAAA,CAAeL,KAAQ,GAAA,IAAA,CAAA;AACzB,OAAC,CAAA,CAAA;KACH,CAAA;AAEA,IAAA,IAAMiG,eAAe,SAAfA,eAAqB;MAAA,IAAAC,sBAAA,EAAAC,qBAAA,CAAA;AACzB,MAAA,CAAAD,sBAAA,GAAA1G,iBAAA,CAAkBQ,KAAO,cAAAkG,sBAAA,KAAA,KAAA,CAAA,IAAzBA,sBAAA,CAAyBE,UAAA,CAAWC,WAAY,CAAA7G,iBAAA,CAAkBQ,KAAK,CAAA,CAAA;AACvE,MAAA,CAAAmG,qBAAA,GAAA7G,eAAA,CAAgBU,KAAO,cAAAmG,qBAAA,KAAA,KAAA,CAAA,IAAvBA,qBAAA,CAAuBC,UAAA,CAAWC,WAAY,CAAA/G,eAAA,CAAgBU,KAAK,CAAA,CAAA;AACvDsG,MAAAA,WAAA,CAAAlF,QAAA,CAASC,MAAM9D,UAAU,CAAA,CAAA;KACvC,CAAA;IAEM,IAAAgJ,mBAAA,GAAsB,SAAtBA,mBAAAA,CAAuBC,WAAA,EAA0BC,cAA2B,EAAA;AAChF,MAAA,IAAAC,KAAA,GAAoBF,WAAA,IAAe,EAAC;QAA5B1D,OAAA,GAAA4D,KAAA,CAAA5D,OAAA,CAAA;AACR,MAAA,OAAOV,WAAWU,OAAO,CAAA,GAAIA,OAAQ,CAAAjB,CAAC,IAAIiB,OAAW,IAAA2D,cAAA,CAAA;KACvD,CAAA;AAEM,IAAA,IAAAE,UAAA,GAAa,SAAbA,UAAAA,CAAcC,CAAkB,EAAA;AAAA,MAAA,IAAAC,aAAA,CAAA;AACpC,MAAA,IAAMjD,QAAQ9D,UAAW,CAAAE,KAAA,CAAA;MACzBH,OAAA,CAAQG,KAAQ,GAAA,KAAA,CAAA;MAChBd,eAAA,CAAgB,CAAI,CAAA,EAAA;AAAE0H,QAAAA,CAAG,EAAHA,CAAG;AAAAhD,QAAAA,KAAA,EAAAA,KAAAA;AAAM,OAAC,CAAA,CAAA;AAChC,MAAA,CAAAiD,aAAA,GAAA/I,KAAA,CAAMgJ,gDAAND,aAAA,CAAAE,IAAA,CAAAjJ,KAAA,EAAe;AAAE8I,QAAAA,CAAA,EAAAA,CAAA;QAAGxI,SAASa,YAAa,CAAAe,KAAA;AAAO4D,QAAAA,OAAAA,KAAAA;AAAM,OAAC,CAAA,CAAA;KAC1D,CAAA;AAEM,IAAA,IAAAoD,UAAA,GAAa,SAAbA,UAAAA,CAAcJ,CAAkB,EAAA;AAAA,MAAA,IAAAK,qBAAA,CAAA;AACpC,MAAA,IAAMrD,QAAQ9D,UAAW,CAAAE,KAAA,CAAA;AACzBd,MAAAA,eAAA,CAAgBD,aAAae,KAAQ,GAAA,CAAA,EAAG;AAAE4G,QAAAA,CAAA,EAAAA,CAAA;AAAGhD,QAAAA,OAAAA,KAAAA;AAAM,OAAC,CAAA,CAAA;AACpD,MAAA,CAAAqD,qBAAA,GAAAnJ,KAAA,CAAMoJ,eAAkB,MAAA,IAAA,IAAAD,qBAAA,KAAA,KAAA,CAAA,IAAxBA,qBAAA,CAAAF,IAAA,CAAAjJ,KAAA,EAAwB;AACtB8I,QAAAA,CAAA,EAAAA,CAAA;AACAO,QAAAA,IAAA,EAAMlI,aAAae,KAAQ,GAAA,CAAA;QAC3B5B,SAASa,YAAa,CAAAe,KAAA;AACtB4D,QAAAA,KAAA,EAAAA,KAAAA;AACF,OAAC,CAAA,CAAA;KACH,CAAA;AAEM,IAAA,IAAAwD,YAAA,GAAe,SAAfA,YAAAA,CAAgBR,CAAkB,EAAA;AAAA,MAAA,IAAAS,eAAA,CAAA;AACtC,MAAA,IAAMzD,QAAQ9D,UAAW,CAAAE,KAAA,CAAA;MACzBH,OAAA,CAAQG,KAAQ,GAAA,KAAA,CAAA;MAChBd,eAAA,CAAgB,CAAI,CAAA,EAAA;AAAE0H,QAAAA,CAAG,EAAHA,CAAG;AAAAhD,QAAAA,KAAA,EAAAA,KAAAA;AAAM,OAAC,CAAA,CAAA;AAChC,MAAA,CAAAyD,eAAA,GAAAvJ,KAAA,CAAMwJ,oDAAND,eAAA,CAAAN,IAAA,CAAAjJ,KAAA,EAAiB;AAAE8I,QAAAA,CAAA,EAAAA,CAAA;QAAGxI,SAASa,YAAa,CAAAe,KAAA;AAAO4D,QAAAA,OAAAA,KAAAA;AAAM,OAAC,CAAA,CAAA;KAC5D,CAAA;AAEM,IAAA,IAAA2D,UAAA,GAAa,SAAbA,UAAAA,CAAcX,CAAkB,EAAA;AAAA,MAAA,IAAAY,aAAA,CAAA;AACpC,MAAA,IAAM5D,QAAQ9D,UAAW,CAAAE,KAAA,CAAA;MACzBd,eAAA,CAAgB,CAAG,EAAA;AAAE0H,QAAAA,CAAG,EAAHA,CAAG;AAAAhD,QAAAA,KAAA,EAAAA,KAAAA;AAAM,OAAC,CAAA,CAAA;AAC/B,MAAA,CAAA4D,aAAA,GAAA1J,KAAA,CAAM2J,gDAAND,aAAA,CAAAT,IAAA,CAAAjJ,KAAA,EAAe;AAAE8I,QAAAA,CAAA,EAAAA,CAAA;QAAGxI,SAASa,YAAa,CAAAe,KAAA;AAAO4D,QAAAA,OAAAA,KAAAA;AAAM,OAAC,CAAA,CAAA;KAC1D,CAAA;IAEM,IAAAP,YAAA,GAAetD,SAAS,YAAA;MAAA,OAAO;AACnC4G,QAAAA,UAAA,EAAAA,UAAA;AACAK,QAAAA,UAAA,EAAAA,UAAA;AACAI,QAAAA,YAAA,EAAAA,YAAA;AACAG,QAAAA,UAAA,EAAAA,UAAA;QACAnJ,SAASa,YAAa,CAAAe,KAAA;QACtB4D,OAAO9D,UAAW,CAAAE,KAAAA;OAClB,CAAA;AAAA,KAAA,CAAA,CAAA;AAEF,IAAA,IAAM0H,YAAY,SAAZA,YAAkB;AACtB,MAAA,IAAIzI,aAAae,KAAS,IAAA,CAAA,IAAKf,aAAae,KAAQ,GAAAvB,KAAA,CAAMuB,MAAMC,MAAQ,EAAA;AAClE,QAAA,IAAA,CAACJ,QAAQG,KAAO,EAAA;UAClBH,OAAA,CAAQG,KAAQ,GAAA,IAAA,CAAA;AACP2H,UAAAA,QAAA,CAAAvG,QAAA,CAASC,MAAM9D,UAAU,CAAA,CAAA;AACpC,SAAA;AACUyI,QAAAA,SAAA,EAAA,CAAA;AACZ,OAAA;KACF,CAAA;AAEM4B,IAAAA,KAAA,CAAA3I,YAAA,EAAc,UAAC4I,GAAQ,EAAA;MAC3B,IAAIA,GAAO,IAAA,CAAA,IAAKA,GAAM,GAAA/H,UAAA,CAAWE,KAAO,EAAA;QAC5BG,SAAA,CAAAH,KAAA,KAAUK,eAAeL,KAAQ,GAAA,KAAA,CAAA,CAAA;AACjC0H,QAAAA,SAAA,EAAA,CAAA;AACZ,OAAO,MAAA;QACL7H,OAAA,CAAQG,KAAQ,GAAA,KAAA,CAAA;AACHiG,QAAAA,YAAA,EAAA,CAAA;AACf,OAAA;AACF,KAAC,CAAA,CAAA;AAED6B,IAAAA,SAAA,CAAU,YAAM;AACJJ,MAAAA,SAAA,EAAA,CAAA;AACZ,KAAC,CAAA,CAAA;IAEM,OAAA;AACL7H,MAAAA,OAAA,EAAAA,OAAA;AACAvC,MAAAA,IAAA,EAAAA,IAAA;AACAoB,MAAAA,MAAA,EAAAA,MAAA;AACAgC,MAAAA,SAAA,EAAAA,SAAA;AACAuB,MAAAA,6BAAA,EAAAA,6BAAA;AACAK,MAAAA,0BAAA,EAAAA,0BAAA;AACAG,MAAAA,cAAA,EAAAA,cAAA;AACAE,MAAAA,SAAA,EAAAA,SAAA;AACAI,MAAAA,YAAA,EAAAA,YAAA;AACAE,MAAAA,YAAA,EAAAA,YAAA;AACAD,MAAAA,YAAA,EAAAA,YAAA;AACAE,MAAAA,WAAA,EAAAA,WAAA;AACAN,MAAAA,YAAA,EAAAA,YAAA;AACAtD,MAAAA,eAAA,EAAAA,eAAA;AACAE,MAAAA,iBAAA,EAAAA,iBAAA;AACAC,MAAAA,iBAAA,EAAAA,iBAAA;AACAE,MAAAA,iBAAA,EAAAA,iBAAA;AACAC,MAAAA,gBAAA,EAAAA,gBAAA;AACAS,MAAAA,cAAA,EAAAA,cAAA;AACAH,MAAAA,eAAA,EAAAA,eAAA;AACAC,MAAAA,SAAA,EAAAA,SAAA;AACAG,MAAAA,aAAA,EAAAA,aAAA;AACAC,MAAAA,WAAA,EAAAA,WAAA;AACA4C,MAAAA,WAAA,EAAAA,WAAA;AACAG,MAAAA,SAAA,EAAAA,SAAA;AACAG,MAAAA,QAAA,EAAAA,QAAA;AACAE,MAAAA,WAAA,EAAAA,WAAA;AACAnF,MAAAA,QAAA,EAAAA,QAAA;AACAD,MAAAA,WAAA,EAAAA,WAAA;AACAwF,MAAAA,MAAA,EAAAA,MAAA;AACAC,MAAAA,OAAA,EAAAA,OAAA;AACA1F,MAAAA,iBAAA,EAAAA,iBAAA;AACA2F,MAAAA,UAAA,EAAAA,UAAA;AACA5E,MAAAA,YAAA,EAAAA,YAAA;AACAe,MAAAA,oBAAA,EAAAA,oBAAA;AACAuG,MAAAA,UAAA,EAAAA,UAAA;AACAK,MAAAA,UAAA,EAAAA,UAAA;AACAI,MAAAA,YAAA,EAAAA,YAAA;AACAG,MAAAA,UAAA,EAAAA,UAAA;AACAhB,MAAAA,mBAAA,EAAAA,mBAAAA;KACF,CAAA;AACF,GAAA;AACF,CAAC,CAAA;;;;;SCvfiBwB,IAAO,CAAAlI,OAAA,iBAAvBmI,YAkFUC,QAAA,EAAA;;AAlFeC,IAAAA,EAAG,EAAA,MAAA;MAC1BC,mBAA4F,KAAA,EAAA;AAAvF5I,IAAAA,GAAI,EAAA,iBAAA;IAAmByB,gCAAU+G,IAAA,CAAIzK,IAAA,EAAA,WAAA,CAAA,CAAA;IAAc4H;cAAiB6C,IAAK,CAAArJ,MAAA,GAAA,CAAA;KAAA,CAAA;eAC9EyJ,mBAEK,KAAA,EAAA;AAFA5I,IAAAA,GAAI,EAAA,mBAAA;AAAqByB,IAAAA,KAAA,EAAKoH,4CAAML,KAActF,cAAA,GAAA4F,kBAAA,CAAKN,IAAS,CAAApF,SAAA,EAAA,CAAA;IAAIuC;cAAiB6C;;MAC1EA,IAA0B,CAAAzF,0BAAA,iBAAxC0F,YAA2FM,iBAAA,EAAA;;IAAhDxF,SAASiF,IAA6B,CAAA9F,6BAAAA;iEAEnFkG,mBA4EK,KAAA,EAAA;AA5EA5I,IAAAA,GAAI,EAAA,mBAAA;AAAqByB,IAAAA,KAAA,gBAAO,CAAA+G,IAAA,CAAYnF,YAAA,CAAA;IAAGsC;YAAS,EAAA6C,IAAA,CAAKrJ,MAAAA;KAAA,CAAA;oBAChEsJ,WA0EW,CAAAO,uBAAA,CA1EKR,IAAa,CAAAzH,aAAA,CAAA,EAAAkI,cAAA,CAAAC,kBAAU,CAAAV,IAAA,CAASrH,SAAA,CAAA,GAAAgI,WAAA,CAAA7F,eAAA,CAAAA,eAAA,KAInCkF,IAAA,CAAAxH,qBACT,YAAA;AAAA,IAAA,IAAAoI,qBAAA,CAAA;AAAA,IAAA,OAAuE,CAAzDZ,KAAA5H,SAAa,IAAA4H,IAAA,CAAW5E,4BAAtC6E,YAAuEM,iBAAA,EAAA;;MAA9BxF,SAASiF,IAAW,CAAA5E,WAAAA;4CAC7D,EAAAyF,kBAAA,CAkEK,KAAA,EAAA;;AAlEQ5H,MAAAA,KAAA,gBAAO,CAAA+G,IAAA,CAAY/E,YAAA,CAAA;QAC9BmF,mBAOK,KAAA,EAAA;MAPCnH,gCAAU+G,IAAA,CAAIzK,IAAA,EAAA,WAAA,CAAA,CAAA;QAClB6K,mBAEK,KAAA,EAAA;MAFCnH,gCAAU+G,IAAA,CAAIzK,IAAA,EAAA,SAAA,CAAA,CAAA;QAClBuL,WAAA,CAAqCP,iBAAA,EAAA;MAA5BxF,OAAS,EAAAiF,IAAA,CAASzE,SAAAA;AAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,OAE7B6E,mBAEK,KAAA,EAAA;MAFCnH,gCAAU+G,IAAA,CAAIzK,IAAA,EAAA,QAAA,CAAA,CAAA;QAClBuL,WAAA,CAAoCP,iBAAA,EAAA;MAA3BxF,OAAS,EAAAiF,IAAA,CAAQtE,QAAAA;KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,YAG9B0E,mBAwDK,KAAA,EAAA;AAxDCnH,MAAAA,KAAA,gBAAO,CAAA+G,IAAA,CAAW7E,WAAA,CAAA;QAEb,CAAA6E,IAAA,CAAAvJ,QAAA,KAAauJ,IAAA,CAAMhE,UAD5B+E,SAAA,EAAA,EAAAd,WAWU,CAAAe,mBAAA,EAXVC,UAWU,CAAA;AATRC,MAAAA,GAAI,EAAA,MAAA;AACHjI,MAAAA,KAAA,KAAA0B,MAAA,CAAUqF,IAAI,CAAAzK,IAAA,EAAA,QAAA,CAAA;AACfuD,MAAAA,KAAM,EAAA,OAAA;MACLqI,MAAMnB,IAAU,CAAA9D,UAAA;AACjBkF,MAAAA,OAAQ,EAAA,MAAA;AACPrG,MAAAA,OAAA,EAASiF,KAAY1I,YAAC,CAAA+J,IAAAA;OACfrB,KAAoB3H,oBAAA,CAAA,iBAAA,GAAA;MAC3BiJ,OAAA,EAAOtB,IAAU,CAAApB,UAAAA;AAAA,KAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,SAAA,MAAA,EAAA,SAAA,EAAA,SAAA,CAAA,CAAA,mCAIXoB,IAAM,CAAAhE,MAAA,IADf+E,WAAA,EAAAd,WAAA,CAgBUe,qBAhBVC,UAgBU,CAAA;AAdRC,MAAAA,GAAI,EAAA,MAAA;AACHjI,MAAAA,KAAA,KAAA0B,MAAA,CAAUqF,IAAI,CAAAzK,IAAA,EAAA,QAAA,CAAA;AACfuD,MAAAA,KAAM,EAAA,SAAA;MACLqI,MAAMnB,IAAU,CAAA9D,UAAA;AACjBkF,MAAAA,OAAQ,EAAA,MAAA;OACApB,IAAoB,CAAA3H,oBAAA,CAAA,iBAAA,CAAA,EAAA;MAC3BiJ,OAAO,EAAAtB,IAAA,CAAUf,UAAAA;AAAA,KAAA,CAAA,EAAA;MAEPlE,OAAA,UACT,YAAA;AAAA,QAAA,OAES,CAFT+F,YAESP,iBAAA,EAAA;AADNxF,UAAAA,OAAA,EAASiF,KAAmBxB,mBAAC,CAAAwB,IAAA,sBAAyC,iBAAA,CAAA,EAAAA,IAAA,CAAA1I,YAAA,CAAa8H,IAAI,CAAA;mCAE3EY,IAAW,CAAAxJ,WAAA,iBAA1ByJ,YAA2DM,iBAAA,EAAA;;UAA9BxF,SAASiF,IAAW,CAAApE,WAAAA;;;;0EAI7CoE,KAAMhE,MADd,IAAA+E,SAAA,EAAA,EAAAd,WAAA,CAUWe,qBAVXC,UAUW,CAAA;AARTC,MAAAA,GAAI,EAAA,MAAA;AACHjI,MAAAA,KAAA,KAAA0B,MAAA,CAAUqF,IAAI,CAAAzK,IAAA,EAAA,QAAA,CAAA;AACfuD,MAAAA,KAAM,EAAA,OAAA;MACLqI,MAAMnB,IAAU,CAAA9D,UAAA;AACjBkF,MAAAA,OAAQ,EAAA,MAAA;AACPrG,MAAAA,OAAA,EAASiF,KAAY1I,YAAC,CAAAiK,IAAAA;OACfvB,KAAoB3H,oBAAA,CAAA,iBAAA,GAAA;MAC3BiJ,OAAA,EAAOtB,IAAU,CAAAR,UAAAA;AAAA,KAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,SAAA,MAAA,EAAA,SAAA,EAAA,SAAA,CAAA,CAAA,kCAGZQ,KAAMhE,MADd,IAAA+E,SAAA,EAAA,EAAAd,WAAA,CAcUe,qBAdVC,UAcU,CAAA;AAZRC,MAAAA,GAAI,EAAA,QAAA;AACHjI,MAAAA,KAAA,KAAA0B,MAAA,CAAUqF,IAAI,CAAAzK,IAAA,EAAA,UAAA,CAAA;AACfuD,MAAAA,KAAM,EAAA,SAAA;MACLqI,MAAMnB,IAAU,CAAA9D,UAAA;AACjBkF,MAAAA,OAAQ,EAAA,MAAA;gCACApB,IAAkB,CAAAzJ,iBAAA,MAAAqK,IAAAA,IAAAA,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAA,EAAA,EAAA;MACzBU,OAAO,EAAAtB,IAAA,CAAYX,YAAAA;AAAA,KAAA,CAAA,EAAA;MAETtE,OAAA,UACT,YAAA;AAAA,QAAA,OAAuF,CAAvF+F,YAAuFP,iBAAA,EAAA;AAA9ExF,UAAAA,SAASiF,IAAmB,CAAAxB,mBAAA,CAACwB,sBAAmB,EAAAA,IAAA,CAAA1I,aAAakK,MAAM,CAAA;mCAC7DxB,IAAW,CAAAxJ,WAAA,iBAA1ByJ,YAA2DM,iBAAA,EAAA;;UAA9BxF,SAASiF,IAAW,CAAApE,WAAAA;;;;;iBAnE3CoE,KAAS5H;QAAG,EAAA,gBAAA;gBAC1B,YAAA;AAAA,MAAA,OAA6D,CAA7DgI,mBAA6D,KAAA,EAAA;AAAxD5I,QAAAA,GAAI,EAAA,mBAAA;QAAqByB,yCAAW+G,IAAA,CAAYhF,YAAA,CAAA,CAAA;;;;;;;;;;;"}