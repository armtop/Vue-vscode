import { TdCascaderProps } from './type';
import { PropType } from 'vue';
declare const _default: {
    closeBtn: {
        type: PropType<boolean | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
        default: boolean;
    };
    keys: {
        type: PropType<import("../common").KeysType>;
    };
    options: {
        type: PropType<import("../common").TreeOptionData<string | number>[]>;
        default: () => TdCascaderProps['options'];
    };
    subTitles: {
        type: PropType<string[]>;
        default: () => TdCascaderProps['subTitles'];
    };
    theme: {
        type: PropType<"tab" | "step">;
        default: "tab" | "step";
        validator(val: TdCascaderProps['theme']): boolean;
    };
    title: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    value: {
        type: PropType<string | number>;
        default: any;
    };
    modelValue: {
        type: PropType<string | number>;
        default: any;
    };
    defaultValue: {
        type: PropType<string | number>;
    };
    placeholder: {
        type: PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    visible: BooleanConstructor;
    checkStrictly: {
        type: BooleanConstructor;
        default: boolean;
    };
    onChange: PropType<(value: string | number, selectedOptions: string[]) => void>;
    onClose: PropType<(trigger: import("./type").TriggerSource) => void>;
    onPick: PropType<(context: {
        level: number;
        value: string | number;
        index: number;
    }) => void>;
};
export default _default;
