declare const _default: import("vue").DefineComponent<{
    checked: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultChecked: BooleanConstructor;
    closable: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | number | string[] | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    shape: {
        type: import("vue").PropType<"mark" | "square" | "round">;
        default: "mark" | "square" | "round";
        validator(val: "mark" | "square" | "round"): boolean;
    };
    size: {
        type: import("vue").PropType<import("../common").SizeEnum>;
        default: import("../common").SizeEnum;
        validator(val: import("../common").SizeEnum): boolean;
    };
    variant: {
        type: import("vue").PropType<"dark" | "light" | "outline" | "light-outline">;
        default: "dark" | "light" | "outline" | "light-outline";
        validator(val: "dark" | "light" | "outline" | "light-outline"): boolean;
    };
    onChange: import("vue").PropType<(checked: boolean) => void>;
    onClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClose: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    checked: {
        type: BooleanConstructor;
        default: any;
    };
    modelValue: {
        type: BooleanConstructor;
        default: any;
    };
    defaultChecked: BooleanConstructor;
    closable: BooleanConstructor;
    content: {
        type: import("vue").PropType<string | number | string[] | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    default: {
        type: import("vue").PropType<string | ((h: typeof import("vue").h) => import("../common").SlotReturnValue)>;
    };
    disabled: BooleanConstructor;
    icon: {
        type: import("vue").PropType<(h: typeof import("vue").h) => import("../common").SlotReturnValue>;
    };
    shape: {
        type: import("vue").PropType<"mark" | "square" | "round">;
        default: "mark" | "square" | "round";
        validator(val: "mark" | "square" | "round"): boolean;
    };
    size: {
        type: import("vue").PropType<import("../common").SizeEnum>;
        default: import("../common").SizeEnum;
        validator(val: import("../common").SizeEnum): boolean;
    };
    variant: {
        type: import("vue").PropType<"dark" | "light" | "outline" | "light-outline">;
        default: "dark" | "light" | "outline" | "light-outline";
        validator(val: "dark" | "light" | "outline" | "light-outline"): boolean;
    };
    onChange: import("vue").PropType<(checked: boolean) => void>;
    onClick: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
    onClose: import("vue").PropType<(context: {
        e: MouseEvent;
    }) => void>;
}>>, {
    shape: "mark" | "square" | "round";
    size: import("../common").SizeEnum;
    disabled: boolean;
    modelValue: boolean;
    variant: "dark" | "light" | "outline" | "light-outline";
    checked: boolean;
    defaultChecked: boolean;
    closable: boolean;
}, {}>;
export default _default;
