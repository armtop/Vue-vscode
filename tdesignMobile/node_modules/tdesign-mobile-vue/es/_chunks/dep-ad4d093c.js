/**
 * tdesign v1.2.3
 * (c) 2024 TDesign Group
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, toRefs, ref, watch, createVNode, resolveComponent, h, createApp, nextTick } from 'vue';
import _Popup from '../popup/index.js';
import config from '../config.js';
import props from '../drawer/props.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import { usePrefixClass } from '../hooks/useClass.js';
import '../shared/index.js';
import { isBrowser } from '../shared/util.js';

var prefix = config.prefix;
var name = "".concat(prefix, "-drawer");
var _Drawer = defineComponent({
  name: name,
  components: {
    TPopup: _Popup
  },
  props: props,
  emits: ["update:visible", "itemClick", "overlayClick"],
  setup: function setup(props2, context) {
    var renderTNodeJSX = useTNodeJSX();
    var drawerClass = usePrefixClass("drawer");
    var _toRefs = toRefs(props2),
      visible = _toRefs.visible,
      showOverlay = _toRefs.showOverlay;
    var open = ref(visible.value || false);
    watch(open, function () {
      context.emit("update:visible", open.value);
    });
    watch(visible, function () {
      open.value = visible.value;
    });
    var onItemClick = function onItemClick(index, item, context2) {
      var _props2$onItemClick;
      (_props2$onItemClick = props2.onItemClick) === null || _props2$onItemClick === void 0 || _props2$onItemClick.call(props2, index, item, context2);
    };
    var onVisibleChange = function onVisibleChange(visible2) {
      if (showOverlay.value) {
        var _props2$onOverlayClic;
        (_props2$onOverlayClic = props2.onOverlayClick) === null || _props2$onOverlayClic === void 0 || _props2$onOverlayClic.call(props2, {
          visible: visible2
        });
      }
    };
    var onClose = function onClose() {
      var _props2$onClose;
      (_props2$onClose = props2.onClose) === null || _props2$onClose === void 0 || _props2$onClose.call(props2, "overlay");
    };
    return function () {
      var attach = props2.attach,
        zIndex = props2.zIndex,
        closeOnOverlayClick = props2.closeOnOverlayClick,
        destroyOnClose = props2.destroyOnClose,
        items = props2.items,
        placement = props2.placement,
        showOverlay2 = props2.showOverlay;
      var renderTitleNode = function renderTitleNode() {
        var titleNode = renderTNodeJSX("title");
        if (!titleNode) {
          return null;
        }
        return createVNode("div", {
          "class": "".concat(drawerClass.value, "__title")
        }, [titleNode]);
      };
      var renderFooterNode = function renderFooterNode() {
        var footerNode = renderTNodeJSX("footer");
        if (!footerNode) {
          return null;
        }
        return createVNode("div", {
          "class": "".concat(drawerClass.value, "__footer")
        }, [footerNode]);
      };
      return createVNode(resolveComponent("t-popup"), {
        "modelValue": open.value,
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return open.value = $event;
        },
        "placement": placement,
        "attach": attach,
        "showOverlay": showOverlay2,
        "zIndex": zIndex,
        "closeOnOverlayClick": closeOnOverlayClick,
        "destroyOnClose": destroyOnClose,
        "onVisibleChange": onVisibleChange,
        "onClose": onClose
      }, {
        default: function _default() {
          return [createVNode("div", {
            "class": "".concat(drawerClass.value)
          }, [renderTitleNode(), renderTNodeJSX("default"), createVNode("div", {
            "class": "".concat(drawerClass.value, "__sidebar")
          }, [(items || []).map(function (item, index) {
            return createVNode("div", {
              "key": item.title,
              "class": "".concat(drawerClass.value, "__sidebar-item"),
              "onClick": function onClick(e) {
                return onItemClick(index, item, {
                  e: e
                });
              }
            }, [item.icon && createVNode("span", {
              "class": "".concat(drawerClass.value, "__sidebar-item-icon")
            }, [item.icon(h)]), createVNode("div", {
              "class": "".concat(drawerClass.value, "__sidebar-item-title")
            }, [item.title])]);
          })]), renderFooterNode()])];
        }
      });
    };
  }
});

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var Drawer = function Drawer(options) {
  if (!isBrowser) return;
  var root = document.createElement("div");
  document.body.appendChild(root);
  var visible = ref(false);
  var props = ref({});
  var destroyOnClose = ref(false);
  createApp(function () {
    return h(_Drawer, _objectSpread(_objectSpread({}, options), {}, {
      visible: visible.value,
      destroyOnClose: destroyOnClose.value
    }, props.value));
  }).mount(root);
  var handler = {
    destroy: function destroy() {
      destroyOnClose.value = true;
      nextTick(function () {
        visible.value = false;
        document.body.removeChild(root);
      });
    },
    hide: function hide() {
      visible.value = false;
    },
    show: function show() {
      visible.value = true;
    },
    update: function update(options2) {
      props.value = options2;
    }
  };
  return handler;
};
Drawer.install = function (app) {
  app.config.globalProperties.$drawer = Drawer;
};
var DrawerPlugin = Drawer;

export { DrawerPlugin as D, _Drawer as _ };
//# sourceMappingURL=dep-ad4d093c.js.map
